%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: report.dvi
%%CreationDate: Sat Apr 21 12:17:22 2018
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 432 648
%%DocumentFonts: NimbusRomNo9L-ReguItal NimbusRomNo9L-Regu
%%+ NimbusRomNo9L-Medi rtxsc rtxr rtxi
%%DocumentPaperSizes: SixByNine
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -o report.ps report.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2018.04.21:1217
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 395 2017-03-21 09:24:38Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463BD7A6E60B2D50923CE1B20E379D439BB
3F11E907177CA545CF4557770B09A4AB3D8E5E056A25E1619AB8551D3AF91DD5
C45AF9CB8A63E29FB8AFC7FD6173CB81DBA26CFD56C946A2667805EDDE605201
2FB26F4FD96BE01DD08C7B48C7D5F84C2BCD06B9552E7A2F78DE222F6FC57CA6
679207C76C99990316D0FA54A40356855A07DFFDCE24FE63A6960D7E8DC2F5F2
71B2B1EC80832C19610BF72467ED05FA3176D749B1B0DE054BF89CC326F4EC9F
9C5C9DC629FD6EFDF4E8E588B46FCD4C42E9DC8AAB37AD1CD85504829F4836E1
4164B6866486299CCA999814D6ECE2955C0A478117831D1D8CB2971989FBAABE
DBC9A9F7ED8F3F5D67D9ACBABE94F08BBC60B5DB9D19965C7429458730499815
430927993D1E3D64D048CE34560BBF01C461E2A4B517B03410E59E6C7C4ACBD2
09E5F18DF65430114234A31AD7C1FF486172439C132B32E829D10EA96B0B6B82
284D6A75198D3709DB41B886F9E10F6E677232C4897D51AF17B9562670633526
DA154F2FC6BEEE6F4E37946F0C146B9D507EE79DC7A715CF4D65DB2565952B90
69C91EF0CDF28573B5A46E82845D720CD9A585D91DBAA8F8DE600D7A0506B431
F2E6897F39AE539E39247A5CB3F9C37AF849E9C5F06214A570113F0938A05F99
A4407F6F47AD0F9924453442B3E3F610E2CA7AAA3183BA6DC887A6AA9551BF52
F3B53341C8C9CB450A2CD44F6ACA8A6279180A4873C309956ED1F7957F95210E
59D0EEA9C3401B1B713E91C363CC73F4EE8EE1EDC4194F1012D8BB958B694068
1AEA50C7CCFFB6FAD3E1E05C7DDA076F4DEB286987618DE990671A53BFB72993
B36E3217336A50E7120DD85CD397A23D014A19E224E9D306E08A72F305736982
2AF1AF0D8826199CD407B31FC8B9CD9158D75683FF2A3E8DD5E3552A086DCF93
D46F459B26F7198F2EC8BF6D6B3CECAD769F7C519A5409D83925090E76D21578
4DC6E104FFE52C417923A6506DA4120D39DD9578C49BA4A412FA2B41E3814B7E
0474556E71938E5D9D54E5DB2555F97E80010DEAB5DCF1DF5BBB4A09B1C178FC
0CDCF673285865A780FD3230412F71403E1A9C7F57E8BD5D2381474B872DA7E4
740F8BBC91379EE330A885FD5F1BCBA9FF1D01EBB4F43D271F5B16796B6E9FCD
7713EFBAFE92F7A269A1480B694F268CA7C9F788B1C2B92F34A2778B4199C0E2
16619BCE067CC1BAE1C8E075529DB5B5BBE95032E362E2C41D66407CA4D0F1FB
B0C7F6B423D128008F78DACE5A54C0709EE0B4135638A7480D46FFD5B2E65604
1B08A61F84FDE32AEBF03AC97361CF8FE09891CDAEA6F46DFEEA9351E8962EB9
E31E40227DEE3016D069002193BD2D205A4D8014775442CFDC02C6AE9B33EAB8
7F31954A83DF4079C7E0C50FF9180D9DFD865FF57A90115BD53B96D9931193F4
613A542FD6620D00411E5D502E789A1B31DEC7E8D9D51D81B8C0706630395896
ADDF932280BC552ECD04E2C33B76A0F6172098AA77F63C12D7E0B65E32A8EEA6
90C33C850A8BC6988EC6DCA9EB2B662A9898569E109DDC4360597F576F530038
C608B4DDD70AF777F109AA0D67B9DAB26FB40C92CA7724E0B740889FFD769E88
41C253DF46826293BBC82A03368A146B6E6ADDBCCD9AB1388C2441C592948505
6667685AA083A42E7A000AFAEA403C1CC10B5A82D3E0122CEE5CB9917F25E936
A74502912C9F3A2941BA3C225745507CAD8883821523AAD5074072E8439CC687
9314E532D888A530FD9E69AC60D04886D1063742D723EB1C06B948EFBDEE7B25
FD8E586E601605E5777DD29330926A2BD4FE87EAF14699937EC5E60FFB3A13AC
9FCE3CC664E6C158013003017DCF5691487401BBBE7A88D4A81D1A2A0A7BE3CF
3E7821D6EE3743C40D8E7393DD611F3CE69BCA8C89D156E020B5DB5EB2C98072
DFB9ECB5DD57B8F6A9665E9AC8453D975EE9E1920B99AC765BDCFAF74B590C3E
091E07BB4C212D6AC20A004ADE067DB349ED3207110F91C06BA6C0331B9B970B
6725B751F6787EFCBBBAB8D328036023B7C59D51157696CF8B2B4492F0CFADFB
4F74C5CDDEDC71F3607677ADA4A20A2168E225ADCADF2A3AD7A4788AA38CB2EE
8097A410A53E66F8765090E7AAE59D8053AE0BA8DB3BCB2AC043781D390CC7B9
3D114349060759E600067CDDEEC947C8ED684F4F0B391CA938B48D2AA2E7021E
29FF39F1AF72B1BC18DBE1A9FD79B7370825AC355CD86B96483913C5F5795B0C
FE3CB852BA8C7FAC395E4C664328DCF1241E39637EFDC805B266B49400174747
3ED6CF5BF5C0579654DB07E4ACEA3666110AE5DED90584FE86ED736BF39169E6
0361E855D2FDD909F0C999E2949ADE888AE4DEB8FC8AB803F2107138F9ECC8E5
13128683C0B844B4DDF1F0F8F982CC9A28D579434DEA270CD062F2FB4E34D6D2
2F42D0183EA76BFCEF311EDFA0863804214177583F338365F5C0F7D6C6933B07
08D2E1C9DC1B33E6C661139E6557454007CF1F54D4C2D3463B820590546B9315
12AA015585BF3EE444A7F201B20F79ECBB951BF1781785213D442C049956A04C
B4C3DD6BB410658E1B06DCA548D41AC58850911D4D3A68BFC4988E2CBE46B808
969D5297401F7ECC7509B4399402007542211B44EE1C72727E7CC6A042DBC201
1D60A37981BEEA04EF134D2709B24E10F6A831AAF04FE09209487E324D3D0624
F94540BB17EE50DE7F287C29FD473CCE5CDD427175A7827DF7BE1AF29C59DCE0
D9FAD18B8B740631E360AA6DBA1E54991EC7922725600CA4EDDC45A5A65A71E2
68231C07EC0F3AAC233753649689865FBC10316F6EC4806316954E90817A74BF
FE3E728E89F772148ED6C631EA3756CD081B13EDBD57ADE9061B071A43167E39
2EF9711093F37506243059083F5E07E64B7D5A7A10FA9F292A5BE886F03E8058
B5A0E09897D3113B8B5A81CF08A783DA89115B624663EC82F5B74C09DA6000AE
A0E6D889D1905DA91D815ABB1F31A89E687F868F1DDF4243C94B698B88F2BD87
BA7F6F9F6CEB790F8B8128765AB73C171F3CECFBCBECE07396C75E26FFFF4A4E
E9BA888F5D34B15D34C6A1004D6E8CC3DE2DD7207A3401A5C15C902331005C13
5F769B79201D4D8FC83EA9A2DC241800E0723EFE9842008FF1BAB5234715BE33
9E833414D56ABC1359E11AEDDB7E926A3CF80EFDD586B95C220E641C5B5C19BA
7D1B240F0B6F9E76070C0CBAD8C11352903A8FEC0119ED1A13CCDF6766ACD562
6B5EC04F4DE6F4237FC68CAB8E57247C321C91DA2EF7558D272A4646327AFCA6
D3D7471BDC030290B03C9F7F7646DE8EDB1F6A4394424263E5C7C2C6ABB02150
195CAAFEF9D57149FB68DAE695CC8D5506185E0F627D0C64DE74468DCE0FD420
49CBE85820A8AD34806F77AABA48CD601358BFC654F3C7516FBE690A6781DD99
8E960BA243AE4A79C194CCFBDEAED491A64635841EC36EBF5A75BEC8F6DD5F6E
6843964C45B67D8752DE1BCB7FA34A09E1574F0618500EFB399A4E977B54D75A
0A63D485FCC987A796F51CCB0F6C7F85853A2E55C1F6110A42D0F70DAB4D6B7E
2187A3BF218A601DE8AF71499D39CE0567AEA286091BEA9D6A443A594E418E61
7DEDFC0E4077566D4E41C8F0E927101745E472943531DD69B4A14D977F37DAA7
77C9188179305E51C97073905D5F48F6F789FF4E73AD9F901D26B920CFD6BA64
E896EDB2ACF366069ADBB1B9CA71D37CA91E08E1C53C079B8BEAA3E0F907086A
A23BCD6FA040645DD6E78973BF5EB3A43922976B876293A1ADE396A61178FB60
18521C35916C55DAB7796F0B834D002B4027CDE68CCDA488E512ED42B09EA4AD
FFD4F2669AF631077357823282DEF5DEE159B7A35CF2EB584638E6536B814222
65A2016193459195B6B186A789C87AFD0DB69A3B675CB059E1ABBDDFA2DC3D36
87C97CA6B38F8ECA4CC6C598D197F79EB18ACFDC6FADDE911D32A5ECC0F8D4A1
2FE6896F728B23AC8EF731112120855861698126AA71F3513FC2051A3CA7F341
64660413E66E1FB5B051B7D6BAFF9BEF119123BED8DCA6132D764E1646D4E174
F8C12DBC8370ACD7E891E045743BA616BB6040D6ACBCF38CC4A173A9AD262519
1BBCC59C9B0B656D037E82E12B021B03E306A7F84B7EB6D57CDE999359CBEB48
1C3F754886AD6D7641B544181E89CD7563DD60C306A8F09FE0D3E9AB47B84815
206E8564A2F9722FF34D11B1FEFDF9B6907AF110A3C34857B27701596F1F934C
C10C3DA6DD616D16CF36ADC709C0E59914461749B0C89AE4BDD4755552B5AC55
C80BAB2DB4BCCB89ECA998D7C545BB7A4AFA307D7002DDBFAD5EC2A3B1E05387
6B2B3C7763C141B5BE903F58BB2E12A36C94C82D5CB7815659E4E4B93C15007D
C022486CF3C0C1463D542E698B1BB2F7991CF984A4B01652B73F41A5A7F16E7A
8B139A5FB3EDF228440B7DD8D11FB10DC168A704C2C70DAEC483F6942AC5A85C
FE645109B1AA5FEDE99BBB3800D471BB00CC095596BA2842A62135305EE312BE
8D26EFEE6C233EC5A266A4E50CF276D6C72089E7546F9C13BEF0D3BDE9B4FB0A
544E3724406EEB1DF5C90100B2DD5D0F574CB53765346C6C986ED65391408AC2
951E9B2F2D8105728D4A9D713096CC3EC44A7BE8BC31602FA8587728AB82B8CA
393025E249EF76646ED678443E6F7938AE92145C20DD5094BD9B1BAD78CFEFF5
DDAB9BF0BE0F732F55DC22ACC3195E9040B7DEC0E8B841F66D618C41AFA24A92
0699BB186755EFE2BAEBA81EEB00628E24B271CA2D732373C96096765B570D93
A80A32481524A45C3A4D5E9616A994F5C939189F47A80D0640EB00864519A8C3
331440C0CDB4D5083CEA3A0C38E38CC0AF0D044E8217BA5121CC6684A846F6EC
145D9C07C2EF65EB4C4605D8F6BE9D6B3B2D46EBB90253B022FE6E2C23125BD3
F3B34DF64167C63459C1F7CB2A4680179869CFAFFB8AB32BB21F379C19E271D9
D0A7625F2D535767C1C42CCCDC6C98B81268F3A0B7F152ECE16D0D9658621E72
88FA0397F54104B632270A8D94A6FE5301C3AA1AC58EEF04D43B359DEB7C5223
5D3536B384F212E95C6904D366D027DD22E1D3FAAE6175786C408953DE7F4F03
4C412380AC50D14BFAAF74F48C353B01BC33FC98EAD0C4B2D49363F7DE7661DA
D7F442E2B99E9C70A8A9DEB13A87A5D75F72E231C18CC398E2E9DDFD75DDC346
45A0D1EB294E9A500EFAF82424D136C6C5CB08E9835FBA9B61497213FE653C37
8C9782EC47D1C97CE38B2BAFBBD439574AB4B2D2FE9182AF5E9E54478467C98A
9F29DF14D72209B7C2F2A7FC009E2E6DF623F64DF737129BB809BAD577F10698
EFCDEEEDA99C75ACDF7262119E30EB5529BA0F105344F63F8367906C7C46C3CC
D89FD680AD8A3EAE60DAB7A37106D82ACB04FF27375E7158D89312F847268BA3
206A6A4B6B1C2F99407C4F4340CFD8DF90EC359E6C7BCBB853E3E6613A50442C
0931AC2696DFE390AA7D648D8BBE2697D76BB559A04A543F85B63B4C4708E60A
E4B6849322A5BEA2D47573279E1ABDA87D595BC7A090F67BBE5C59F3239E6C4A
A31A7012BB1AE6221708AAF92541E0138C4AD745393EB9BF09B3E6FAB30DA7F9
5CB8BE5AD5CBBC96D8885197BD3C9EDCAA72161704BABB0FDC686EDFE33C9643
128F5FF5214C855F3D510A1A5ED9B037886731217E975CD8A94DF42179BCCBB4
52305C67EF644AA3F1D66A8F96F8D02487C0A8870868059A7CFDB8321B09BC70
744C18CF4E89F80CAB3A55341CF94A20D04039982ED5E56649C0A1A39A0380E5
385BC5FA2E321844409FC9537DA5706C4CF3772237BF80D6DDCAAAEB5DC70E17
7C4CFB20CE1C17249A28B7C05C030BDE7AF4474275706266E620FB36A7822163
EFB8287A6DE8EA5563C4CD9E7DA7667C3D2EE70651819CA3667721011C32DF2B
D52D6C1E1A651537765618987C784D97BEAF5CAB35EE2506E5C0CB443F311036
B38DDAD7A58848624EBDB417D2D58C3D7DAEF3ECC0E0D0B3AB656B5331C77BF6
84E69FDFB5211257DFF2427F31A5CAF2150FC9F961C806965B33C03FBD11E614
A4A5B889CB9386B64BBF8D5B72ED312C83FDCEC6233E9751BDF7CF62B36A97DD
3172E4DC486E10687EB059D3B8A8ECBC02B26688996E9745030171081CFE3DB8
53B74C89ECDA3A07157E109E6AA3F8D19F9642068C795F102136016EE266358C
D2C7F4BD26AE36D35161B3EB6C40C5158EEA97E6F0B250C561ED8CB6160093F6
5153149692FA00E1D0A02746B3FBE4073C0218CF7A7CB7BFCC245EB6B587987B
7C1C0A2A5538248214130BAA947777A18A4234206D6F4F81EA8E09B337968A02
FCA013268DAF8CEF2A277D9F0F8229E041D85DFF60479439BB3BCC3BF8D4CFF0
6C5B946E21D0F5A799CD011CFFE4CCFF1BF99329F26862C433ED083A90179359
B1061AD1A1AC1F7D05D239E05AC334F1FE95D4689F7553DE7432517CCC622B4D
FB391216B3B2A8AD78864BC6BB0B4290FB60D0D806F91732400FB4DE50AE7BAE
C2D2943120F9954554DE75BFF2FB97480C34FFA45321196CDE5B1DFB9DBAAC09
25ECD7C10796076E0C2500C6B99123775D2A7D2B050799182725C5806296BBF9
42428B0AA865D5E828D61D7937837DF8EE32DF68E727999B33096F7D99247AA8
5BBCE4CC10D064DC0AF98514E4E9108C79EA1D22F7CD9B9E8F36A78CAF36D5F6
240BFF595E24EC771A6CFBBFC1F6C1B64632B2FD4D5E4B6EEB4741E6BFADB7D8
C8F1DEEDD149E7EBB446D57205983872C58A3EF67DA6C91EC1945FC4A88CF34B
06031E95B7655B5AF313C627E28D1EC27F41355460BE4E0C5D87C9921C1EB578
35B2EFC5EA91F0D55F12510D622A31F90E200C99AD4A485CBB496ADD7520698B
F815D2630F6CE30B868A49442F310ED84C67A4B44832C8531F25B6976BDD84F2
22725DEE955CE49F6AB93B0C2A2ED5CA8AE7D3E2182C6911A1E45937795B5679
B2AFEDCB110B274DF11DC247AE691D412C38F334B5EBCF1D8C35D5F5D81A6145
8293AA96CD68C3C51EE3F21153D1E6DFCB130E3C8FE9E5F3DE2BD2DFA545A711
B2BF58BAB1D382CEC2720EB861068F0893C12431FF2740DAFDA548CA959B01AB
B787B5078DB3DE9178318C4746D97CAE77CBCC9DE13BFDEFE14D18281EBE00FC
593B2AE82FEC4023654AC2D637216E043117D9F336A6A5C197291272805F462F
143598C02D4BFE197FC2D01E08233EA881787A0F346A71D44C69887094AFFBAB
60249F6D5B0321CFD9C11F848164CE00EB93CCB2BA30F77AD3D02A71F7134880
5D0AC33B7BDCBB8DE5BEC1B2283BDCD349EA093EDF38E887D6F20A41AC0EDAE8
3D419A9C1F8EBE330E2F14E57D62F8C890D69230D0C8858D2DD39BA0B1B1D25D
996214A247BBBDB50946432A4EEDEF0E3BB021E1FE2A443AC56D261C67F5A8BB
B5BE7C741B53206FC27D3F8F01F464CC98D3CCBBFA93D2D5ECA28007A0D24C0D
993E9F4815BE1857F79BBE341F5FDE40E7235F8BBA09B2496A68C8D10D3F63EF
1B5DB35F1F01152A19C1E7D9FD34CC72FA25A5A01E882D8C05005EA9A3FA7439
AAFE387E04627D06CF4AF77B3EF273DAED605210FD730428236A5E44F1D09EF4
C24C4C655DE063ED20AF7DA98DA1315318AEC3C30D8AB6457DC332BA227C1284
D872D98123F01237EEE5CEE0514FA923C4AE233C40E7B7CA3784695449F18268
B879651FE79FC065ECE7B1E73DF0A6D55698ADE5DCBB3F0CFEA141289EC756B3
682CD1F390E9C2221CC0EFE708109C33F2F865EE7B4A7937EDEDF6F221678739
60F9F568C7948B2A8F7E6026B9309909A1F199CB0D471B24D43AB0996AEA3AF4
651A9EDD036FF922DD4EEC26B65B3087E6479127B0A95AED1056DD3F7360607D
6638DA263A58F606AE938284BC0A6CA59EB9D3A119F30BE7CD282D02D5DA69AA
20AA896053BD616B96338585674450AA0A261F661FA39765F008782057DA8D2A
399963AF20A6F60B505174A1DE0A8FE27425D2AE291D57D931114C65F4BE3FBD
539433923882D94F90EDEAC8A3A8DCA72E26C987F09AF3C604313E2CED446F5B
5130189570147B9B69CC7424783F97CAE8B0B5BF7C93F1B7E133F3CE574A44A0
C8B129D6E5041083A38A0F478AE6465F7F11D948FB905A29621828BAF56F8440
4F1A102728CDFCB78231DE173452C064274402464216AEC0000BF23A56FBFBFE
F3B4AEB2C77AD8AC8E3688A0E75144B91C1615653900F8A4E2B034711A1F59A0
976C188A3AEDAD4BAB1F9D314C448A39AC07DBAB2ABFE7D6342B5BFC8621A2D2
C9E82E85F53E9FB1C7148272FEA40B1F1CD35C1ACACC0153B785079B523BEE66
77B2A964B65A5A94E245453BB4B1D2166681A3F549AF4CF77E70C06C1514FC9F
E0531165BC84C5770F43974BE0BE30982AD2AC4E11139CA93C9B8C01EDEEE327
1B46771A3374FD4E5194B7F611F888480312792A775F2F6E42D82C460F5522FD
FD158F4177AEF0B44D466103BDAE0D6DF3697FF03B553CB8575A607D19E71AF5
CD302837BA49E58F8E0BFE3AF52FE0609FA7DF61DB5F15EC186975859E069F70
F572203A8D036EE89251243053215DB1D8C1E41016F1D8AF95902761F7557FEF
701AA67B20A9B019C760B2BBADBC204C8237CE3B50F0179B0131D04A5371A304
4A8D681D5CF65B8A8EAA8DAF5E7953B691D1DB49A2CC545C3BD36DBE762F32CE
3AFD466A62F3BC2E38FAB8F4341BFAFEC3EF8FC6B785358F1BC48004CEC93F33
A49E7445D47681C608E47AE29C02E3B7D57D8AEB1916F8EF1341A126980C7890
794A85EF6CE32D227A9537AABFB8B88ED06339E508D2D18157D598E87AB11021
7CA3753EB1AD965E8A5A3ECEEBF44790D57FFB857764AB757C234946EA6BD3CE
8D3F778F1B9A3CDDD92A83F444CBD9E746914E4613130324766191636FBE4143
3632A244D2CE9B0728A28AF519FBD1DD67533FFA8606C718A1E73AA06340D0B0
92EF04DA3268A9830D9F9B5BE546B1319EE6FE3172F3F912A00650BFBC32146C
F429C7D109D80B8B725550CDE32DA12CB6CC36D1EDBE356E1CA056AC588BA431
1E9C2FF30C70EA2E7B8E188E2A58CC4E77F2F47FBB4EB2423B73BBFDCF47E25D
40A6FD2DE5B292D9F684D65D43543ECCBCEE77B3A11F2CD5AD93AA761F8B4444
C18065871D95F47905F1A998608E8882308A8A49D02495921DB13915116E6563
EBC8A6BFC44F1D2767BD0D84ACBEDFDCF3BC90CBA8188815B2E47B79290BAA73
4052AEFCAEF6AC0280E232C2C36EEC5098AC5930545B63AA9E1FD26F26026BD1
B23D756F3D3EF313DA6EFC55D3AF10B647078CA66EB88EEA8C382C60053B5D33
28E0CBE8D4C577F61CE985B03F1E9D6D221E06D39B5ABDC96B4FCA84D7B38B27
32114E137774FA958C0EAD15CC7E2A8D2D65A5091D4A8F3936DC2CCC56346275
614BC1A3A61C59E99D1B38E65A28397F992408E3E8BC939B8E2CBE46B808969D
5297401F7ECC7509B4399402044BD8856BE383ECBBF2719688DD2CE66583F82E
C2C2417283868EC3E2C56EA5C8F822C5612DE4B0BB1FDE8BCA9718DE68C506EC
835B86BC9D168701DEC9254C9D324C306556730E3E8985968F63B3D05F76F471
A468E5404B5D7AB94E4C153F264048F377A11D08F846F08C8A2516C472A8514C
A08866F5976301EBEF2ACB3D7E918DA3B0F5106ADF3EEBE554A6C69F8DCB8868
5B93211543FC1DD682A0DB18152D56A72E4135ACEA7F54655A7D96459B18FDD0
867A9BFC321844409FC9537DA2EE360DFCDC44787F71D921C7D78A40A0294E16
1A3971C30C9D29989D2306690C9115EC9C4A0C28E33ED8B155CED74370BB5770
529AD7B86B99B250BB8D47D1AC16F4B8696193FA77BF6B4ED5C5C25F098EE928
C73D0E6F2B209BA791971918903CEEE4B7E94C4CD160E676E300BCB614395101
9E9F254AA98BDA575E9B3B16D7D737DD0247632B208A3B83181BEAF99B10B43E
A1BC0A15AB6F0C136BBED6E020CA50ECC603866C7FC5A1A8A411A597335E6BCB
62888AC8539B30E1D6E4F13DA61378549CD94322236097B284CD72AEAEE10E42
507303CB5C9E77517319917E035B2D8E9D8C05B11778948FA94928834BEE3A0C
7F66D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF13E7E9076BBCB72BCA6D80
E9B8E781FA5DA60DE4E928567F822A9612E5908DDE75628CE253F50B77A9DAA1
A0BD583575C1F2DA4318DB4204677B4C30652DA10155F9C4590BB3A981DCB94E
CFF2363CA48B9E48F64056886EDC0B417DACEACF1625BDF902DBC4062BE896D0
0A355A1D2F94B1D60827C1A420DC079E3FDC29022FE4AC2173B7353B4BAE8BD9
4DC0BFDA6BA58119FCA2570964C905425C637D076960F7565B29F58249A86943
1C5855EDAD967F6128B2D25C2043EDDFFFC82B10AA26FF5A13CDE23412FD61FE
2E8BF5591455CD9CF416060DD6C02292174D9E73FB582EAA12668CEAC6AB1BB4
8DDFFA9D28185AFA7E2796C885A846008DB1331F099A78D18EBD99FDE44BCC6C
2C288EDF1BCCC1CA6E3E1011D4C67FF2E3B6663F8547D3A8E869BEAA30586095
D441AA8BFFCC044E3CD07A62D76A2357D560EE6B97FAE4A0A3F7CE81E355FF91
15E7D4FFF7A8AFA937F213771A85DEF2DD655D0C506C3FC06255015A8B8D5F26
C9B6EA8B860478FAAB2131B59EAF62F1578C3A66D673E5CD3EFE666EFB08A232
7C82B92E03B4984F064A48AA434A8FD68632348ABDB15BF1FBA76493C0558F31
C05EE2388D662DE044C4904C375AAC68BD9E74A77B577ADBBDF5D7014CCF37BD
F03299A254061F240E634C7BB8085ED506AB1C2DB30270B2C4CFBE1A6DB614A3
A4B0FDB44B42D503497C0FE4A74067B0F8F864DFC3C9D8C72E516C2E088D8AA7
38050EE4E3CCD06B18657A2B11A6B175FFBA37863D1C5643CE078EEA01AB397A
F125B11F4786E3BA045459CCA0371DF8C771C1B86064E6AFB89A0DC91BB5DB2E
445B31DEFFF7A687062783CDFC9842F3F700C818C4BAACC587E1A5743924A5C6
856C6AFC4835828487BBC276D8682D0DC22B2805AC9545EC96399392D3501241
DE1AA718592362740D79A8129CECEC0972F459C3EAAD0A83D22EE707BA4CACA8
0DFD50CC3EA55406A52C2302D6B501274798F4DA37457508B352AAFC87B93DA4
83411E6A0B2CD102C4B0E20E64177B9ECB29A51895DDE3615B17D0ADF9706A95
E847A62BD9066749039D2227D4FE787480FE07FB21FD455335ECEE7993448180
0C89A18F592DC478587C8ED02B2D68CCA136D97F686803AB1AE4C366259234CF
6A9BADFF909086D3618DA51A1F4466E458FA670A5D98589F2889C2BDDA7F27C1
6C7821EDDC2A0E4E78EA382A4E7BE9B7FF9F5084050AE57D8294C0964006A1C6
F5878C0402FB66CE705F03D7AFA1B77D6EC23E85FF51E25AB7E5A797C066C04D
AA62A736F752BA38A483943D48A8BE6E161B71B2408ED959EA0AD798CD07113C
4269F0E79872F8371F3D9BD771759C5EBE5AF00418165F8FB26600DD796EEFEE
26E3DACCEA9E09F5F30EF9D31A3982418EE72170F0CA51B1D570C52D1434DC00
17AF6815844AE8B2666D124721E9E02D6CE8CCE49546C43E363D1EA1894FA785
C8FAA5B144F1841B244713D4B5CF95D84BD928BA2E2ED887CB1C9B6A56570727
9066B39265A696EB5A49C0E3820D00C6AD95135F45D5A7BE6CA2121AB403494A
2A480BD0AF2DCDCB17126596D00A9AEEE0CAF3C1BDD39D94B74E821409E7315C
D4D076DFCE82D8E88A2F0FC89F0A6EEB2AC5F9141A1E45CC6E6BE2D1BD9EBA57
6B61B3ABEBD8E4D2935F59D64393210C05E6E04538184D56185C12F27FAED642
32C2746442BFEB9C9C6CF02A2C2D57EBBBDB158192D5F0BEA6169B7092E70AB0
463E34C00DBBF8D19831D4B502996B6CE94C924B82802CB80FDC70085C308FEB
6958F2A378F6A5D984B0693D4779DB29211D8900F34B8298420E43B871EE8055
D1512396FE38B20240F3E431A58C95E265B4476CA98C919915FEA609178435A7
7579ABF4BFDFF2F2292BBF4A54B383085524FD253E009A093AAFCAE3C4A2369E
9F684539B99F54ED467249E7EA02992A48AFE9BCEB0BA297FB3838B910766AAF
61251F06DE55F320E59AAF8859F17FD3BC05534D00A03286BC13CF00F0D63746
B366DF9FAB4E11D91926490019084F21B8D03BFF6B28DAD824949A252036B921
090DDCE1C2A4572BAE0C3DE432C21B92CE7487663F7E7C4C9C8FA62A078F3A3D
5A973BC038B187BC3D8A8C17B5E4E1F555F697EEE2D5BB9B10B58B2426D847E3
27055EC25BB66FAA947F069CDAE2584D603D906EC7632CB07565B8358C7F96E5
6E3B673B3D6DF0E48B46C2A1387B441BD9CDBA56B82ED3D78C163AAF0A50CEB6
1ED783321A5EF8B28576C148C289C32E4C0F5E753C4DA70FF6DD27C36CF5AA3F
6BDAC3EA7ECA225F13515860FF6C6340D0B4F69CE5E1886E9D287A63B88D4D0E
5BAB0FEBB77B5E9FFDD049AAD7FFF415DD98C73FAC901ABEE22AA7204AEFEE80
4E31EC370C249CF516E261493A1771562E7DECB53905956EAE147F89BC21B983
9127CBFBD17A7DA853C97692B5016A44E3309223746D4BB9AE685466D7000484
27A90E6F96E9478B61324C115BE244F44A7B8A296B4A3F9BBD39D382EEA80D96
73AB7B9147B25F0352BC6C5A51539A33A28601805722F09FCA818D7DF8761C7C
731757C5A4A8F7F82A0CF2DC2AD2478DF732F85675B0D020E93AD31596E1FEB5
082D1468F7CC4536BC03D0FB8AFD1482100E2B3975D847790022F764C49FE9B4
0B62EEABC15DE6385AF2893311C6D972FD9D8EF37507A9CDA067967A43B370F0
058F2F68B20F6FBBDBD9536D5F93C8C6DA7D32DA01A2B5F750ED1A437D0625F6
340574CB8FFA11066B06AC54556E0FE4B08B7A27BCA18D72363B2AD20B3D355F
0E5BE888C9963EE8DBDB1A28062C690FDBC0D707816F91DD4D10AEAC21E45840
A70EF310601849CB8BF8039AF36DD30A058D915C445EB0AAE78EADC2CC50FD66
F702D89DACE7F2111BBD9FB5FD338D25CBFFB3EE2754D75ED05CCD56988C01BA
30B5CB89653087804711461CC5CA71FC79BE9E5D996EF69926EC104B47190F94
3EAD6DE22FC1FC8C4F06CC049ED47B3E1BBFC4359FF346635987308C5CDE2F34
2F387C6E48EFC3641A8860B672911A739B28E57737738618E02FAD6D7D8690AD
75616D7CDC45EB6112C14C2DFAC4FCEE139A00F1503120A421C3C173C7EFC41D
87A7C881370EEC5BC0C9295746AF9F780B5B85978516B67A36D546E0CEC1ACAF
A07B868A1E791A7942187E0D1C390CB8F11ED1CEC84CE6B7720D7CEF525F408B
6CE8476D377CB8ABD8D9C7A3FA4E5623968746BAB6C6C4B3D59F29F1F88BBD75
966D5CAE80D774839F9B1654CD51034E9FA960E5B815EACF9C94DBE5D8E384CA
3C4F4EA392ABEC007C1A0BE1A08D7346E98C11C7CD67987EFCB96B984DD85E02
FA86A00804A6E31B5B72E3147A2368C0CC8EC9080E1DF4CF71A19BCB71B9B3A0
D8F425C99879BD5C9167D38185D0B79E5733AB4ADD12EA2952835D129DBBD373
BE78F5A35CC1938E36BDC9623A4C0C7FD1DD5AE285E122C662647293D14C0D8B
D332F0E85B573A611BCDE05782DBD81DC767C730649BC6D5A95EAD0AD822DC04
98DD2514E942EC6CEA2A6E3BBC490902AB55E368D4B3142E8041CAEAFDC38E18
91CB4217754821D00351F38D57861DD3EB6220883B1BB00F8114F1A2343BEFAB
C9BFE7E15365BABE34AFC6906B0F8EAF6B54E34D9002323764671EC422DE5406
7E63286CD5C1E36CC9D64B11BBAA0317D61F50DF977F2EEE5A3E1C929B76E20A
FA4CC9B8CE75FB08C1E7922F534DA89E0F43F5942B6B190AEF7A458EB6620FCB
B037EAAC2B6E278DC98757D74768913EB1AED373E14BF75E950227CD94D47596
8AE8EDAA3D57AA5FB9AAE7AC9858FB3B2A0918A39DF372A2B79CCC2CD8440BFC
77F94BC3F8D36B16184DC7C78136D039A86CE046A5CFC7D4697B1D67CAAF00F0
D45E16293055C024718222B01C0B1A79245A2791956516EFB7265DB11AB3E6C8
5173F9C4B709D0052C06E7A835A2FB36E45E5C6F3B5FD3479D7A0AFFC7615B7A
32CD91BE95C3E85A2CBDCE674171EBF7AC2F515F9F3339D06C129150BE21FBC4
272B93BDFB79D1579F56BCC66352F87BC757FA5FB2B2F5D7D5F41C07DC182D6B
62346F2A02EDB241CFA4039DD9C845D4A6C96E6939A4307F9686EA069B9DC913
CFE20C84DD85A9F0782F66D2E497D49078AA9B047A442561A4581EB62D3E7E78
3BD21F2C52ACAD2E96014D1D22FD178993C5D844CE0A0DF974AB38EF04D7BC1A
9F1B3A7ECAEF04B03D23E56FE76585722024E7F4DBEDD1835DBDF3217FD80AAC
8E79C6B26E3D444F350335B3D9F60F63119EC9B1A7C4658595A074581A03076F
C3C7BEE5C61B3B06AE76AA738DA4E0B19249F6402D836F5F1DD031BAEF1680DC
B164B47466DF16297A7E3F2336AD9060D3042EB9DC8AB3224385B649AAC2C6C0
C097D02DDEBE9C483C220D7419FE704CD703F331FFD86F7C21701266C29DC09B
9717D3E324D160A0AA5828F820DF9C85EE08793D0C31BB3683DB729778F2FCE4
2F6AE2F906E43FF4BF504487AE89D3F35D4F01E85E421135D96C5050C0FF256C
3D5CA22B3C96457E1ADA82886FB7B526C50654057C0A06CED0060A00A4686D4F
622C2FFED044E2EB23121A088ED33D8FE48ED1576B95B693275E2E96EDBAED61
AC3C4DBBE9AF418B6ADD311C9E70F3C44BFC5426536804FE9C73111E35A0EBDA
6E8185DA5E26A4CAEAC39715969E705B6857CDDF64190E899E42A4B7DD6BE1C6
6AF9CBB86E3C668B0368241F08533376DE6E5551D2C3B617F29E16203E433A1D
6DFCD8CA52C20901F88098B1C8DABA59B6EA72970A7A9AB5BD9ED2A17E312A36
F37DF53F97EC66576804D417FC61230576896EB9A99E17B41FAF43E7147A593F
EDF62729CCE78D3F12472948EA32CB3D1D15329A0E65838D27FD6B64C51CABE5
1182349159AD0E43855A5855BF81500EE6E4EDF8420591F97A6BFBBD8DD41449
2DD0819F9B4279F096F0D360DC15A8F76D6A277A71030A2C1BEFD70266DB3F48
55F4D8C283B0807FF486EAB2E3D53871265AD50220B8082161DB7DF71A8CEF65
8EF33773597A1DAE21D6478A38AF6D4003F14A4A297911606815DE8872088437
0AC5D0E8346198038B348437D49ACB171F7DED84911CC975D70BB34F382E9F79
34D44286713E9F1330D57765000999B494FC06F6E5A136128D06DEB2F7F1E837
88C9726DA87E7CB8699CBEE3EF96F797A9CE5CBC30B5E1B879D32138A54226CB
EA10B5C346A55460CCDE8776473EAAEA02255C7A66EE64C956B8191AFDE485CD
C2A055DA237C3AA3E082254E05C97DA8DC92F83BADBD5B5C6037C43C172F4B2F
CD304929D57F252DE35C7DE263F56210312C9C1A7A101257D7EA6B5391059DEF
48A4D907C9E1B1440A5DEF0384BAE22649D8D5715BE2E823B37287643614FFC4
212FCF6EE1B3F233120ADDE8A37E16A3B1A76E209084892CCDAC3D670BBC1B72
AD661EDF8CE2B587068C704C021B0DE8CE062F3A725D37F0151EEB1A36CAA417
4D2B32CA861CC1FB507A8EE7F8B63DEF195EB2D8C3CCE21911588CD78B5BAA33
F738C14AA475977A2FC0AA8F3F62C712A48B00B55EEF16CE114B88CCCABBFC4A
41BA7135A6B03DD590848885AACA25FE628F8981AF7707EEC35545987DB4B9B4
D24DB936E799AD7632F7E501F9E4CF9CD90A59E6CC257CB562199AD2DBFA6424
744D3F4D5EB116B8D2619B661FBAED95E1A3E172CFD16AB53ECEA4B0DA6C4908
F71D2A819BB5FAE57677B7A50E8077AA50D9EB791369F41E5640F8CE82B15D97
0CDA45310399ECA4BF85CE665297633610183803F0B12CE5C478F0F187767CD8
A6A49EC85986AB41601360CFD43B777350020FD4C6D1ACA22424FCF84FCF4BE1
2D7B5C0787CB83D91AD4F1F586D39E36320CCD8D43720DAA85D4B4C1D43C1778
143E2090F57B065FB71B19807A7C03495A8302C38883D37360C62EF1D3EE444E
3875FDFEC4716B8DF00D88CDBEA930CEDBCC068063FBE16CFA14DDB9381A899D
90B8F9DB6EC96DA920933FD8B2A58618406F1B5A2B6C7F441AD12126999F0BA2
60A4D12AE5AD6E7866AF04D75F0C2552D8DA64E487B2F80B72067740FC11FB86
452E55704E893237CEB968E70CE54F429DABBC3B2923B7EF0E8361ED9AFE286A
9CA75DDED44B184729574A93959A33B16CB4E9599F7A5AC35D5C9D2CEF690E31
5EE64FA9F7EB955E060443202F7632923A530B72C73F6AEF09F9826803DD2E4A
DFECD5F0BD8CC901C07849FC856B6048634952A0933CEBF4171F304CC9AB23B9
446CB8ABFBB2E5B2EBDC8CFE181D295C1D743E4B75461BBA1775195A78DBA91A
B5A04A6099D921E72B5A7E650D8833907F510096A89EC5EFA389FB7B3CEB126A
440E4B88937625AB15958C01E5977532DF138C072F87C430A8AD31805657D072
3566686321B5C38D000E88C6C949D53B014EBB444CF7EEB93591476A87BD64A6
986826EFF0CEC2CDF138D9511256AB4BAC3EF8B61DC97C1AA31DB567909D127B
6A8A12138043E2BF809728DD99C1C0933E1B356E32725FD5462B3F026137F935
38FC74EECDDB4BCAF818E567A2FCB5AA0FC1B3BC16EF18FBCA8238C336B84355
2A2D0CC2D9BCEFDB9BE6312CD41826157BB9B8575DE577B1881A726E3328EB41
0BFA59EA0E7872377B898EB9FB5CBD5F7CA91AAF4E532DE2C3E4061DC0000577
B62B79D3D1DD099E17EE38092A465880765FDD62F58C58E23A1137E3FBA72DA7
6D47A63B96BA2E9EB4266D684E49B97E46EAF5D998AA85011B3174AB25E00EEA
A241716F6CECEB0FFBE25F00F133AF6B87B8459C149ED56325598904615F368D
4B92E44C0CE26ADC7C7AE48A10EECB0D798DDB26D963EC0F55014233E9593C77
85BA37397988B14F6120B325CA30BBC3F5C88F2A55A6B874D69108CE05EA90AD
938F5D5082FB7D4408BFABD620F520421D90BE61D0E51577DDB56A80BF27CC63
B094DC999D51A1E06D44718A73FBEEDCD694D81C40EB56976F92573566792B40
AAED1287E81D3498958D54B5B28C501AECAB8905BD02BAD7D80F94F3217289DF
41E5B639FF778D20EE402254F51E8AA61B155B4636286BA5D2BDCF4BE9E1837D
F3BC0F8E155E4720F4AC9B978F8B87680891AA2D8781817C009DCA55EBCB4A52
4BDB32ABBCB8D88F8A66EC4FD76D013F7EF3880B253D8556278CA2B7F542BB15
CE87A13A3A97710549992B5F6DC12946A5A0F934E2944764D6BDB9F231345722
094821CA18231C4671E8F3D046CB162C7964A8886A25CFD3234AF730C4BABE4B
19C24FD55EB4AA2A3A2F5E84A15168721EF6653E8FEB54EE70DD74F87204C2AD
8853A78432A3BB637277487B4A93E1B082241DD9A946642BDAA16970B9DAFF3A
0EFB411EDBB5DF0BACD8C9A91BFA8CBB01503BA71F33D44F52390A9DEE866B9E
EAACCB016329CBE580E10FCB71BFB33C89C0D4A833BF21D68B92B6255FE99A8F
92E4B950C329539C114F74EC0BE13FD40DA2FC9A1C7271B3EB6770D9755F85F0
F9F6A20F8EE798C2ECCEC647697E2A41853238DBD1D6405FCAAD72C29036FCC0
1FCDD51BD674ADD5438C8AED490DAEE84358B608B4F88B5FB1928C1A39EA7A3C
420420FC9EF46375348550FFABA89B44BAE3B1D449EEE6EC6BB27FB089ED4874
74791EC1F10A1642834FA854744231A95766A28FB5B4E5C7B4C6A3631782A5B8
2C3590CF0C6FDB6E6B9205EA1A637B8FA13A45FDBBCA3E39B499344C45B0E619
5F7FB9634A7F45F9A67C8B45B48B6D599E9339312A8B3CC3ECC12106471E6E32
EA657F739CE39E57204D870192AFCC2AC4940CFEBBA785D5707CD7F3CC8F9BE7
489D686317E386F9553236CD2D1072B6CD5C9DA71234252B8ABCA33BEDC679E2
DAC9D78AE78880135AE1D2FE6D32BA3AB9171D341BE0C7E843171C2D18364C62
7C314A6D180BD5143CA1B56A21B1C72A6D0794BD4CB5DB09AE0F975D09D81806
A22E6C288FB5B0EF111878AD87C1BF615801F6319DB349854C7C677B7DE0D545
AFE0B495AFAD6168E5672105C68886697F055FB5BC7BBB817BFDE14B1DABCDA4
8C5337226B6723A2432BCD74EE3D4957251D7B4F09F8A3B529E671D4F6653BD5
0DC83DEF4C5806AC392AC5F9485E03C695C7F464B2999666E899FB489BB0050A
B19E531B5681D280EDBC25505ABA00CCD3F74B39E50AB2B22BE913A56D96B034
25355B2E66B2EFF55CBB4C9EA444D152F9A0AC2CC3C53B2B799495BA53B7B5F0
A5884C37BD930390B77A5C9AE46C5E53A986C18E486CE451BD7E6DDB4F19BC80
904AE11B31B15990EE7131E4D4DCE3062F4EBC4405EAFD8A166D7AA00B14152E
A81A5C8384F30AEC28A258870089637B9B2FC2B4D8D693A58BCDBF1416E9F4E8
932B8A066AB715097646E839728C29119F68A3911A8D1BF565D5EF09CD86C36F
18166FF61808583D3AA9CD543F1A7EBF3D9A4DEFC8E6F3D9B5059DFC7857F2E3
1485EF92A56E1DDC4C2CF1BC33F1FB919E7300E7E2527528286C671B974CDC61
E33A5FAEA242C19D9FDA6AD1978F8488601A5410268E28689F5468B271300591
8D98F6D9BA4BF7AAC2F8DCAEA7FBE6A400EB4ECD15E8DD2ADB86DE6DFC2FF49E
03B1C24D5916E2A67B2EA4E2A52CC3A17A2F0CC80F431E94D369096F6EBE6CD2
4ADF05B8B61A76A3C4251280895D52987B9736671805883570074D72FCC0E86B
7CF8A667DA036572CD00E19C7556BDBEF22BBE180AAE32819A81C7304B99AEF0
DC8F766F8BDCD12FCD64B0A340B1A269F234CF7C4F94B450F0AFAA549F48D52D
CDB849D63708E441D5CB2A99651F63AC2515A533128456F98B8120A1998664C9
7D484C6328CA5378CDE83528AA8ECC949B972748A821B89F3730B440D91E06DB
CC73BEFE6328FEB8E348929F35ED40A2E88B41F8EF0F86E2FE6E05BB3E073127
7A27E21322565C3CEAF264958C550C33B7D503982779D7397B0DB28F7BC6897F
FDF2135F5E9C32299F5381D5C8BBD30220AE6818FEB7C34B12C9C91F6C3752A6
02ED87A29830FACD1399D5FB443E62BF02CBD28181E61E5527F0F756C8233C08
4D4E42C283F443E90960CF961E22078FA3E34217B2411CE426EAD630289545DE
F81D5A0838FF83B5E4EA0BBA7FC28DCF52F98F1B682F068BE5CC503916A0B024
0DA4D91E80EEEE7E07ED00F5FABEA631F35A9FDBA300206710C94A6E28CE2551
BEADDE31D269C32E049B7356A0DF6CE4202FC3965275ED915FB6434679B930E5
3E337F73A730D8FDF706EF248E7DCB015E0FB7B14086C0BA2613E0582BD41BF1
26437E533B6BAB575A954F023B651AED6CD16EDDFF884B1FF6EE52C5F11631F9
2A1EAFD0C6A771809F09453D22811E0133AFBA18F8628E2DEECCC81CA3ED0589
A5F37D86352C848BC0A06DFCDF56D1712C7DD37359005E9D1D135BDCB5B8BE3C
A9C49501F39FB2AF1F29D84187DC35004FA333E8C1D2432A17E108404E2BEFF2
D3AD690CA7E5AAD79CA150AD94D6F6639B8E4F9E07769D0889472529D7ED337C
35A5BBDE1AE31BF5ED98EE7AC16DB5B834FA097EA2349DBD1728E1EBF18756DE
7170EDF0E7749C680F264B68C20DBE990149BDAFDD8FDF25B0F6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585F4EC4885783EC27EF4D1102CA
1E6B6BF88E699F74373394783BAE280A5AF61C7216D2289EEAA8379EE7D87A92
EB5879BE4EF03B9AEB3EE0F9BC0F3E5C2D06D80F724CE1681D5B258702019FE5
2BFB989F80F63FFD1470AEB4759AAFD4DC3147EC63E317951A46454B745938BF
B2786ABAFDBE642C963411F03B42C7ADBDEE54A45F917410D95D6D99B372D223
600DBB4489E38DD4A5C20C9F81169CD3AC8E20EFFC27ECE0E3C0AF12C09F289E
5A5F8DF8487065AA61F7ECFD18EFBF27F055BE0733AF0079569E4CFF64EB1201
2214C6552E59A0D4FB4A0B10CCEA6646210248C7098DE2D3CB07383AE2E2FE67
65F11F5216359423A95AD7CA9B8C59645F5A8D84FB1C177AED502F9F054D68CB
91DE60D05224C9DBA79A84DC57C2EBDA8E422A9550A2E12CBC7FBDF5C56C2B03
F6BA4CDB67DB6AE6EABD6524510DC60CC9AF88B03738EC50A6BC7F857B917FAC
81D8B0118E50A9D1626B830A357F32DEBE2F5CEDD56FD132FC9354FBDD0A6CB9
C78D821B3F22045E7CDE9AB12D3014B690C9FFE1421AA0F101BA284D079A7D06
D8D7E20E0C2303F11CA9C72A278C045B1D2572EC08DE1424D24209146D047C31
F0AF1C2FD75C48023CC0FB7B49A95CD2A2871510FB3661D8B5F4D9120A155D32
DB5C681FB0B884E6404384CB70707F4F0F088114534F6D36E4D580DF6B172167
56AC75CB0A6B8FD43C58490E5807F21D683FE6FEB1DB4D034DB5A047B8D57476
9188C065333142FC5C99973AF211F2A2A05F5A756073B85FEAD22CA9EC4DFAF3
F3491D3024502E3DF760580C0612DDCE51FBE826BC7060AFA7B353BA40AEE9A3
67F6DC44E6CB1DE5A8C04AC209B2B494250A56CD261B5EE00CAE37C5309AAF1F
221B705E04B6D7F2981E12B27D7F693BD4E23BA820B6703763ECCFBE447D9EE3
C28AD8BFC937C6EF4699B2533141EE7DB67AE429BAD5C0D498B9897D53AD9391
5697DA12FD09495802776FCAFF3118CD2EF94C55049792FCFFC0CB7DD8F2A80E
614A758F81C22813E17E7BF45DC5AF1E9B08909DAE42BC856C8B7E685B0ECEF6
80A11EB7BB3775A6BC1B23F4CD9413D853847B32CDFD1D372AD5863A42BD66AA
79841DE5394BBBFE6A7D86DF50DFB59E53117FB9612D754105BA04349627B12E
7DCA49B3D3646204CFA8DE394E30CE2D4677AA83EB093F5E47890610DED5E999
88F3FAE4916A810CFB3949E44D94A8E6ECE74E2B18FA0D5A7BAA3856CE1CA620
1F5E1CE9307E66B7679895373E39D2ABEFEDDA36A6C39F744BC84E03D6F2E525
2F032E6079246DE5C1AE09546D3C6CA8B9FD94E7E8F69C5344034B2D2E5C848A
78E14ADA7164B56BD7004C1FC5B794522EB3A0885FF690EA500CECA473CBD688
3006767DE85D2083201C2C8E640C70CDEEB5ED4B3144A550F519627FDF37166F
75A804FDE64BAEFF787F68EFE6799CA6C4917FDEF774EA569CA85AA1887B6A01
EDE4FF81D1D13224F422DFFD3B72A16868AE54EFB84434247CEFF8DA4B1D1B02
9B67CE9029093EE594BA5CFD9F86253ADB37FA07848BEBC73F8A935A53F6FBF1
EC125FC8E452B6C8300B1B29DCC967F2066530A44471540012A019EC65DFBCE7
6AEB275BB6C23CB5D0A73CCC6B41AAAAA7755FD7F8753D6BFBCB20084A073897
9EB978A5FEC7D64ED4344DBA3349958A3E28F627B384B0E0A79E537428AA2F5A
E5419B06FA8DC5C275AD105FED6219A74EB481F881412879CDDACC0623445A42
55618584DC27C67ABCF8805F7E27F4F27153E7890DC7FC2A3EC2EEB770D340DF
393ADFEF1FC0DA0619A01134C5FD79752955D168B1351CA800EF6353D0D49D6F
12246B7A514051E6C273C5B044052117FA268F47856731D2B3347F514E973975
AE845866983781CAAB4FC2337BEB55ADB110188948F57E11C348C96FD7610145
AEA0D7A89F9D218170F096EA782E2868E2F8F0544CE29FC955B4DACF9B3CF797
4163C864040C84A88C06352D1C09B2385356B16213096B6A618A08D3E983DF2B
4A00857469E0EF9F5FFE73B1FE638AA47EF6D492C04EAC77074A0C7765A18CD1
1457723C8662525AAF73BEEF8A9C101A22DBE92BDD543E035413566B56FEB131
91E998FC5C11E5FAA70FCDE85F23C131D8C6B024A8863EFC0CE85F7E21D4E931
4D07150C7E075CEFDE98BBE10C6B0BF0A640F25AFB09EB1F428E2730D3152D6A
4F639D0B81EA310E284121FAB3A35463DCC6A8A41AC8EE73FE6FC4B8215D8DFE
7E84289C3869C81280BC081D9118A53F5EE7E83358176C29C943DB1CAD6AAD50
1C8777A845F6E4F584122C62C90BEC03F13845FC36CAEE6C3D067D95F37BA1B3
3A8546386B61903D7978771D8C525A411653B3E78B79A234C9BECC29AB2EA9BD
26F3742CB6C8826B278AF0298D4AD1B6F85C68EDE034BF915A60F7C027C1D3F8
DFEDA9F7341A2D7EB2E0DE91E3131F1E218AB9968C77CFAA501F2B4E990F3EC0
1A43A51A97C577203C3B1CE599E6064DCF24EEDD268492A6DC668CCFE3DD033C
3B701B69473B0EB6D71F44BC90A121F1FF0D9D404DD35B26C94EBB989CD5ADC8
7E5657BD97EA464BE21CC0167D756F90EEEE345AFD995484C16F41454111DC8E
ADE50709F3B9163F8DE60A4579474883682C351FF9A5635B535146BE6FAABB48
9BF46B457905A91173BC23B3D1657C9E8DCBDAB522E1F4AA4008989A6A3E6CBF
678BFECAA67DD99A17188D5BEB4262440A9191148AC5342A93321BA6FC521C2A
72D9F9319DDC6EBAA6A760B59FAC71FE3C7FF6C122C2ECBB711F3B3DCC76048F
BB9B8B867BEF92DC98A7114D82061080619C1F2BA294679C8BF2309041EA7A3B
6BF6112C35C2663421E605D7D0867122D69C6DE282B970BD0F46A9555032B91D
32591A8B8A3C237653CF4006C37123F57E7DBEE5E1695784944585E9C78DAB33
EFB300EEA0EB6092D899BC4D2455EAB73464E08CE7A91010F5CAB6CB61B9899A
703BE6350E17C4F44592FB7612BE5F065ACA336C8E68585AB5F21BD6743CB154
09AB90833C950DB5B321BB58E67724679ED08D2EAF6B900A9AAE7B07A5EE20B9
F647BEB37C7BB260937BC426384BABDD8C235F2095B7882B0C7B9C405BE29F36
800896656627950C003B3C092A010CD04178FFDEBC57D5F0D09B3BAA65ACE8C9
0C36DF2BAA9BB19E305E10C82DB2413C41BA0E0E256314C80950FE770AA22EC9
F18A427A8C749C4C442A4F6AFF0631881B443FFC5E20358ADAAD619A438ECCAE
CB132EDFA3E829B60FEF344B6E823AB1D4A0B23A8C455BE6EF471BB8E631DDC0
970DC304A252193F1D13E6A0AEE6AF34CFAFE414BBAB6B533C0C4B10ECD0C976
C362648265684C8875F735DC9FB12DBD71F812D15F10D438B01B1D225947BE39
F450F94732F8C9B4B3682C0331241D8749DF42FD6D487F64BBBB9C0A6C881E7A
C0247834B45325F8B196212ED4423EDA32801D60361D7DDBB2BBA654D1B59F35
40FD2D40464999EC589D76D2840E0EA6F8C53F76D632B85C492F9C5F9B652D2F
050900B4E7A5FDC96D7A82F7F6B0F1C385D6F49206112EA7B246EEDC79B350BC
B9510D0114A3C127141A7DFBF902DAB2017AB6FBAD50B7CD8D932A6F017C4DD5
1D3BC169CD7A7134B86634728598FF9C3E10AEFA3B037F5C0B19E6CBAFBAF55D
A23B2FB4A86C8AD47388BBBE8FBCA23F602FE1C58244862973191CB14BD23F49
A26F9E5F2109BE88D17BF9FF2EE7FB7DF90EB200C30D07B0D63BE3AC9EFB69D5
73230C8909B1597C80E755077CF5BFE161C8612D6627C3C0A30E0DADE1036F40
125A9D357C79A3DD44FEA54215F520450DD45CD8D5FAAD59B15E191EA5951AA7
AF9424ABB01E9C67335560FE4FD6C25D69DDE72B7679DCDC6B6433991583D7DF
43418EA28AD90334A388E3A1AAB1C76DE8C2DA3690CC0AD5D9FBE0AE173982AA
D0B3B20B43E6DC5E2E2BD923BB431EFA46E44CFB9208447DB745FC42D3D1386C
2F6840ABEE2087B46F85108A91CE8692467F36E986D0AE77BC92EBCAF6FCE4D3
5589F273540E68895E27659CCDE2CCDFD65A48E8348B0C8B8F6081F9F54221CE
530CF215321ACF1D8BBBF0948CBB55DC44FBD1760283850CB1A6D92BD2ED9FD5
4E56A40BA5B30278254E29FEF6B211BD4356914FF31EF22D4E33B72BD8EA8373
9FD7DB91967163946DB98C7A8B8C8367ECA2839AC00EAB746B3E6A119B0E7CAE
91559DC6A5B3BAB6098DAEAEA50A28342A2B7093230F869637E8C5CEE642DC19
323A6EEAFEA964B111D784FAF545B7276291BC686E259AB39D4CF8D65D356BA3
830916BABA4C595F312E2352DA3B62B0E4C6C67496ED950E115BCE395CB0C7C1
3EDA24D7E237E61A5DA5CAC5A9003F2BA74F45089BC9AF135276C81E07E74A53
ADEE1CDC8A35E72CE256A7B109DB9045D0B903ADFBDE46B3123ECF3733A72EA7
E213057B1D5E468B4D4AE9C0FC147B9755E7D57E26825177E19C20D8BA8B475D
47752A2730AD5D0FCBD06558ABABAD3F3E2877042BA82498F06207B3E122D345
4207990D3B81599FCB09999AE94620AFBE408CCE61E2422E2D98821D3CEE9842
9F1F27A168B7E299B2071202464D81AF9190DEC0A959A891FFCDE592CF208D8B
13ABCDE732232333E5701C02BF684781562C96F6A37F088B4D8AC81767C1C5D9
26FB86BF48CD0CCCD09AB6D1CC91E7169C8761D58FC2FA2113FDCFC91BB687AE
E0BE191124B0101A2A36AB299C4A68C578B38A1CCEC1B1A465974C34A663CE67
36253E106BC4880037C0CF02923DA3AD4B54CAE1D8A22E924C1AFFBAB42F1895
F8D7614DAAB8338B66EC8C2DCCF7DBA9A03387CCF7AA475BB66C669965C39A97
56A2974E3B7F10733325A8844A61BF0EB1FF0D930AC314870AC4DE4CD102FE4D
314B6A2A1ED7F7AF44C36529E1839EA3A77EB2FA115036AA30A0F80336C1D60F
23B91CCBD7E131E160156FBE77E6F971B9D462A763C37FCD8EB03A9D3757E14A
FB347F6C220A89F6F158B3CC670D60B0DE8B55E4EA0ED503C7B55E1FE989CF0B
B55EC84C02CFBB04C0608395A9C2BA9A03945E029527E917F17E5515350B360D
86A6335F4E0C6659CB155111FF2286AD7AAD30DB394D570DC876A06C08E3CF3E
7821D6EE3431B16DCBDD75C616ACA08F8F6B3AA1DE3502DDFE975204BEC4E6F6
3A24B5A2CDB46F84ADAD8C3E2ECBD23436F28C2D3457FD0474D5B53DEF41DFA3
B1458EA90D682EA52D8A9E972D87F28AC71EE4313B770F16BBC7B6597756818E
6ED50B6720484C9E50776DDD85A0AF53F7AA75C4E3B723821BC583F8E1AC65BD
E386D020794BBEF5419C255B579A43CED4793125FC12ED5950239587A886D0B1
BECCDD030C6637EC3537F62041E9416DDDBBCE38AAEE6208BBC30C3E9A4DD293
812D62A3CE35B0CCA9BB1565C862211EF7D08D15C1A318F77A31D388822BF39C
A8F016953104BF24A803263F673220B705D9924443227D7C6F010C92022ECEFC
E816591955B78C0CD5DECD58E6869C9B8780478E7880B72467837CF7FBA37829
5CB2796B5E04D757ACA1548A033D7E357730B706BAC72D886322215C3626397F
6DA17D2763E1E13016C35E317B5A72B2F2118E7D15CE58596999BADD56E3B054
9583439996D196BF51ACD8C29744D595EEA190527D5962ADA8F4FDA4265AEBB1
0859E3064761D4EFD15E39E451C6724232A6A1435023A806A31CA139C7290D19
95596B32274E61B3B599B4BC8ACDC02B7F2DF2F3637EA85C2313CA7B09EDB12B
D349D2B05F24D079FB7CC3142A41EF5A701AC6DC162B8C80162937FE954AAC85
35CF46D04D5BB187EE970C963EE1FFF0FD65E5C5C88B0E6968000828CF9444D6
CA851509410EFF8F4DBE0C0E582AA031AD5E35290CAA5DE3A730486E89FA714D
F084E7544D8A7615C94779528CA65FCF7FC1AA96D6B481782F80A9CE7489DBD4
2DC2A120517AB6264F7C547CA753FAD2BA89B350007FEEF30173252F160F625D
E03B97D7760A52DE5A04A4D8135821CCCCC5D94F47F5E034483F7FC1BC6AE632
15E74A377B0157B87DCACDC87F9D2587664EC53361CE9935D1EAFD4894A6FCD3
ED1E8C6D0C1026341FF72F89912A9A3C294BC9EC079BF51CCD126E147E4F7691
688FDB8466326D31DC3FED9625DDBBEEADB867DDB7FF0678FA9E5675B9DF64FD
A4CED248E08BFD87A911D19232096A66A3B79E7942082A69DFA7F1756D39C28D
5D074AE523CB9AD2C26CFB2671B72D15270CD8CB1D59CA2D8EE46B5A66BCB6C2
10AF684333A64BAC551A3C5BCF5D59F14F692AB281984EE6A56410101576B49C
E7FA185579799B6BD986A2913E3B917EDF3D43F47C6F58D40D789E5626336234
0FBA8CA49B9AD210E2B4D77A98E60CDF648F9677A2701944FEE0E51FD5BEB501
5BB08B07A7EF81F6212DA66ABADE88654BF8FB8E7C6A9B279E8C50DC9D113445
4DDC883F670B4913D7636AAEB43F388663FDE92797BB16CF12A44DD6922E0385
0464844A3C56E69CFFC1DF788E0A5F7324DDEB5737ACDD5FB487F02003C375DA
26BB94765520A3577B7F8EA6A3B2DC090D118B40FE0E15AD22D7B8C8EE9EC782
9D0FC12D46530F5004F063AD76EAEB8F5C424DA21E6354D05615CF5F8A43A0E2
C69FAB881154AEE8A4E5F77FF878ED07C14A62E48C6D48AC160A682C01CD5FC1
58B7CE26113C0552D3502F86FDCDA93C67C57931D3575D263E4153D275B35DD6
16B8EE30A4995C4E38C0D2881D266C5212F5E9471EFAF2E125D61FB011C8BF9A
79F4DF0F83D532C9C58E7CE853CA25CB103919C95EFB4E1951963FF98ABC1F5B
7495A7BB0E423447A8D65255FA9CDDE9581EBF67716A9CA3508BE76D118899A0
C723154715788710BC4B225847798CABEC88FE2276D85628659134CD6E03B1DF
42B3D0DD0248EF3DB1F3DEC03A0637F1C7E2E2D2B93F780F7AC1DD73B3C6D612
5BF2D5CC7131FF50948B726DA38883434C3D1C93B665AF13F251BA48674BE2A4
5B78A7C4559184A418F3B62F788609DE1F983B6B844A3BBA41BE831448CA7BC4
A8598BF21F99F8D88C5F68F078E3F2A8DC0D38048AEDBD06FD79BAEAB05CCF5B
81D99CD34D142C6885C854F77FCADE8149571FEFBC840BD375490CA2CEAB1575
9B8A4E21A64F50AA7D538306BE276145240ACB1B8DAF95CBD3195CDDE8408A51
85E36D01C3A6062F7A3BC512671D5A41F5C5ADB84CDAEEE26D966908D78F0EC2
58EAA096205AFB0025471E1DDA34C365043F9AFC357085E51A89EEDDF9FA4716
8B4E1298E09EAEA647D5A94BC0F4AEF88BEE616473C0D08A8B57E4F4620A94E9
09ED574FE02E09F6EDD77429E4EA3432279EF8F694AFDE8C03B25BFC2B5CDD25
915224C7CF18DAE91726125C32B8BE402D65BEB30FF180E271EDCD79464B0B0A
1E11427608ED5B909DAAB1FE91AC60C910CBA51D8EFDD041E649DBA6067970D2
2734B0279118C0D408912002184B53E892772E06479784695B1425537ACCB039
6214AFA69CDB53B3FBF32E1391FD119EA8084B689A1F0EC7601F6D891CBC9169
50CFB5EC92008EDB2998B002B26E87EAF1B7A80825E764B31DB31F8290B7DADF
26BDEE55B481285810B1965F032D34EA2777636330A0CF0B35BBC1A012A220CD
6D88A12DAB7D71B5CB847FF391992E6366CCAF518B065C378AC12F0C77A141A7
DED279909E13833EDBD5427835CE37BFC9B715009E5A88F15B2C21CAF0AE4734
C236AD1838F1BC20F3A3FF898242C5D3EC7F0C0295707E1BC34AC3670368299A
12CEE027BC9F127F79622FEB3A6781181EAD3F0210136159A4EB258520C2D069
8C337B75D7190144ED895896002A4CBEA5A839A6A3DAAD303748CA47B052D57D
3BA57A060FB9C6F7A4EBA16D460FBBA82FB7924E591ABDAC8782FA0FD7997EBA
43C972C48E9374DA28650E8B0965A54C43F86E8DD291228CA3DE336A4031F01D
2AB0E01FF7411D92D2873049D87208F896E0404E2E93A9162700BC9A13E7C1E4
2AEFBBA164DC9E9B34144A5493B4DD945C4DC650F51A5B247A92B2C0436CF092
CC8DB9424EF67B03EDC6ED211E6B84B4C4763424CC868946D2C9DC2C04F13DC4
9BD1BEE3678468B83D0F041E8D15E31ACF330CB4FA03862A1C585B5E27D5B3AF
590FD7764FD69135A831599F05988BCF1F9AB1F1F1A1CC0179561D2B00E98B61
BEDDD42E06F2E723AB2D00DCB4902B7BE303D5F16534763B5D3CA8F98D15B321
B59CBA120523FC821AFE3A8EBBD20C51AE4F8DE21E3C18D79ACFC4498A8FB9B3
0DB0190C864C1DF118DF97FB025A70D6E2035830F6D7CCBFF5F371037424E06C
FA7E56CD446FA24B1B04F67A2135B2702AAA0A8F27EC0C2786509A6F0C53951A
2503C875472C1E8DA8866E5261B16469BD3F8F446210484C1AF91CC4BD6AC625
2C18ED5D6776B40E34D799C87F9A2A809C4889F0007DFD9EE24FC06BDA37E608
EF9161094427A02B65CD9902CD1DD1E613B5330892E1EE81DDA6C31F3404DFB9
1962B549049DD72B814A8C332C88E38324BBD2D4042E32532E781ABA6501B5D4
AC153CD1FF098F42BA7FDB90C16C7C9D4CDF9020547AD258AC77CD8F3C520FFB
CD3EDB7C1669EB9B6D68D84C4B1052DD796AA1774D8CBE776E96125086AFB07E
F6045BA5557BA293BAF7A5610B9571D4E2CBFC6003F3D7C3F72A1BAE5B1F8190
9D043D2FF442666A78E42FD593746E428295261606CDFC59EECEEFC4BFD26D18
6D3FAA7BCD42E05728286E65989415230C48FD3315B3FE9740C6D9FF8F2D7EEF
9F94F533A5DA8B4B2457E74064B73F0EB4B2CE316B10B0DC8D5E8B5C9AA3A374
74C6297EB6A2C747CF71130DA89E709D3D14E1DDF6490DE1D0521D465A083EBD
52B8F42CAB5F22BC98381243A4DA9C50D195EEF3B88181A8ABE6BBE0539C09DC
52E225E8116AABB34189E5C5ABCFEC5BB0A632BA0447A0F96A5395ABD42D752A
C61DF1ECDE0A3AF4641CBED007587E83E22207DC22DCFE29538F6453B2C80A6C
97A25C77EBE836BDFCEB0D037B7D48D72999935B85C4DBE94152CEA444D80FD4
930B268FD7AE4F49E2FF69627B9DFFF5D8255B0C5D0DD2B575833D718093B639
64F1A81F60133581A3333201188851712F8E07BADCCBBFE3A5EB9E82E32EF975
2444C203DC0728EE3ECA671128D8BE324A0EA0302B509786B5D2EF9F890CC00A
8EFD0527F11A036CE96EB63A74DE6BBE4AFD75236FC3ABED8FCA285454D782F3
7C2D4D2ABBBC5EC181E3F9AABEF35888E87E3AF5DDBB3ADAC9F6A3D650579C2F
C6D6C73ED842B33A93968C3044200B2C30952A4DD9221DE09A77B967058F3864
37E7A987FB10B05068A2B78FF2155D163B130980CE6355328B42A6A643606966
EA4A9E1BA41B6AE24AB2022B6796DD539BD64CFC759E582364830BB77F218FB8
37E7B537695C89ADD1C81D68908B09459A5B921077AA21223C135B1BB92A1356
887584B94B00DABCEC84A5888BA90528E048BBE5AA6B6E33A3AA245A357ED1EF
1ACB7940CD889D263AB09D8ABD419793809F21542DC73BF7B55D769E023CFC5C
29C181B24B6E878273A98279C270D25CFBAF152556E1F51263D60A7386846C94
006D50A2EFF81B8B2456CA6057EA3E9B0ECC1EE9D29DFA602B1F78C871983638
408C5D997911489C8326CA19C673CF720A3AAF7CFC5748302795E30A797D38A2
A74670462EA3F06C6646228A00A2D49E34F87B9F347DDFF04281DA03D519676E
53292066A533594D5AD803F8EB959220E1452420F6B0527AACCBC980F74B0842
3E81F8EA872B9842241D4ABBC81B31D094F556EF1DFD861A1AFDF5858AF54B47
1BD3C96D378EA59DD8193F14AEA5B1ED6C7B89A567D5F1A58136EB944D79EF7E
0F20E700790A99E381D240911DF09A7B36DDC9A4B922F76DCBE74A2C4966F09E
AE9E814A2DBC50F214F60F85935BDBDD536F25F88F74BE9D325BEA4DD4B4F4BD
0F8DF40BDBFC0366562AA5D6C63BC6594138C27B957A6F7C50DAEF74F53DE6C0
296A43513DADF6BFDD093791A443F66BC2791BCCCCE1CCEE60B3B9D158E9BCE3
1662A2FB0B733DBC7F2107A49B6CC62804FF94F2BF1BFE52FA9A7732DFDAD600
09156AC3909043A5B4656A6C9BC6DF3AD943E7589E1685D4F822777013120508
99D71BF8873C2203C7003FE088725F37CD5D347AE4D74BD7D1EEB8100D8946B6
5A100C133FDC42D5A05E6202CA4347685181CDCAF3B7EFB50CD6240E161776A9
6FA5C720C4BE1B5AA3E27DBCB81C4F0E5A02E35F5FFE2B53A044BB8CDE299918
F8B110A4121E1ED7FC4FE7472E962844DF49F6C532D4A3C2DB629EA4DC5211EB
7892840AB7599E300320FEB0D80E20739BC4C5106C4527540B7F8C4D52309B67
E6E681E70851A8F2833D028B7B4FEC1B0A1725BC94B04448F341A545C4775DC6
43EAC0919082DC237A9613E2E776CEB770767FF2268BED83170696CDCB00AD0F
5DB105FB1FB37C53B488C3B685F9B5D829454DDB69A69B1DF96DA995B28FA1D8
F7E6E57C2122EFDE8CE80D2AC3E17484D4AA767A200E2F0272F58E129FB8F2A6
3B66D44CB68A0D44218BEBAE3250F9E37EA88235514A789BE1436FC1A6D64E53
5D64C10730E2D9B32A49D1EBA71498638B358F6754AD758A7C7BE59C3BAA712A
0A56D9636B6281387CFA980A02A40CEB2FEE42B631C999B71EC234FED7B269EE
1B688FE75217B016F08681085D69E0E68F99E5F14206569B54F917ACA213FFF6
FAAECCAE6603B40474F6A4B9A5BC7834FC472B035AA0C95A286129F1165DAA49
E8180C970D595A3213CD026A2044452482A4A92BFFAF4F333175C77CDE11213B
F115C5E556ABFEC34CE1598A5C63F4A916F170B25A0DA3C44F909C7CC58BD35C
9E63BF9956B55E73E91D15C1F5AFE6D2FB6C5F97DB6368410ABBFB409D54A1C1
FFD73D2CA53A4E01ED1DA6C5613B95FD53084B39D7813D9764A58096B009AF64
8A0600C0C007E618B3E5E929B280EC0FE0D7CFF77658880B3935EAE20F85DC71
09028214C63849DED78CFE4ADB26070E46F7E452BECBA1FCE1D49F3492FABBDD
F1E9B492DA597DB0392AD630F185A1372F3A5010975536EEF28F9B03CA4C4922
1E676C8467B05349ED37FA454ECC45F7763C6D8F71BEB6CC5282B1D4D2236E4C
9E98102FCE87AAE90A404272B8F38493496ACDB7D8328977A2F5D9D63813A994
A1F9E8FD54E8DA1097605D6577A03DE99BB78A0AA1139DF5414824E7D041C22C
713203A64DACD5FD072694C71A3AF841F9E3D4B4DCD30DC18FD7A0C09F19E9C0
302071E598DDE8D622D9940916793412AEDD15191DDD1B6A3FCCE3EBB841B39A
B1E229B82367DE24BBAF621577873CFB921FF5CAC908E61494B18B32053DF9D1
2BF3C580D5F003DA55FBCBB57A6167894122033740DB74B585C94B5A09550335
4F75813DF7B7BA6C646E7EE170CF8BAD25DBCE0ABE02324E155CCFE17C2DB6ED
3840D4EDFE9D8EBC017BC0B32976A53AD2BD3DD0B7A87B7A5AE8429297DE10E1
06487E37A063480C7F8D42283FB0D175888A1547F4048A82534E57DF995F8733
A561347C183F67ACC09E1C660D3FF46F985FB09548A70EBCFDB31A278357D865
9BCC81F5FD8D7ABE0BD3388C39694786A86AA6E752EE90D2B38A202EA6DAE263
3DA4CD8BF5E51B5EA6354F5CD41AAE77D94E345520E800E497DF6E457E2D5D8F
BFBFDAEA9A99D86612C4B985C8C917573845BBA604D392594C238E444D1BB852
FF9A88ACE7631C6478E76014DF9C546D9201261AA71B05F2E629B5840387351B
EFEAE26D641D49B7A3490F09BF16B8D17C031E58D87B8FFA4821791D5EAB7F25
592E2E45B8C16F811EBF417B376266C585B6F3B17B1E23C26B4279C37E2D1EFE
49600B28E6DE6DD5630777328F56CEAD97662B97D741BC860829C1FC5AB7FD0E
50294C91E426F1222F390A74A252291322ACF12EE7FE8A738607329268F442A5
C96B7D8E377DDB6A4594A569CB008CA30E8977819A6A5356160359E166BF8869
4D92194916965CA4B0D9FBFAE44685E3C5336B647097086C931A6103A50105C5
6403BDB27DE9E8127325C87E3842D1ED01722E836098641FD5F858CE686804C3
F119899F5BB3DC8DE39690B59FDD12A1457BE695A3CF1A5C16878D44BE38107E
327EC401D6BC5E8F9B62EC9F830062201AD4B191743BC1610E3B2553530A74C1
6AEC5871F3FB1CBBF390680D4A4DAEC60A57DED246BF8AE73D2E7D14B2A0BC4F
9566AD6724B030A159A78526A80A3E2D176F2A2BA1E498CB7816B2327C6B4F13
40F5FA1F183FBD298B9B6FFEE51EF298B5F600CF664243667BFC6008F2EDFC9D
8409F9AE204F72DF5B2BFA7A00BB9E257C9E76EB041DE92DD0AB7764568209FB
672DF548C439A883F8588EF0D672DF2B814484531E8C9B92DD2BFE7C254D74D5
09224040718E57896FC92E4D81CB77232BA703AC2FD7C6942450F7E0935BCD66
A923F2EBAD5EACD5CE3C5711D09CFCD0E8A6224BFA894206D1B27F49179496AA
B717311606744A28C51ADC5FBC4EB87D284384D6AD089A394FF4041583643CB7
8D5F2B636ACCD07898EDEC30136B8BBA284ADFD9F4545EBC55591235C56A4CA4
0CB555A4BA1A2E7B9306D202966794ADCB2AADFCCA798F2E57C0566EA3C408B9
055466C033BBC1FCFE66BF1E368C012360EC5FF441BE18DA530B3F2D2A59FED4
39D11DED107279134ECC9566A382E750152A94A0A0DABC97B4B2A944138C5412
86703AF9C23D06A414BB9D4345F16410824F46B2BD7CD14F4C5A78DC38B8B500
7440A12FF7F485FCCF89BC0778B187417ED2CFE5412317C7134801FC26A0588A
6F1143DAF25DD2D59FCF0C615AB2ABAC9DFCAC5A345121410D6DA66767093A51
5EB0D9D11B5F35E83F0D29685000E6E7E2B35C58847F36B874E58209DB16D134
57A2D64A02FE4BFB2DCDEE1EDDB0B6F44A5B6E5C01BD4CC597B395DF8F165DBF
F17AB9A8B581E1FDB644C505C324413CC9AA82CB0A51F6AAD0A5B019AB0A21D8
9B03C3D031ED3D57836E914C5033695D4F800B7E4F9380A16EBBC7164D14FDD6
E644A724CEEF08DD9F528FF6AF884578F5B377BC30D2F41A8D6B4BBE89C43510
0BC314A30EAFCB4252718CC5E605CD1AB79E1A30E62429CD1BF5BD2113E9F043
C136465C5C6ED5D397E785E7E3BB7ADEBA9C885C95FBA326B7021926CE555D04
B1EC2FCF16796C192CF7F7CE6DE44654AF1562FE5062F2899C47999760A7B34F
7ABF9A8D93E92CCC167DB36D72585E112E6E8CBD8C85A4AD0259A9ADBDD053FF
E120C493DFF9FD4972DAE07A8FD6E2DC59CFCF6E7C9CB506508BA61B65AB48E0
90360AE0F46D76D5CDE0830034E3BDC2EDA5AB4B0FD9F3EAFA671A2D27741CEC
A6F2956BF0F2DCDF5326BD8683B5E0053D3955C401B591BB546245BC47E2E312
5CC2F22F67565772241D1E7E2E27FADCF6CD2A394293B0F0E15DF7F0D97F71A4
F6041CDA935595338AAC667E1A4EAE255C0B047D3C96F1DF07C5ABAF252FAA64
F75A56025DDC8BA582AFE029B83AAEA7FF109D3B8A2E27BD2E2A381F1AB40FA8
80980119B5EFEF38B60462A58DB0142E372A81910C6EC8950DEE65534B4365D1
36FC4F83699D690B52F91B35CD745B465994108678B54E6E3A103EBB5872F362
FB3B3C1B14242B4698C022109AFAEF6A891D8E8F35C9C79BE3BA370215A15953
B841058296B4C6A691E7CD5E837BB6FD8976146C7B55B5F032F85BF383C01B9D
000337F0ADC5EADD12659B3770745B774D8799B3191E8D783ED58E344E9105D9
34C49373F6C6DBDE083131AB8180865EE3FC507C5C6A509046BCF6A6475B4191
93F24D342D655D52B3FA5AB67BA3B1E2B3E45BA41BACF4A1141B027591D0A61A
0ABF2AB898482F563745581BB6810EEF7BEC491CA35CFD07BC4F288D6EED2B10
CF4E8E997D88CE83AA76F08271773E3982D47C5CF2B322ABC5E93D898F57080A
22F8D4A0470BD6FA3DFFEC98945732BE7A08CB80FFD51582973C841352461681
F0B53FB07AB5935C0AC0931B64752512BA72678E70D0A351F3095B24C59C1529
82ED9BFA72F7D874CA53417D7A5638FD1BFE35F67D7A5B69AE93FB994F3690F9
B10A842FBC5A00D1147ABBD8B168D1B7DEC0F7831A7B6F7596BD6A1349E095E2
B9A51F259D7196EE55648E64212756DA7B47D678F154E5338C2A8E5A74B320F1
CA95EEAE9382DE68AE76AE8AAB18BAA81EDC1578C8000ED3E3FBE028D514C87A
CB362E527521F47C47350DD3010722D07825C3CB5492E6997F535DB0CCF6EA19
6A1CB914CD900D71382801741B956EF2D479A9E888ABE22E158C2954BD6E61AB
4FCD13947DBE594AB6FD113B37DA6ED21A980E768EF917BA2699C5EF6B3D22F1
2830D99553D83349BC67409111F2FB0AF91B9C1AE58C929F76FCB49CDCFA8FEF
60FF435D5ECA25BAEC72EEEE97ABE431A8D1B0CAEE4797E04007EA5C743BD03B
14868330B3B3B620968CF632FAC74FB90077684A327940536B236603FD3F758F
C8BF8A21A92F18B42124AA5AC42BEDEC8B5FB0ECAE2861B3405599180C7285CC
66CCA4FCABC62BC5768FD852C0EC7F9F7EB1DC7D5B9CE17DEDF88A2CC5C9F65C
F15E09C7C9452980D43A26183F1ECA8A6884B7085BB6922472FB3F77DD672265
B5172E908ACB824F9B664AB074FC44460B563365638DD15574AAD35609E1CA1A
482077815E382E56E8AEE90F107462CE9626AD32021FA13DF52027A305618019
CB1BD88E04BBBF8A91C56254188B2BCE385112B90731F28CDD641879F2B86B84
91D19A4FD5D51792436179B9936751047DE21E274BEE9EAD11839F8D7FFA1193
E92562852B0EAD2A6F9B3625149C0D479D4B54F4A840B2FE29F094379C3D0D51
C912BE7CBA620B148C363BB3804D574A55CA67E5B5814FA26D789A0B432EF745
9DC11466714729B060FBD41A469C7FEA597AB190B2FE326D3558EEDEE5C2A1B8
75C618E4A87F58D3F4418818A6A6CB434B19E8409FD63CB48DC1F746C17CB71A
26575C6E69D4831B90C0B4EA7E1E294583B0712C2905DCCE498897D0EBD3C4E3
A60281425290CAF9213876D8A4579215AE14B9C38315BF92BFD007612ECB282D
AAA40C031E425D8A10F2F289DB4A8CD55D2110C83402E259EB09623A0D05FF38
88B8E7FA1C381E4D26F24F0D65930B94D253A6A7A23DA381B46E0CAA7D808D4D
3AE6B167F88F126D92321A7054A30F3137266AA786FE113954D3D45147108F2A
470B96D0DFED531D29B58AFCAEBFB3266404F16A6C993865240874A73874B5A4
670F6CE649897984EE517C5F92B3D4766E7E6D69CE99D72532B4E8149625F463
398FAD4F0823C5002EB9431E90D186379E3FD8899622594A4DC9B6D378C0AF86
80D818F94F352076F2D176DDF4DD1D25E044662438CC74AC6FD3CC08A5CC3533
8F7357EB14F49E87BEC9074C7856637BEA90792416A15315D7E4E2441BFDF2C5
33D771C0E10550419A6AFF94C7DEAF71E9F673179C4EC5D6F8C2F9901D32E21D
8ED383625ED72482E55260FB14E24607B80E391CFB2C79E160FD21EAD729CDB7
B3DEEE058AE4996F46932D4F50EAD5F42B82DE43793CD2EF69D54DE590019CF6
79F51B653B14039C307E4FA52102ECCC699D0A9018EDD7C9B0A6F6C02640D443
2DFA561A303588518D8C7A9EC2CCEF40B6F1803F158C1EFDD5455329C241CF9C
C8468A411FFC1BEA67431DCFAB389C8875B237254F0A8A221DF15BD1FD41A5C9
C0E124819B868C6074845D6A1FA03E922D3A41EF9FA98A9EF65ECEAD8C7DE051
0913B8BE2680ECDAF649FEF0967A9AF44973FEBCA4BF3B21B7C70E289448BA36
33A9BB597D61FD43A2983BD805F1CBCACBB0764EB3F29C2696778737F2CD354A
CE5EFE08EE3219C3FA2B80D6D06AE14B2FCCA6778D4FD8118ABB0D783D56905A
5D770423F6EFFBE4EB80630D7C173D3EEB18FA74847484558C9DDEC9236D6175
8BC498B7A3C708A213355307E0FEC7C1C9DE92E0C7AAD72599A29FE62C98D17F
2770F64AA65A1EF4F4E9069ABA0A86E95C14C8DFD76686FCD3CFAB0F97519BF9
D514AD26D947E267EB30B853ACD85A7E51716BC8782253EB2726F9BEDF9BA9EE
2C5421C04A68A932580FD3E5717E1CDB89D92F030644115F63532D622B23F00A
BFD6E2332AFF3120F7500BE8C19D103AA6659F344763649E32348310D7DDCBB1
823F142D1E02D2CEA4FA219AA1C3D76103900152AC8A2606939F9933101E4F3E
1D127BE81B28F1D591972DF021838282CCE3FA1EF07D9740BCE7F7A73B83B945
66E56E33FCD7DA0D81D55E99DF6A42570C242D395273D98D7A00C3B4E34C13D3
9CBDD8ACC1C5C3A25099E70BEAD998E6D93EAE1D0990070D9C26527F7B01F4D8
A3F32CCA852FFD6DAEA0B320B76A4F76541D7B676381DF880948AF187A5CD240
2E698A8C5F1290CE16E0679515C868B17B978B9B8F12581C0BE75FE57710ED8F
8B3FB82F8CC2FCA72D13551FC49C93449343737B13B732A2EFF5D9AC899C3042
58C10E64E711247E5CB9EBC8B061022A9E4709D45834767A3BF31776B8AE7A13
AACF52CBB7F6B4823338D0AF700A63CD14FBA1A5320AC8158E90427AF81C21E0
01FCE11DFD8C210FE0C545FC079260DBB0296086B203D2E23D9D9A0F31A34ED8
80D0BA176D39C6569C59D986B782663E79C03FA037B07E3A8B39945F77871991
FB7ECEFD5A0F578A76ECDF03EE5451B76DE7DE67228E7CBE55E8818A643F950D
FC37506EC954B66D5CD034C881C0D71F53B167151D07BB156DE7712ADEC6D93F
F1F303228BC39F9BD1970749B4279E9BAA0F29410CA46516D6C38D592A3C4264
8E7A13C6F57AB46DAC47FDBEA3BA69339D82D571ABF7BDD1C947201D0CE02E30
D6F72E4122DC47666B12D3065488148A04B5DBF1248ECEA2C4C733DC81840F67
F3D137AD61FEC28A41541C1BAD0939B00713378D51DE5F7F47C953F2628E480D
463A4138778934DBB9415B5714C9E33F67C41C3EE266328BCD7B306C41A9613F
80EBD439839A563BB9EA66420B9C6EF72F6C0650896D866EB537C4CEDFEB84BD
7C897600FF1F68522923819F890D9B5F1CD351A53D34FEBBF6BE664B09FA7F30
D0D4D4D580E809B49109257898F12FADFE1702E529876B073FB0C51BCA51A854
BA9339E9F5408A6BDD11A8CB27578DFDD21F010A175A2BC4B479A80F6A974506
07AA98DB608DBDC8C084148BF8463C298B72287CCAFBD641BB97F0DB05D49BFC
E6C3FBF5184A87A33243FC55FF143335C4CA1948A1D530AE06FF7F57C49B9467
CC6070F0EB1E48A14E02CF4B066F6A2FD81FCD9469B8F724D7A7F43143F21367
01A70918504F4EA2D4B57ED13A26559929A4226433FCED8F4C83F87B8C4C5E6F
CD50AD9D337A682220859C957D0B12E445CFBD298A05A3B6D22FDFDCED220372
89CAB03BFE2D848EDCE5EB719880C5D5A9242200B0FEE0E6E6EB5C01FBB49ABF
39035254CC2A0095E4EEDAC4625628125F3FF21C2C403F7B8DEEF21CB73CB335
AC027065B561BE270BEF9C950A68BC3BBDE6649B8B1F71F66F796EB78C4201B2
56287414C940AF8A52CA88FFCBE2898114D4031E5E72529513DF7821859BB191
D5A3B94CB22ABE72C82481A317FA474C3443A334DA7093697DD167A66B72E430
1E54538227ED82C344343DE28B67D287319B9FDFFEEC5EB8F5813C7A433E13A9
231513E38ABAE7B90B1467BE496D833753E540C396CC2A4418F4DF0942D8522B
4D301A679D88FA0EF2BCC1B1FF628BE79D0382A2FFB41D2A6B27C2FB99B97F23
12F8447AD94575E4395ADE374BC9E2B0D565DE5A5F537FB4A4AD75BA61A87B7F
A7C6ECDB6B5084D9A1E169E878368E6DAF5F24BB66E4E56F3C78603274A7715F
65BDE4A9F18B47160B6A25B289E6480C7E24448BCEC174D95E69DB6A85581897
DB04602F08F3490296D1E0150FFF690797B3B1335F009F1872452A92D31064E9
4F57CAB08A8FA98AA451C2D63CB5B59E893689A023B8025100D53EC4F1C0B580
C71E44536B640657BFD55E7F908463F26393EAE0E90E7FF72939ABD6E8CFEA1E
3B7B35E7AFF086FDEDB8C7F8358852F00C79A7038E473F43CD8C8DA654813852
5B62D856CF5AE4CEAB7680B49196DA513820F30D04D829708634C7FCF2713BC1
73ECE8F0C3B02FFC16B62DF92BEB15838D6336DEFC69823149B432A961282CEA
E1E56840409E604C6B0770D78EA293F1C67DCAB06F2B818973743C8B42C6C09C
CD6953351F0D7E5209E134893D9BD3D08C600092073052529E235BCE50194E3D
1E77E99B4EA8BE543EDB9A40765733EF317A337BBAFDE166A056B8F42B894C8D
E695BCA050D6B1EC42EAAA23AA94763289ECCA3357FA15C988CD80F75567EA59
A817D0BEC4D2E8EC7BCFBE922BA08513A092F3D73CEC65FA6009E5725B336D4A
6DFB6EFF878D0A68C3F08F11D074901AA9C4AC9BE5005313BA27D956AB505011
9296ACB55A77DF4812420279EE2D33547EF76D21418A19C13476B01F0126F956
D7576AA3C59658D3558E5B991C49005C9DD5F68209E4ADAB3621BAD16403BB2F
1241B668CB480BF111E9C0693609C6EC9C91F3C48D42F56A3A628192007F8E3E
A69A67974FFE81133215DCB0609A024161D78CC08A06314D34C1FE320A788F33
A8F241AC54EA5C945F6746C1FDB3FFCC7F91E891F69C813D23C13E485E548E71
0AFBCE36A0A50D8BBB2E0E50FC0ABD25D083A8418FC1FF94B3293BA5526157C2
1920F97DBB4AEE49925ACC25C1AFF10FCE48B9D9928536C31BC18E07E578A37B
F7A69CEDE0E5FE1D509D33DE557D09033A74F798BF459A75E9B038118F16ACB3
FE8E50AD47882C6F0DA6951A532ADA5767E4E734FE6E4946FD5A4B839C7DCD70
0C439FC273C962235DC112E52EC68168CEBBD73532CD2FAD2E68B30C4DA9311F
B05079878AD40A784075C91909822E6A5069E14AC5E9DA1D8AB9E5E49EA25DC0
6AA5E5CDF06E68FE8CFBD1B7B1AAB4655BADADC8E3A66217EFAAD00E033CF404
AC2E77E5E3590543C123820A44BB76813351E8DCE79A9B74A950FD800DD43D8E
2B08A047835A5C04A3975ACDDA18244644086AE3A10B0CFC36D14B7FF230A314
B3E55EDA5EF43594F6DA86555A84391D8F658967A3C96126A8F86A54EBE2ADCE
82E66ABC5FB6887CA02D6FB41CFED7284467015F83C4B799166F001EF04D8B98
D321E6B5B675F43BD83EBCDB30C1F14B5F4C992EC2DEFED894F71C9E2A4F1870
455A6A947D453FD1FE83E97598BCF1762C7F19F34C6A960026F32740DDDF4FC7
DE23929058DEC312E00B21362A7DF295B9A5AFEC8AAB7A0DD5B43859D6B75B0A
01594B97FD6D85455A55252EEAAC90EFE611897EF38DA1D6BAED8F8B4E9775DE
D5865CDD9F3731CA8A37903884377465ECA3D22FF55B0C912F89C05830EA95AD
0019209045A4B73552C04DDB457468146AAD0AA0F9EEC0E8BA34A5B20CB69B6F
DB2ADC0381D4229D70A28A563A52BE3643FC0C87B86A097305400182E1F65C21
826F87CFCCF2959D789310499CDF679FF1E916D7FC4C5FCE6FFD54A41EF225D6
D9FF123FA7E6CD70EA0D35D97D4C41E5040400E7808586BCFECE8FC12BA0C882
6919BEAAC62D7C4C883D38661A1CB9964FE3A153BF5092EE47D38D24708FED53
08A475CAE3A0890E21B4FC363E8B7FB4430013698DD1A9D7A3588C809BDF4D0C
CBE9F8D66091DC89276D0A95F0AB2216ABE7C611A9BFB311DB1AB938F4463A53
05BD331E363356CDA36D8CE77E5ED5637125D247A01F38394092A382C683B30F
31E129AF386358A1E53F862BB01C30566C026090C8F6EE2FCF8CC834D9EFBA9C
139C82417147B725B4BEA8BF150E373526CF551D5928CBBB30113D1E1AC214D4
8D02FFFDDF1EC96F337A4717192593ADCE6FAD8B6D1201268089CC61900FE7BC
AAC1E90B6841232EEED2160F46E1C50063420A5CCAE4D9A0432114D3018C1A60
EA931AAE246C83C8723A93919765088817E974BAF4F51AB5C4A9058B7FE016B4
689B5B7049D857E8ADA729D71495611960BB351CD132F3896E8CEF9E3B4CB279
6B12B9DC6C3EA0834D0374CEB2FD42D55DDA6EEC2702A51F893F8D5F91A9DC22
60692C0593193EE299E0CF50132B017D5E272240FA30993BD7EA26A997502F3D
84E1A5CB32C18487F8997685BACBED236E03C3E5ECB7A6F68DEDE29A3648B75D
CD258CF0DED8D27622A5ECB851C2C6E9526C5942947F89C770A7C63211276191
41C06772C69C0336DEC8F03D81E5627EB6417630203EA1075905492AA45D4FAA
3454B12AB73E547275E3DC39D2597165F3BD662297A002E426E31718B3682099
CB34DF19FD850D130B5A68E9C800A95C4ABF915344D3878A29FF5FD81C93F07A
3547BBEF6E802842287309E195F6647D8051F5E9FB454BACD8BC456CB2CCB841
D13E1304C9E0ECE62F37E3052E362FFF41D330E60A756622B02C12AE4785FA44
EA4F11749324C153490421F9D5FD93BB2EBB7E1012953A8E3CC2BB152879D05F
CDA831F273086855FA9C0B08B7A8AEE1E89EDA55694646C4A2F285B3834DC39D
645C6F7BDC3669C81C87671914F3BD9BB494CDEA9C2CE3663E0362B8B6B5CF02
0D7EC96A6D9FC22922BEFABEA8C6BEC2A6AC78232742CF526690AEB66455A80B
C222D8D2BF6A9A32A2A8A44799A1B3CF5951AC6B9D696B7E4FA936648F650FFE
051597CA3DD7E76AC3740784B8C45D30CCF9AD85966212E3DB2DDE1FD2653E9B
39E92CE32BB3A0B631360664A35CE21FF8568AAB9C97B8BCF7AA7DA6B20E8800
E7341307875AA1836D6E5959FB588B1E723CD839330AAFAF3A491DAAECD7FBEB
EBFD6F0D745100B092BB119EDE40166530CAF74714380D72F115D6AC4617AD35
82E2C51122C7F91A201EC8BADF160F9CAFE1209A9B65555D1B13CA4183100E50
7E67603F71D4DB3AD48B9A26F1B22B126AD844455C084F08E45D6F34474B96F9
5C4EA3B4B92160FD2357BF67BB5EB2FB4F111D41C6F11EC659AAFB5B80D335BD
0216036208CB0DA50BAB6A145EF9A08D50CE06F9DD4F2B458573B5338A892839
466E31524A90BB5E37672B939C96BC781A976776C361E5EEE228F126EB714E19
38C544F32306D86A50DC8901907308495555F2CB07CF450D58389272DDCE0BB5
2353920610827EBE6F29DADCC5A38BD9EEDDD41EBB68703376886EC40BE18C48
5D7BFEC0A09D9FEBD0FAA5477F17F62BF65ADA56C0B7C81826D6B3E7B6FE9BDE
6E81E337CFBFD2E90E8982569892F6FED9B801B198AA527875134256CBD5FA1D
EA17BDBDA7942886181D7513BCD213B255C0BE71E08D6F83444BD4851B1AC9F3
0148F0CF1C00C6E44B76AE31CBBF0BB0DC9BEB94FAC22DF10AF6B931C5037564
423A7D9BE5AA511282CED200B77AB269063C73EA32C1AED05D45F915364BF3B5
C1076D8463992D52B82FA9BB5BE0D498BED1EF297B637ED441F96B3BDCCD03D2
33C6120F81F25AC6FA581EEE0AD63237A01B5E9532E490880419FB9A89130279
EC9457DCB458C5BD957D2638E8E258A8F9B4E759A31A236059C3A087C5CAA1D7
664D931DF1CD5B0D9E77681D6BE7D68256B62D8CD23BB5C272980A2E269854CC
471FA1E99468E5BF42509BA72A22DB0AF4FE493305A6E717E4279B92132D6E86
B82DC99A3E36A7B462B2EDBB77E69616C3A819BEE7192CA91BF186A834DC1CFF
59A6A38216A02186485A3E8101C193FC038539136AC6C2DF0DB875DF80746C2F
2744C16E5CB0DCE9D02648C58F8C0CE5C4498DE1AF7EC4AA8A19E2C1B5345CBB
C456DCA814B0D413FA45047C0C55F3D1E989013322717D8FADAC4E20FD27F253
115AA0793C5324ACBF003F6F9F778DE8096A6C4A5B98E62CCEC2E07AFC2595B2
0A56B8642789364B1682F578ED24DDAA337C390B121C5C15F92757507BA387DD
6A02828BF24F58180881FE445B3EA71F8FEE9DD748C4E5BF2C80E1102E9018E2
B2199567FD0EEFFF6B9537D8F16EE97C0FF2A4DD9AD740E86E907601F9AF2CBD
9C769C123E0B12914D7DB9ADF9A1150EB5B8610B65152910F64E294B8656A686
8A645EF22755B91A8D7115C5B376B3461F6CE141CEA743262E1904C7CC256170
F6EA01F1D01A60540BA22DAD56CE50A8760D8DA284D6480562B02C85F8377C49
8305B4DC3ABFD369B2B97BF3692167F823285BB9796A85159F14F1A05ECC4F20
C3112E787210FF45C90778BE8DF452BA74CB6839FBC76320D40185347D751AC4
178EFDB59FEA8650062AAD6E6620D317830E00FEEB9C77685AF0C828BD1C1A6F
533E749DA65D88891EE78A4F3C7667F7855ED836D26A5574FFF5583B8E5156DA
B6B4FD266FAA203B66A4E0E304C522561354659910F849B5D0BF911A8400582F
CAC64E18CF34158ECD4AD02C7E542F95177AEFAA5C8A251891A1CB4992ADC57D
A87D55C524317DEB4E8524D0F65F85F54E1BF666D375680E3A8F14EFDB7CD417
4E260C92A9BA1B298784FBA52BDFA00F218BCE6325EF9EC5ECF75D541B46909C
4035B0203487B83B1EC0269ADC9B690588B2F8F3501ADA1A2F0D2E9CE3399141
E9A82C4DAB9531A870956DD334743F743B9BCBCBA5960DAC8FC1C826D2A1D2A3
7C7971970CD4F17C5ADD49795C6C9047ECC5D2580EC3F5667981EFDF5D54C927
1C6471FC54EF6951880FAAFC2EF33C9E6772A025C55575F17893C6835BA1AC50
5D16B358FE942FCA298A91CFE3CF190AE569C2D0A49E3A2F613FBF8AA5464FCC
A878241EF7BB5DD1AD2F052F0F4013CFE89FF8CACB0F3A4A4C1212C266328D8A
8597C94FD6090A1E5F267E9C46E660D3AF73F322EA303F037F84E01DC2C8E4FE
CCC5EC6F28337D5932C753BAF90552C10DAB0751AE862BCC1552D9E9E9984202
1568CC499CA4E8A4B9088A14C5BEBBDE5BB07A58CD65BA55EE626BE2F433E8E1
DED9CC5649DE9E349806AC31160F66324949250139C0B0880A984C4E01822CF2
AB940F4DFEFF469F8BB5520F841891A49425FAFDBFC88E201766DB112C7F9009
2CAC9B35252522E026218F4AE845F13273D42F9A948043EBDC628F19E29A684D
9917407EA68E2A294D28846F3E5B4A385343B05EFFB0C1BAC3D7D2B32BE5B1A0
54C09AE58CDF82CDCC78CE21A7E8AA1889B3B9490C545B6EAD880FC96FB1968E
E01852AFBE933AABFC3DD36CECE60AC0DCE98C90C0135309283EDEF71DEFB564
FF51A8452537D45E8905309EC9FBCFCFED538EB9764CF5CD0599B8337D4F32A4
E544394563D24D8C50C53B4E63E1B1AAA42200C2412D4594BC0C7C624D2CACD4
6AA6FFFF68EBF8ECD33AB38B9C796B07E12C1D0035655261BFC53CE4CB43BD6B
F217746C5AD02A9B9B778B7E990112FE9A37A992C55955E1D065316D7031594B
B460A771E8791AC005E5127D8C574F6B01D346A77213D144F47D789815BC0212
559822DF20597D7AFE3D1F37D906FB12C9F89CB7A2C5815255035E1D9D24B508
B578280CCB364C46F8245E95C08FD61BA0150015CC473D2192FE54603269EB1E
2B2930DA1463438CB7FD3636776950C1C2BB8B2435F18D905662D2E0735E4196
E85C33DB0F509B5F177DD05DFE05EF25A24854A8337783DA9E0234C397124D92
2AEA6334A6587D501BD3D56B8D873897CE07EFF5A9AF2433D24D38A73FA6D018
84BB2C443B05E62A5DF95EBC8C736065AA715CB6CF0E8CF2C621158E0A6C778D
77AA96B5520C8DFDB12EA7DAE363C0FB18D91E925CA46F1E2908FEC9F3699ACF
979914EB99CE387F310DE37036A79148A1F672670AEB5C053E2491278AA699FC
71347CA5C0C6D54BF56FD3BAF29ABA58B8E8D44BA8D34E8AFE78A4DBAC49274C
E98A6ADD10AAEE23720499D77A27DA51CFF0E36D2FD6BFCFF1E81D2D7C6AB61C
CE82A329CA6B90846825D5F3CD591B531E9A8B714EDD79339935A6C3F19DA92D
2CBBA23C46E9E403D2A47D8D4F2110FAB0EE9AF8C7AF9CFD52A5CAD80BC2C0B6
6A137B78CA194E6D6FFE6BE23910573F0EB1EDBCDDED52006E15AADA53E17C77
AE8593C94DFD322F2BB772AC7EAB9670BC4BCE6E0200CE268FBC83AA3A957C65
354AA2D890C2B0B63679CDF0096CA42DF46EEA78E8D711B02E18E1E099F04932
90DF1C43EDA4A260FB8556BDA927049928B01E78C6FCFCB82AB4A860AE7F50B0
065BA968D6170AD4094141F77075B31A1CB6EF2603C39936AFF3548A38987AF3
23B129C36C5513484CF2F1665E0310E55341E047257CBFE5158C3D8D96ED666F
1B0E0159F85362211197BE95746AA00B9DB24FA44F9C2C7FD9A30D9E8FFA23EC
393B527A65A1EA29C5B5A4524751F4BBF906D11F7E08AFBFF7EE77194D08831E
49DCE3C83301CE62883E07B1727FDD4B942C2F9460E5E96E04945BDAD8007E9F
36CC50CA7BE26EB574EE193D82BE11CE85BD072705B268E0C5EF7C88F73568A6
7376F8C7EA3256423C68890A0CB8D459EE29615F37BE6151A9022B72EFD39CA5
B2CD848564109193FAFE3BE5054355EA572BF1D5B4EDACC3105E2A7CCF52AD9C
4C7CD40661862DD1E1D1B776FB5379464F17EE3268E4BB2F1E435921E477AEC8
B71E7C8EC38D1AA4B620D89374DD84A4228F53D1BF1872A4A12C69F9576C8D78
BE9FC78C15994615F937DBD85C616872CBEFCA6F289096916F1F1BBD51928A19
3AC2863B41005E2F2D15D886DABC35A0A049DB85B44183825111427B900A4719
102A53C1B58033FD1FD0A6B952D2B5563BE9D6C132D6A7B4BB536DFC03818E60
CECD4D94250E4091FE969753EF88F9ED3728F87256894B395C89FCD913587C99
9EFB63B90684D161CC6E1FDD35536E8A6F0C304BCE82AFE53C4AC0E163E09DF0
98D5FAF684D11B4433B4601683A87915BE41131872A6CFCE2D19CDBDDC4B9ABA
2BE10F9D1F0743F8E3A9E9C06E6585D04CCB10D37412C0810A8F28AF0EC14400
4145A48130536A460A9D1FA156DC6741B4832EF3C83C466FEC5A5B9AC6AD94CA
C22FC78BD1F35CB594A9A4747D81A3AEEFE1CC8BCCBC9774E17B14B61D7A4C58
B502AB3B44779F46BDA80BF77E3C8C94CCBF70CFF0347BA42730546B8B30A483
DA952C6E6E258CCFFF00F76B5FAC84DFF378AA972FCD3EFCF8D716E6CBF50C68
B63DD34278198F494803F27AD7E90EDCA6A8C4CE49C6D67164F7BC617B581DF1
83704D9C181DA6616D1003E6A8C931D0BD7AE584B5765FE2380BE8DA45A72C9A
B8F0D74C3BE7BE37A681BFE9677186AE78D19F3A83BB89C2E92F1ED31D00F79F
7672E053AF888E537D259119D9FC255B8857A2991470ADFC02F651C0768AF6CF
85D8AE0C1FFCFC676F77CA3AD7837918E4FE0D105276143ACF677EAEDD7B59E8
E2C20D24EF5DC94DD4EF4A6DACB610E47A341B157A34F4F2902A21E88EB8D551
838810E01F17D5E28066FDE3C122B567FCF0E71F7B68F926C44704F4E4C72823
4FE2719F1E8A0CCAE9C1E9BFD1721F3977C0A7250485601AF8269D613518939F
07
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: rtxsc
%!PS-AdobeFont-1.0: rtxsc 3.0a
%%CreationDate: 03/26/2008 at 12:00 PM
%%VMusage: 1024 16650
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0a) readonly def
/FullName (rtxsc) readonly def
/FamilyName (rtxsc) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0a, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /rtxsc def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-35 -163 750 681}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACC3A819F74D19694FEF2309A190723B30D91
153B752A98B5259BC8B47C3F5552687F327E587CFCB85C93ABD6DA1AE3A48A1E
66E6F807EA0D37BA57D9E073287EA2AE0B3A816CF37CBECA4B432DC6D3C75C92
F6A8A18E07576ED559927EE61A2AA4F524CF4A172CB628ECF297A4FB08F6B451
7FF736C3DF27856DF816DD4005803FEC73E8A380BED8F0AF4B29AA8FED68603F
1A622D07E024BD49F91754F620E94C52BAEDC55C74ACDC6F427B053786D115CC
DDA2B5BE50BC472FE9A9164A110879B29C61EF8993439608FD1FC1A3DD1FCB65
11ADB36B4D1C7F6E071D3A6EF1947462457196955B0AD675BB415C4A1F087AB2
8F246163A381C418312DE66F95DA538CB9A24A22EE07C5E55ABFC6E189807026
C3BDF4AE7D7B0E650388639A4C63525F3B0A37DE5CE95D9A919A3B896762452E
38A85488F80F12C1F2882B246A9EA962964A861E53B3DFC6938E75B5ABBFC82C
68A2D816237BE84109437B7A1A31096F34100BB685C2140498296402770DC726
2C5B9AC4D611612EE8C5C361BF378794766E36DAFFF456E19BFF4562862A4106
250766E19694F65DB346CDA7E8A5CDA5B80ADE7D40F429F96D9BB7D42328D521
73E4DF272C146884B5B1006D103556E851958C0B8C5BD715DD28558673224A80
8E8488255207B34D09CC77A00F6709DD37F973640A5B4D6F501C0E944B299820
4A5E9888808ECC10B7E8C637673E819CAAFBD504DF970315EEF9DA50703E7718
523A5B774AAD43106AA0348F4B44F1DA7D231182291D43BFCF2D79B40830FFFC
96EB701D3FD12FB0E21146C3E4FD2E40081D9E6BD992D9D9A70A1386E8322592
5452D5AB5901B0339DCAC14E1C168FA8471F2A5A3DE7F5B2EEC5CC9F92F26EE2
A64CDD2994B5F04535FB157C50C5D3430291AC8E793A924B30FCB9348F77B59D
D9B067E999BCB9B092F84D233E821C6B7A1FAE89ADEAF1E04EF457DD13EB656F
BB98385F009C20BB2C0883973F84149124AD148B9283E69FE774B9063A0BA921
819B2175AAEF138E389FB9FCE93A6866C5330A7CB20702361C37EE59A8859397
979A08DC14F1D1D19E9D3C3C4A9D5814D38533052DD9E44A986F76119122556B
5D63D97F5ED3EEC180A68838252D0821C41641C995F86EB0E0B345121549080B
504BA45E75183CEAED75DE6130C561FFF6EBB7E128A166B11DC9CEE997D82E65
2C5DD7D22F08B9D5411C4FA7D4F5FBF4CC2746FCF3E37C627036E8110A292B2D
F6A506666014F52AB278736D8F661C4827148EF0A54F591721A6B0E68DA91692
3293868F87D44F2209A31DF9148EBB63EB3E422C2EB3398BD455EB0A179A3A76
B0548E27C57B5E7736653C9F52844781CC0C1DBF2D0ECDA5F014675979CE789A
59CE84FAD4B9DB01A8255948C0556F33644F20DA3F9232002276808139349C08
6E4294384DC3FEB1A5FEF40F41C569F00CFED09AE86C8F84EAB5D03406022215
42B9406DDF33C1388B63045EF4483C5F230481E42435CABA4D41AD392B4A6026
D62604A0C928F9251B73BAD98E2E0ABB8F6FFAF92358D500DB8C18E0D9EA4855
39277A9349F42D4DC8D16745D39642DE7D1054D4ABDDC5D05455729B6578558B
378E4CFAA9E46658CE2197F4DB946E1AACE4DED5C4F20878B4FE6CFE3CE85FD4
732409C5647AA804DF7086C39E99CD0635E33CB76EF604DD3FB7841618BE1E3B
3A7E1B0810A430F74F8E804BC4ADCB934D6DA44A1FC7B74E62D57CA7FF2DE8FE
BC2B3D5FC63588A2F14EED968B18A3E5E3129320CF62828D0520CAAE8541E1DD
7A89084DB3A22AB0643F5243A514B5FDF2EA3D4818D656BBBBFF19B8E66094B3
D47703E4AC12E6741EE4775954F1769F6AC4195AFBBFA1672C9EA08E4CFA1B80
6DD6A85A6C877C26C1D1D853D81DDFC1B19EBE061E15A9D1E93939EBCC0F1940
B3C6CB28500F6D25E7EB0CFEF11C90D61DB834F77AD18791F1F21D77BB1737F5
E0FEE54155DC54894263523A0E74F69C58467438478BAD8603484E063110F549
78F0A0F59B9FE35EFCC92EE0238C4A0D9B127AEBCA56A4C962AF50795A5D470E
B8D5BAB4E7183289EE2C0BA3C24FE773EE0AAD14A6148B8849F52A132DF385BF
22A67F30BC798E1DA1F2A9AFCA67F9245C870D42E4C042D25FBEA59666113AD9
B8764CDD130C48D1D5A8CDA392D45E22CE1DF5BF9E1969F102CE660D8D6F955C
5927081BC5306B482088556E614536AA3A1BF57162915F7698784A141405BFAF
3CE258C6214A88DA5675A467E59332D76796D69D7F1F7A23D3920299E495263E
DE73E5629A7A273657AC5024E95FDAC78745475E9EA98606CDAF9A4246BF693B
BDA6847EFB6000090CC196BF69B0327C9F8FB2EA966DD1AA3127C08C1223DE2A
C73C603AA8A5E7C4DBC9275DDA799739BA314728D961C5312BDAB9518175B053
C9844681A631691C84970EC7E5946EE956DC1EF21AABD3F393C297BE6F1740C1
AAE17874560BD2EFB25FABCFFCEFE4FA9C183BAACEC6F94F39B32A966B2DB9E1
3D8A66BA4F8ED5E4B002F16253826731E5C693D79636F6FF644A7B11FBCA8E57
0528B7A4815C4C6394F9D4F2F4FBCB89EA6E11E0E4A5F7C89B2349ED691BB2B3
22E75CFAF54CB5EF6D5626EB104EF79D49E421DFD88BB0061A908C6781108BF0
96C6BFD51D7CF582120472E8D3374616006BEA06B1DC6B5014CF7C447B0D97CB
CF4BE170524E35E8570CE4BB8CF5D6C057A2F385CC125EAB10B26AD4F11BC57A
765B16F6BF3D5DF6971ECFCA58255EF09048DDAB387E3FA39642016674D8C5A3
B1AA4F510CAB9475EEDFE3704FCE962412E5E1978A7ACE0A92E20D532087DBEF
11B1FD121BBB4FF5A4E3F6D923C6D083B1C7A8A497E0B8380967B1EDCE8D1C1A
651534D98BE3AD95FA67D837815B5B1FA8B0FBC070AC072DD71B1714E3D6C4B6
856DFDD5AA27570FEA385B50C67216F6AF19C147B442BFFC55B62770D13CFD62
8DFB09463FE15EF247E9ACBC3BCB7A58A31BE8B643B10CC49E5BE7ACFAD171ED
3B007FAE10A3BD47AF06F7E71B293F32A50998445846667A85BD7CDF35C6ECF3
5421BD4567543B7C55CBE1916577A9DB8DF4AD0D6C602094FF1ED00D43620D84
64534EE1155DD8B636166C3FAD842B0749094EC568E1C46FD810B874896C3B6E
D29920B99DAFE0FEF9A002B2D41A0A5A3E8A71E2F61EF99777D36F66814691CA
486209AD62528CA37E468FCE3BA580030B4E70C0AB028997DCAEDB1DF476BF2F
7CBDC07C2454D471E74F8FB4BF09486B34828AE095CFB75C4875772B87308867
0849C5A9B5FB0B6E095F0D287F452C55C8205999D3E84FBE821B8AFA028E7091
6A88046D59F117C3470271857710BE6066B5DAA4B10AF2D33F78D7221AB3C376
836459802128357A5581CBCA46571AC20F424999965CA63DB505929035A9BE62
C46B02269B74529B085D022E302801B789FA87FC8E27518815CCE92675792063
6CC5C8679884551A242E5D57AE1C9CA18FD9B5EA0A25265689AE824637910923
07873A590E71DBA68891C2732FB229C54DC9E4DE8C707DA5E3462D29B4FE23BB
B4E83B9F372D5CAAE2FA4897AC8FBD76537669E00A3599B6F95959C7E990DC04
5002057FBD57386133CE071EFE7111AC5DE4B7B0CB5B911777E1435326A632AF
ECAA78DB574BCE66DB8F51279E3C84A7D9DE5C952CDF1FA01F8854D8B5618547
ADBEDA34956D2667C50A07390FD01F592CC69D07F0C2F64A9DDC662E15D4D9F0
2FB720FB1854A9BE89AA166B88E859C91551BF449BB2C5393BA0CADD1115DA84
E42A88A49DFD97EFC2F4E9EE0F69F25FD14134F395814772580BF6011ABBD444
23E110AD7D77227FCBFF2D84B181E627C176006509B2EE3EE70178F2DF503CE7
3BE753625DD6489E7087B815AE33DDA0F2780B2B7F1182DD0FDF1BEA1D86B4E0
F1AFCCD89CA035B2734ED67783DFE4A47344E01A35FE107F68243A588565C246
D524C116D99F4FFEE249D0BB64843A8AF17F171EE3E6625331972C0C3962E797
03903E8948463153A75E3EAF43CC674A3A6F1E4EC7AC565BE204F6F80F52C630
1432AEADF33288948067CFBFFFAAED50B63BEE9E9D55150C8A41874E208E4556
56472BDF65C177DEC00726CFF15B67FFFA8F56FE4DDA0C0DF17CF4E27143D064
12DEB93A89A21DC2EF88A961D896639A33952406D2DA1E24434AEC9D42FC94B6
AA4F4CB96905D0F686199870AD5F4F72310875D56479253C3ED2BCFD838E59FC
7D4ABE95B2726D3B0FECBD9AD89FB6206A3F33EC93D744FAC368AE0D60955ACE
7976F95BEE426C0C62981CC2F0743F72DCA298C41A6F6798547B8BBEB6515D66
6C704E9FB42F929CDEFA7542D9B0C567F42708BF91621E9C411A3697D4173662
31C2B7C08B74726475A1FE764FE6C7BBA64B8DB795D92569E2095A8C504688F4
7042FCB4826616FA6BE16BF65E375226BB067EDA3D64BEC51B8716ADE537CF4A
C34C389758EF632288E24A33106BCBA8466D50DDFA58924CC02FD1F48CE28F36
29306CE481D72177BE496C623552CE5DE13AE0429DB8E17ECB2AD7A44BB4C702
B8741EFC39CD7444BB57B0CA14E90CDC7D153C6392E6BD149BD73868E110AC57
4720A2EB8BD88D2D84AF7A62A2B2831B205A4918A0F2BCD05C219EC41ABB84D3
8E3A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD85F3105692D9EC8C
656E64E8E61F9228F16CF415B773153D9690DC14429CA42BD8B17E3B0373B719
561D54AC82CE6CE436CB8730DD1DCD09A93E9F4A379DA75BB9DEAE0AABA204B9
909414BC316395231A624761FA8430E43AA339F16CF415B773153D9615D0738E
35DAD8E609366D4835522EADAC9FFE11B1D96D22FC2AF1FD7783A95EF2D2CBDD
01C3D7EFA3F6906D82BF7CFF893664E7C2CCD757F83C91715E14581C0514408C
087EBAE16F8BF9885D2769D9DCD3481F4A2D96196B1767795C0EBEE585559B2E
C85A711DEF2173432790781334D7B05DA3C10E60FAB26C85DE9A501FD82B4EAD
C27D197CDAED334D5C7F41E485B7306009751B27DBB5272C69F7A34493D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95AE318551EBD9B8F4AA038DF795880
63FA5C12788035588B794EF9FE03CDD26508432F9ACEEC0C86C483004995898E
FFC985D007AE44672530620E26ECC79239871F61F40EBB75EE3024F37818C68F
C464E235F1FD33C37C611AFCBF59B67AD80F8F4D376E1B44C6B1CB1D115BA2C9
0D27B2637AE08F14E3614CC683A9507701D972BAEC539741F8B99CECD2737CE8
3866B57126BC9E7E152BDA1C4DF31F6BD83A33C271653667068B2120BEA9927D
9A78BA84F40188C27BBE3F428015514B0FCD8B218F5D6F402974C4ABDB326584
96A2706528524A9FA3EF41B38E2DC4F1D8AE32B1AF866635CC33F093D6919994
45F23012B797542CDDFAA6B85520A7D397105BB491AC4993CAAF01F88B1D0D20
2E3595EADE40E7595551D15A2224E05B8B2B8FF44C8368C99DD880FC78A5E147
D990A54FA18E671A037873EA7912E73162300593410CA75751C735E1259674FE
BC944B3F683C8ED6D25C399600118E2BC45B8C5EBBE285406653B5909CB48E63
18E1B0E3B821D8FEB5D72543E64AE87EE9A6C3B12A55059FE5107768FDB86DE2
8C470A1A86EA37577A2C5E235B9EEB4F69791293D5BEC043B961C52F408C0C4D
DE1AA36C3095189D99F221F2160539A2A7A5A9E6FA0D8EB2C075E1B9F5FDC218
C305A5CF3A81942435388ADD4BDCA6355C7335F1B602CF8A5D6BB3E21369276C
1B1A19675FF5608562153DD6A09E462ADBE677E6F550F93925757DED99E3E684
3BB0CD6A9AD4CF766665B82189DC76C05B82C58509CC2E624E738FA2C0117AF6
93E5EC1DA0313F667360FF48673C8AF8EC7D3A808EEFEB8738BE9F30BE03B0B8
FE5F8EA006251B9E33FFEBB1BA2A6B7A8C8FC175DC6FD9A0DD7BD39016B7D3FA
7B5D58BD990108D3846FE48A7B088541F51D307AA464B9E2CAAA3A6EBB0C27F6
B3D45356DFBEB0F12864B22E2A11FB04277EC06FC91C453660E8321BBD5D60D0
D1751359CEED43F5912D9589EE8C8334F2030686BD6387E6ACED43124B42005E
AD0FDF687A795D726A67CBF121BBE1F0AD5109260FCD4A6417A9998E80BF3093
FB02987C83E287B8B15E4A42D2A5D750544ECEDE2F5FB8A988401F859CFCEC67
76E0D0B046D7D9F4C20D2593BBB52F0BC16881EFD3DC976DF6BD985650ACD770
120795FBE9356314AE9A4485D0C8AE2C4EEC4F5F64074A910A57361A131EDA5E
4F92D082436FEB29E12D9F23D28DFA29E0566BC44B3C4D15E091902C8368DFCF
9AA0F11EA6E3E3EEAF31D7ADDC4B61BD20023FF06A5F3B1A51AE4850C6FDD763
F62016A3F269B9FDDD26CFF78449162C8A789B7BB6117613E2F558D269B00092
DCE88C14EDCB7AA60AF519FD124FD7CD9341AB55C7294195B48964E2F4A96BB4
45471F2E852AAAAC4158DEA40B85DEFCC5C21509D054A5CA5522B0F83620B26F
55D7620C2C1C3926710748064D77BF335721FFFB55A4D879BB5CBE06D261EEDA
77819CC32E81AE692C5AE0C53DB380ABB865890B519F7B53237A6BF0906A6DFF
38E77DCACD3AC071D11DE1DFC7E967F6DECA7277FCA73E841737D9AB73C1BD20
C7AC37A6D9E49F46CA0B3AAE98A934A36F592EA95E0C8146B860B8E47A40077D
B6A434E5A5926E57D3CB97E342F78AFDC691400DCA846F44FC45B59DD0EC0BF4
7A42D923C153F728715ECDE9F5C7AD3C9A050D05AB4C20EF9F8B6E3C20910E82
33C12ED3D591A617EC7403738D8951088045EDBB2F40C7DB3FC641A286B210F7
C0C72181F1E12E2954F506812770372AEAA197402E97554F83EEB065BA72A5A7
C548C58576081F36DE3AC6141121306593CBADA6C75ECE4F84577BF9E13BAFE0
8ADB50B6DF5E736D94FB841ECDD571068C6240C1A0EE12DE10C8B2F2885B91CA
E8D0F1A0842C31B7FC0696ED22A2EF777DA13EE1E64749AFA541691AC8C78216
077AAED4A327F03F0F540896DD4946115531D4D80C8B4F965AD434F9B94646AD
DAD21BB8DCCA7A96B4BB5291D10BB257188779975C711C45F4D72891C8157B59
BC52FD1EA5F3D8FBC73588593FD61E5A0DC97EA2E4AA2D6C07BC2970A6EE9F01
0E4C93C08FCDA085657E92D98E9B33E1A6C1550BA61E177A84043B797AAFB22C
9FB5EFE995BDDBF46A74AC94A09D60E190C548172D2E1D8F21295C8F1B96630F
615DD92A73EB8E89EE80310D61F570C11B265C27BFF26B3E844A9641EBF34B49
BB6272F1FFCE48AB5753EC8D7DDD4250FBD6AC4DEA821CC5FE78C4FD67E3747F
E544D61ECFE59DC489CF112C663A5F4F163B95E51AED9017F730445AEB721D19
EDED52411C5FCFBBFBB71AE71A47B9E18E48F5BDA5D89F2EE7505B7928025D40
3D9518B481FEDCBD97BA0595847F38765A6E35825C99CB7AFE5A873340B50AEE
34371F680FCEBF315BCBC1B4C0737EBB623F79B3C763CEF081E90F966623A913
BE45C738E9AB73958E5805EA010E1333ADCE3E7B71D76A21D2795DF38545036C
32DBCC0D92C297BE6F1740C1AA795980BFD4498A70B19F285EB9904B9A2AE930
145C6570789EA3251B24075B21C79723E44B129933E3FCE1F5456164A3574A9C
02A9899C99F87311D1F10194DDF3FB4BF38DC9FF23FB96013687836D7C86B580
690792CE3D9F983284CDB7E85F3AD7C5DA0E518EBD952C4630823924FDC3D9FC
E4FD39840D9756C987A1AEC495CFDCB074A4A976CD7B72CD5B5BF2D597D095F4
4A47285986A946A8650087CB749C06E05262D507FBC02DCE38933A9C5016DFB3
8B97C2A1F8B892AFC86F5F9C8A13D896F755CE9295AE76F09C33C9A46FA654AA
4124D577D702E7A8C5220DE18A35F691291EC0383256CB36700DDD6344DFBD67
3F79CC1DC21B511A8C109EA5A712AA6CC879A65F352BB736CBBD065BD7A4D21F
15EDF19FCECF6F9848B491B0DF2E2FE2065C49F5048312BFFCA27A809768307A
4F6635E83459960666CD44D71FBB7259FFB76CAB58E2E3A256B8B2B995F9ED84
D43C674AC65DD19E696F587D3A70DE88FC7E837895567A596508B4D07479106F
6CDDE2C90520773BDB2BD5AB5DB968E086E6A07210E755AF77415F428F6FA6E5
E70291DA75A95CD4A9D4F10BFDE9DECEFC4D12FCAC94AE5B51F921DCF2D69CC1
4B541397625E50EF57608A2E3DBD1B1820DBA9CC7BEA124C0BD852966FD5B329
B42C7B4B6D7C4CDEB686CEC58564D0ECDE7D4739935BF6BC6F9751B294430617
6F7AB3D009BA46BA450959FF4EEF5B163AB7AC47CD6E95256C54A0D16CDDB671
CC59BE6D8B935D1A346C5B78CFA51950C7639C28C5C08C860EAD0EC4977851FF
7A77DA8DEDA104BAECE43AB290DCA2C64EDFA951B6DF818D155502F957B20E26
619874CEBE43D125F6E8638A83AB9527A8B91C3820738A70AC169757D9D3424A
09596ACE79E7AA6D35E67B782D81D57BF7FD8227DE271EAA85099D9377DAF483
C9F83F7B916DDCD573E0853F61CD892B5DE3777908625E1A91DDE6077E980452
CA039216762900C1A624AACA506DCBF9AC0D226D7D4F937B6C7EAAE7D13C442B
1B2488B413825D8E1D7BA1C4955C7691B72AD442BDDAD18F30DB190E4D004AE5
F3AE5B5E2BBC2F802F00B3A75DE53FEBE1B7B92DC6299D8728B868B9FC5AB023
B335EAD7599B795CCD008E3A8D6C39E9D913191CF13B665149EFDCE931C35D66
DE3CB9D295E1063EC1C29CC763F275EF494917EA8B76B452417F1D87BCFF3BED
8BC7B23A97D080C264195CE5B451E9BD2950EE2F7456826AD21513D4FB0D76C8
D7656A06FA879E70FB7F0D774015499F17D107E7B8AF387350B5EFE9D5FF213D
1BBEFE8D2BF97927C4718715B38AD93021251162DA66C9C1C9B944AEB22F4E87
1755911D8FAEA73E35EB7835FA1C678FE46D84B345CC06DBE98FE971A03261C6
036606198358BC6C8350574F701BCB871353824691231695FFB8C59A36799C78
22398C82B4EE78B7B15B5E9B012FF21EF98AC24A3675EE27F5E7C56276F1D4DF
F5E3C0CDE38FB5E7950A8578DC0423507D9ECCB47341647C562A57BFD4F6548C
A609E9F783C8CF7ABFFB7817F8B06BFA5574A542CE731AF8A1B5CAE6862F8D98
129A9C27ED1961F832A18737656B1F9601460E44ABC67EDD51D2B1C2C189CDD8
0367FDD46274A68F0B4A3FC0EC37E867A3A6F02F7FA6148C3889CE2A169BBA8D
1BA517D591BA5E7D65FB18BC5BB7642593932C9E0DC056CF610D4AFB61CF85D7
18D772F812C6DE3091F3A6E37A92E2B5413766DDE50E614E56B3FB8C917059ED
395840A8E9CD0B9AF386176431B9EB67DAF9B56C3617FEA2E712E5A2C67219E4
2D495B790E01414070F221948D0F785A1E492A03D6B5625535108341CE33B1A6
A67F35D709F120AB17D4CE660697B82A19921BFF0CD5BE88727AC42B7774A75E
162C3DA6F6ED84D17AE2D411311DA9B17A0394E46EA86054E2297F568D8E21F5
8EC322B1D86E58CE46F9982113791C051AE164D1373225C6385265F0B26F3B72
A68643D844B4F85B15A65DD63DAB617CA8B941DA69A928EBE46A46B2BF9450D0
0841C2E785C0851356A4FE39BFC1390EBAD6D8966A47C1AE05E9A2A4432B7BB6
9C467659C2247A0B252177F9512A32BEBC5C892A004DFE16DD9CA9ADB963D513
74B0866ED9AA11865B538D351174CA94DA51B8108E5FFBB3EDD4403C382D2975
1340F63D14C45D0C8ACE829CB8B4E7C7AB5E8E17519BDFA50EAAEE490C76CD60
6A08DB14BC12F033A1D5D20EBF8530E7129D0A90AD3EA1E18D0C4F814B77D3B6
731568486D5A0CD6BB356544510E702C70E7A8F7BA88676DDA7A428EA0A0931D
E976BE0C819F465ED6AB07863F8454DEF4F3A0FACC24EE7F3EF93DB5876B1E85
85578E28AB006E96B2217CA0A6C958CC0668EB2494DD2EB67CB53AB1F2F7922F
7DDBEFB70C66BC259487778AA3B7E0CBE8483FF1688609756EF67A3256239BCA
2269B38B5654F75B798C58CF327A7A4B2F4C5E9BE2F6DCF9A3C3CED684ACD822
152E2C4DDDA841AD84606670F9FDF14377D75506A96F7525F6CD6D0E22E73CFF
BE4201AD849A2A8BC5E66D62A87C591FA667B7FBE9620B6D0532F088E9FD6666
D3DB6463F72DCEF8F040D0D6E2C915C67A41051CF46CB3E318480A9F6E559545
4F634BA1967378B78BBED7F21C2D065AECEE9FCD0E01AC88AF28252FD213821A
77D11C90F88FC8829453459C640B3045325DE4E377278A37C2067912CDE2C1FF
4F9E51156B6C7224E121C1C13DB37B873EADE37084FCAC69094D687FEFDEA1F4
158CC4D7F3AA612E0FDDA61D8ED3FA923EE7FB9DEA0E345F0F35181EF41714FF
5C65A785F07ABE294F2E33A584B90A75F7E277A168F90B53848EF590BEDC9321
DCF82575234F2B7C46FFFCF9F4AA805E82EAF0F9AFA9C087F43AD07BFE56FD1D
6ECD39D00074DD55D041B5F2C74A612B56AD559F2DD3D6835D499E17227FA270
2D5777EE707AB6AB671F6CF4B3081A4B47EB4AC7DB36F0EE5C07FBA37D0E9995
3A690AA5AA4748EDD546F479E7D69B54B7994EEF5BE765ED08F70B349334597E
988DE863065E6200CEB86EE9B1AD89A1A7B087B6D017EE02AB63E53034D57A7D
EA6909BD461E3A98B697312C3CEA08BF67187BE902468A649CCDD68458FFD0AF
D0860ED9269FE46B305D0E415873AB7FB3C503F54E22E2B141D5370F70A8FC94
04AE85F93BEB65E16F00207C13BD757BD72CBA288A775699B0DEAB86EF868050
47CD5F5A7CCC6322BA223AA773776E093B105138E944B0421CF55B62B2BC5E7E
9A9EEDA1CF6675938EC1D6115412300C0FD623644940F4CDE53375F9659B1C08
3CAB770731A0D4CC65FD56C24953888C0226FB5FC336879B1C2C1D4AB4CEC041
604E178C54741A2BC86E95FBF9783D1E1A37144147DC9A450A35C500C7D37311
FA695AFA282C3CDE05D1F89C5B497B45B3EA9A479B91525E753803468FD152C0
CFD0662D318787C108CF6922C96AD6DAB7D696291ACDE1EA43EEDB9555877FC0
AB783CCBBB02DF62B0B0224348D30757E1E1B9D9BA48E1CF0C0F3D46912402BB
AA2BEE3B2AB1A7157A4F5E5F2DCD33CFE827541DE6A6669428F89D69204307B7
C975AA8D5657A0E4A5E5D488EE953ABAD52D0A7C86E66BDCF81F787644E41C3F
52D571E95C30079ED617662E5ABAD6761AEEC6F5F24989459C61578B89CDBD75
E427E0CB5F0F7CA9A7B4FFBEF3BB756CED147B4BEE38F4D34EBD675A8260F8AC
27551CC80576D274C172BCFFF90AC2C6F13CBD9D331F208431698378273B0940
730B55C6E547FB51227A5AB0C13E58E86581C981AFF32F6AEDCDF5F3544D9AD0
AADF7C052272FAC751480BAC73FB353D661672D2D017F35933C584D171D7A97F
BBD8CB1AE225DDEA528971BD123E6A173BC7E80F8539686D434102D10FBAE3D4
F11FA5F142020387091D1054E8EE1A7E87B6992D2296B92DFADADF10D95BC15E
8921AC13EF060E421013AB9911D09CD68788581B666B7198474575A62E1C4EE2
3EF84171CF7B2C41898B03B8407E5D1397AA754A08F51077748D1F0A951BF74B
76495AA9C0A318B4B826B39C6C9C9246F8DFFA8CEA79A99AB0622795E0CEFD55
1D2C57789B62A14E64956755D05F4AFF08A8BBC25EBC67AF2CFFAAA7F2FEAB1C
45995B2D60295D216F39ACD2DFCAA5FD282C32F6C03EA2EAF4EF18E55D9D0D21
6F1C6187395832C5205944C61FADABB41A6EA73192FF250AAE814742F95C8D91
DF57C759D68E9C85D0774F0274A9C670A2833CC6DCE45D2E4898BBD96830A117
E1DBBC8E9167970E1D356361BFAE3F7F5DF22D8F98CB5E4324C0AAF32BA00DCE
31316E0BB0F62E4DA76D7346B537FD99AE1170DBDA9AC3B3B72801E011B0E9D8
4CD20F69CED73C8C771345EEFB470C543C59D960BE4E232CCECB1E57276D4863
3DCDEB7F9D21B332CE4982A6E06CCA9D37701C1041B8A59CAF3791C219F930FF
9F42A78CC5C1DFF94FBB5CF83F65A6F1952EB4096C1B91B6657871FB2FB111B7
E45C34EFDF9A5AEDA4AD3EEA0C6310CEE07C6E865018CFA9A68FC5D652D38368
8537E7372AE98E1707FC773FA937A248D6B91A6FB05DCC02A67AFFD0B430A511
E4624C7214E2BEDFE7B9965171FF22F317E92F5044CB0AE12FB168192AEE4AF6
96EDE54CDD8A7B0BC8F20DA22E09E257BE924C7F0B2E9EBC37847A2850BBB4A3
A59823AE4159CCFE773D9ADE982DC7610F860FEB4FE96D02EBEDFDEA9EB53B96
001443716A189D0C954FF3EEFB10AB001B3EC507E3B4BA11F6D5EE1BAA6AD061
A1F94CCB61CC8B279A8333BCD4B9274CCC93179A9FDCBDBA8A91885A39202444
EB3DEEB0AA8DF1C430E00C41B941310801B2B009FC25423BB9D4E4821D55D638
EFEC915577D099BE620C0868AFD6C9916FF4F83185A2B9793C0F5FF05D280E13
F3E6B825F861467649D10B4872EFC2B256A8AD30AE820590CF22DA6BD5621A49
4EA63AB3321C9FE6DCBC7D71F9FE454C48DCAB35CA1FC6E44D19DC4D12D78EF3
B40E5323A575E10783F79F90EC2C2B435FD290207911EF7C24C48C184E2BC435
0D72B6956D0C2F549618A017FCA162B499731A23F1D219C7E69F44C88799A461
EB73483D668221C3D21B072AA0B8373C97DDBFD7445D187E6763FB6FE9ED851F
BC93DD94BC03CF89CA2C37032DBA9D32B10586ABEB987F718C6428CFC648FCF0
869CB1C2C67DAF6DD7825A6CBD56048BE3943949B1CC8EA52B9B12514DC72D76
F20DF2DFD495239B287A4496727EA39DE609E95DA8AAE4A6F8B0B2ED3A99469B
CF9EBD0491F92E8BD8E2B0B0F2D0749B78802208CD8C7973617B36A10C2C09CD
85A9D4D71E03BC8B89881DD509E1A62393F2980DBF0C3FC8C66A1DE3D9EF20A0
B9475F129EF467123271A0026DDC2196400C3145920D8B2F26DA7F86AD036233
47B1E689A6684F19222709FF959C154B01E970E6C48C1EC6A3647E7500A8B368
D163C0DF5E0BBE0301ABECBB8978417A8373CE5DF30EB3B9E3A436AA951672F5
D7278419D08951950F55EE53B7C240F439F05E2E3FB11BACAF2BFBE94A3E9A65
42B4291D7FFCA706B0126C348B75387F26C429B0CFDC2FEAE980754434B67398
642D095CE5C3F3A1D648FE77263C0F4A366510666C0FFA806E7171162799B2F3
390A27791E7F5F660CA7C1063DA4510B379B54BA30955750B3B6DB0100905B2B
D02F6A901B12777D5F1BE97653538792484B2CEDFC711C018EE3041290C567B3
9E77DAEB968169DF6C072EF4701514A2DC517EFCE118718EB65B9914ABA55342
22076F2AEC4749A7E86F7E4D042C3954CCB591ED0D6AB56A6D9716C9FD07FF70
3984954AE3C94BD04AC8542DFC0D52D2649A0D361FC716CD8D9957C4000E39AA
56E6ACB324641A901BA5102E7A73AADCE0479A44C521B1E16CF48D5117EB72D5
B950425A64326DDC830EF61AAEBB95FA65041ED9DB2BABCBA06055DADF3FFDD5
2AB6FC2D4410B9EF1636364A42ADAFFECA005233AA8DC72EB3247326334665FC
ABF32E7791976051822CA5BB33EAE84C047D63612280CE90986F6F38AB1C7035
2BDCECC7C23C7DB31ECBAF614FE975613CB179B136C2D5CE9C4AAEF538ADFAD8
DAC430ED897586988773B920282147FDDB16AC162252FB67221B1AC783E380AF
C79A30E76FEEE7276CEA4A984CB9A4574D611FDD5C00C088D61869652AD67440
CC8D5DCFAE6AE31FB8A0483715350BDEB4B0CEE65182D787A448CFF8EE542E9E
7424092305293724911F2719633E0CBAC492905E3612E70E3304C0DFE8925A3F
C2A44A01E613315C7BAB0BC185ED51512CBD5CDABFD32A41C9D7F20923003262
414281BCB53CA4C50D8746AC2F92F558D04EEE329F3254EB7820FAF6F9B7D9F4
8A6A8C33CDD32D2380C54222C653216C885533525531752B05CD373276D0A475
7D7A01BCA7C005F06FB3C2DC56FDFC336E2F55B969AA98F79711C9F6AA26EDA3
02216FDE21012F9A4C20295E98ED249EB34175A6CEFF2D95876D82AC396C6B4B
3E58A42CA4D258A1C96FA41553FB17F36AE9E4574D4A17D16A6BF28A785FD852
AC449B780FF6D86CCF23AFB5862C09C426E92353D19CB52E6069465C49277152
6EC8F74112142C64CDC1F1E4242A7D41A7FE88B4C3A96CE5B6C577DF355FAD44
3551C0BFFAFCE6B0CE7DF1C6E6E50B29C875C9A88012233B76A08ADFEC195890
FD4B5701A000A49AFC5ADB04E93C2B85F5969BF4517F5749DF8F9961FB0EA945
92789686492237A7DF29770CE7B3D4D33E22C64607A4F28D7C09A88211E1EB93
6D72DCAEAE343B408398295D2C0A2225B7CAD7F89BF26DDEFE59BBB13B84E609
C043B242F796A458A2F80AD47D11E9484F0BA7578B14A1DDD21304B89D666922
544F2AC366E2AB94E96B33C43CEE0AB92661F11621E0685107470CE6ECA34280
B62A6EA3A95B7FE0FCE95B5FDFF35DBAF29162B8C17E320FB90305B0F6C6CC34
E2A2F7A4E3AF8AB593F3EA05C06A4B776914715CC3BBE5610A001942DC4FBDD4
250E9C2ECAFF6845DCDAC3CAF86B6E6337EBD4DE3933DEBF90BC2310BCD11089
D9A258511DC00B70D7AAD80A1E4892471CC183245F1B733C1743CB2442B3F054
026CC8BD67F32EDE74682E9EB9856AF557DFA4D0C3C442D34E5CBCFAE0772B96
D764CA0658F89D94DC37174E48F77DBCEF686279DF9A860D340B56B6315A3B88
2D9DEC744615111C160700208DED5D2F0E09783A30539C1F2C0366E225E72B43
CC085C639043FBF159FAFA072BC40A6DD1EE3983F5A561360AFC38814D2D5A9B
D3772A7257A417060EFB901A2CBC7C5C22FF42B7A6B8789C015170F725D77E58
493EC9BD6D8F886C400C541E7A8DA85E4BB45996F0B6BA7B1A92E55CB7FD9193
FE38A83851B579E5BDB56286E1E0EF335B6147AA36F4B98F59FF5970599A0B7E
14316DEAEFE9A58F39A317225F6E9D00D59F66D2F1315976B1E909D64CC79AF9
A6FE4E47142C351CCFB641F819244582D661233D99762AA34F386A5038C1B30E
E26799EF2A44064FF02614453E090A54F278F6C61EE36F887D0CF61AAB86DEF5
EBBF05D46AE0422FF0133F00D90B04EBBDDC20F2D6A5DE232A4ECE8CB9C2D636
5ADD35B10AD7C00F6E192B862108EB7251D7FB6EE2975AC5DAEF39BEF41424B8
72DC9DC5BC5420063AAC070F3CDC47382BAC5DDBA2707C2603A81696C06FEC06
EED3C274C27DF876
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: rtxi
%!PS-AdobeFont-1.0: rtxi 3.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 12681
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0) readonly def
/FullName (rtxi) readonly def
/FamilyName (rtxi) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /rtxi def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 47 /slash put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-141 -207 808 682}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363AC04DF694B4952B3BE065190D51C75BB2A322
211F27FEAE3D1CD1122434C96E66440C9006496EEB6B6ADF8FEEFD2CD5887402
0D7D5FF2C1DCD81AEF4BF2D43E56F4AE5B0D3EDF79B1F53F4084E45D50A781A6
D50EB2AB1F90DEE0977A9B5D37C38056DEAE78420EDEA5FD3808638713588AF9
3280279BA6439DE1D0AA673824E0179EB089B9A6E1BF8BB94298C32F297F11FB
14B9D9D864E7394AE942AACB940C72202533D10DB61C9F05B0AE5B3DFB73A3CE
E82A07089D31043EA2F57FB7FFA189EC497D947E723E69124BD7250378100E29
87D839C22B2419342F2A68FA717AD61387683616B58E8248CC5288B8F2AEA89F
6F6189256C8633D4AAA8DE92AC0729F85A68399ADBF6D48FDB8CFDFD589D740B
0D81FCA3BA4678DC03FAD6D90A0F81B969F1A3687709A25CB68EBD2DA2E036DC
6EF89874586049D63C4E0496C265D5807C63AD531A9573CC39E8B58AE59FFD88
E0AAB56A93E3CBE604022DED7F3A5A05E9FC9417B84AC9AAC072FF6DDAAEC886
03CACEFCE5A95981BF8B2F18AE4EAE035C8E95661CBEBF3734A2820F2F92D6F7
013353ABC00F629C474EB6BDEF33F077BADF48F527B8FD1A4CB4345CD084426E
ADDAADD21E4DD7DC5199435270B17B9AFE2ECE5E2C3107985D3F856E2F4E5234
27DE1C4B9CEEDEBD68793644A3AC948DAA0DA084D857EC206A910DA8BF7F9DA3
52EAD7E47FF50AB36993E6112A75A5DCF5808CFC7D343A7FDA08F6CFD85AA8A4
90D82416687C36B04ED6E924C8D5163DF1691F052CD6986C0D3A794C3628C63E
8E38D62A92F560D1CA8F904C4BD04C85DA64E530AEC14AC854E012AEFB7D5061
3E2C46AB63F23B1079F7F56C6A824D551C6D64C3C57CACC6F4D02E5438F362F5
AE3637E0737CED3BD9DF0317BA81A07B3704F1304B27B17C58A61D55341E8306
243B9F8DDAF49C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: rtxr
%!PS-AdobeFont-1.0: rtxr 3.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 12232
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0) readonly def
/FullName (rtxr) readonly def
/FamilyName (rtxr) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /rtxr def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 14 /ffi put
dup 43 /plus put
dup 47 /slash put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-70 -218 792 683}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACC3A819F74D19694FEF234D46B09D261A206
5701088EA26D9FBD7C085BC1BE69A98068A62C38375BEEB488ED9AAABE84885E
92C1CA8A2A04C7636B2416F5656B25F234780C40924DA825DBEF32B5BEEABA3B
F239D8F0580B97C841973AE184074B483616AF2BD12551EEFBE3C7107D4D2322
110CF853935BFE09E91AC0CF4CEEDBAF98555A52FFEDFF13AFEC32AC694F7A82
B84D6A8F2C8168C77F9AF7DF345C94CC8EEFCCE85DD9F27B3E14356C210333CF
AFEF14B68EEF92C9C3FEEE99CC8AEBC18EBF6AE9787B44B831C81C2551BCD812
CF2CA815BA62008B7D5C06B101121955417C2A6EEAA45C132B4A8856EC2E62D4
72128A3C944384B506B6C4E079463DE45A6731B09D0DAB6B4A65AAD9B7082F09
9178921759E33B5A56E29A3FCA902ECAD8F941830563BC975934FFF213A53713
34CDC01EFB70FF309B17857B6CC4FAD4F46784C7C819A79252A2D5C2C733780A
7FAFA6329B3C002901E3C4D85A8C953D34044EA7CC95E0E08A723F6E00269A60
8FCB8BAA2419D4B6FADE7350CEDE8D8720A80DB951D1D9FAC8C7E3AFE68DE85A
9D8171A082030465C70F7C1A5A3958968E71809A7FACE2CA85C7CFD491CBB619
C6DF7C375ABE853DBE8045A2D75631964E08DDD3FA7D3948A8B5DF5040C3C77D
8666C4702FE877CBC9C553513037E8D8134DA84FE59B7DFD8E7DFD6DCAEF93E5
BAB759019AC680CEFF008AE03647669382B6000667EEE2721BED9F81848B2209
1856DD8EB4A7AA2349A2DF81A63A01C2709E394274B1CCD2084D578B15029B94
C5C5CC6139BFB2F63A6627BC3F97BE3A87B92E103FA62D80B00FC334DF665696
75C4035722754C8FB9B5CA74DA3E03B25D57BC9C6B4474AA17C412FC63E5A355
49D55AF71E76E5FACB8B5CCB921A386F3E58FEB7F9648043AF0DC2B02F293418
E6262B5ABC3B6B7B21B9DDA478179FED60F9C3CDED83E5ACBD97461AE243FE80
E723ADB469CCCAFE6878F8ADD81EDEBA77102336FFA20B1406DF2FD97FF872B5
276C4172E93FDEC1F12BEF332A3DBD6F987887310890710A12DE83DE059B4A6D
C166C9BC42180A6B2D07EB92BA134FD1A07293A1151D960A97319653050224E3
CE1E8DDAFA887BA08EDAE4511133E2FDFED58071B107DB96B32BEBCFD1B487F7
C045BCEDBFB3C26CC3CE61E552D6A68761CB21661CBBEFFD9BCB13CE371F99F2
E6611E1EBDBDBC8A8E6CCD4A95C2FF8DF79757D36718C0325818105EDCF7BFB5
3A3D0EE5FBE47571383399F35CE5D6C3A96E5D0D23D692F83BADB564A8529B65
E345CB8027706AD0A40AC3FB5C3534E7C9CDA9DFA3693BB9B4A1579E5765D0A1
294473C758D4C153AB137EB7DCBC43B14C9207DB44C1DBCBE4FF87F69FBF593D
71BD75F5C8AFF779193869EF2B04A986437A9BDB0491F7D38B8E88F10301AD90
15401C1A95C39E935C980A41E073FEDAAF4FD21E57E1B738ADF6FDC9360CB148
FEEA9DE7F3393BB33453232CC425E21C6E03A449FD7F172DAB5BA02A610827DA
F7A6C83BC98A1F2E8BF1DA8A0E004AAC0D7AE3DE2F56598CA5132883B5754B59
D9BCCEF532221D6DC0112E24E19627A64E179BA985DCDAC89956BFAB1A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 28343131 42514697 1000 8000 8000 (report.dvi)
@start /Fa 134[442 1[665 1[498 277 388 388 2[498 498
1[277 2[277 498 498 277 442 498 442 498 498 12[554 1[609
3[665 4[332 4[719 1[609 609 917 5[332 1[498 1[498 498
2[498 498 498 1[249 1[249 4[332 39[{ TeXBase1Encoding ReEncodeFont }36
996.264 /NimbusRomNo9L-ReguItal rf /Fb 198[387 387 387
387 387 387 387 387 387 387 48[{ TeXBase1Encoding ReEncodeFont }10
774.872 /NimbusRomNo9L-Regu rf /Fc 134[565 553 1[553
563 477 431 547 1[452 553 546 682 453 1[327 271 557 536
427 470 536 486 495 536 97[{}22 1106.96 /rtxsc rf /Fd
134[498 1[719 3[388 442 2[498 9[442 554 24[775 16[332
58[{ TeXBase1Encoding ReEncodeFont }9 996.264 /NimbusRomNo9L-Medi
rf /Fe 136[719 1[498 277 388 332 1[498 498 498 775 277
2[277 498 498 332 442 498 442 498 442 14[665 1[554 2[886
3[332 1[719 554 2[665 20[249 1[249 2[332 332 40[{
 TeXBase1Encoding ReEncodeFont }30 996.264 /NimbusRomNo9L-Regu
rf /Ff 208[200 3[704 43[{}2 1106.96 /rtxi rf /Fg 5[553
1[553 4[553 2[553 2[308 6[738 4[553 103[491 491 738 491
553 308 431 431 1[553 553 553 799 308 491 308 308 553
553 308 491 553 491 553 553 10[676 1[615 1[676 3[738
922 2[491 369 799 5[676 15[553 553 2[277 369 3[369 369
36[553 3[{ TeXBase1Encoding ReEncodeFont }47 1106.96
/NimbusRomNo9L-ReguItal rf /Fh 208[302 3[704 28[915 2[664
11[{}4 1106.96 /rtxr rf /Fi 2[553 2[553 1[553 4[553 2[553
2[308 6[738 4[491 19[369 54[553 28[553 553 799 553 553
308 431 369 553 553 553 553 861 308 553 308 308 553 553
369 491 553 491 553 491 6[676 799 1[1045 799 799 676
615 738 1[615 799 799 984 676 799 431 369 799 799 615
676 799 738 738 799 5[308 308 553 553 553 553 553 553
553 553 553 553 1[277 369 277 1[553 369 369 369 4[452
369 29[615 615 2[{ TeXBase1Encoding ReEncodeFont }82
1106.96 /NimbusRomNo9L-Regu rf /Fj 138[862 516 603 688
2[775 862 1[431 2[431 2[516 688 862 688 1[775 14[1119
1[947 2[1463 5[1206 947 2[1119 1[1119 65[{
 TeXBase1Encoding ReEncodeFont }20 1549.74 /NimbusRomNo9L-Medi
rf /Fk 9[443 2[443 5[246 11[393 103[443 2[443 443 246
344 295 2[443 443 689 246 443 246 246 443 443 295 393
443 393 443 393 6[541 4[639 541 492 591 1[492 1[639 1[541
1[344 295 639 1[492 541 1[591 16[443 443 443 1[221 1[221
5[689 38[{ TeXBase1Encoding ReEncodeFont }45 885.568
/NimbusRomNo9L-Regu rf /Fl 105[443 30[591 393 443 246
344 344 1[443 443 443 639 246 2[246 443 443 246 393 443
393 443 443 12[492 10[295 2[541 3[541 541 8[443 5[443
443 443 3[221 44[{ TeXBase1Encoding ReEncodeFont }31
885.568 /NimbusRomNo9L-ReguItal rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: SixByNine
/setpagedevice where
{ pop << /PageSize [432 648] >> setpagedevice }
if
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray -2646 -3091 a Fl(Article)223
b(submitted)g(for)e(completion)h(of)g(the)f(module)h
Fk(Programming)f(for)g(NLP)h Fl(at)f(ITB,)h(April)h(2018)3975
b Fk(1)p Black 0 TeXcolorgray -2646 -1984 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2646 -1984
a -2646 -1984 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2646 -1984 a -2646 -1984 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2646 -1984
a -2646 -1984 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2646 -1984 a 0 TeXcolorgray 0 TeXcolorgray
-2130 285 a Fj(An)387 b(RRG)g(P)-15 b(arser)387 b(f)-39
b(or)388 b(Middle)e(Constructions)g(in)h(F)-39 b(ar)-28
b(oese)5391 2942 y Fi(SIGMUND)278 b(VESTERGAARD)i(\226)d(B00108126)6114
5045 y Fg(Institute)g(of)g(T)-102 b(ec)-17 b(hnolo)-11
b(gy)281 b(Blanc)-17 b(har)-41 b(dstown)p 0 TeXcolorgray
0 TeXcolorgray -2646 8255 a Fe(In)282 b(this)g(article)h(we)f(describe)
h(a)g(parser)e(for)h(Middle)h(Constructions)e(in)h(F)-15
b(aroese)283 b(b)-20 b(uilt)282 b(on)g(Role)g(and)-2646
9362 y(Reference)250 b(Grammar)g(\(RRG\).)-2646 11023
y Fd(K)-25 b(eyw)-10 b(ords:)250 b Fe(RRG,)f(F)-15 b(aroese,)249
b(Middle)g(Constructions,)g(P)-15 b(arsing)-2646 15201
y Fi(1.)775 b(I)p Fc(ntr)-35 b(oduction)-2646 17028 y
Fi(In)477 b(this)f(paper)i(we)f(describe)h(the)f(architecture)h(and)g
(implementation)h(of)e(a)g(Role)g(and)-2646 18356 y(Reference)223
b(Grammar)e(\(RRG\))f(parser)g(for)g(middle)h(constructions)h(in)e(F)
-17 b(aroese.)222 b(The)g(parser)-2646 19684 y(will)529
b(be)h(able)g(to)f(tak)-11 b(e)530 b(a)g(so-called)g("middle")f
(sentence)i(and)g(tell)d(us)i(whether)g(it)e(is)-2646
21013 y(grammatical)279 b(or)e(not,)g(and)h(if)e(it)g(is,)g(sho)-28
b(w)278 b(an)g(RRG)f(tree)g(for)g(it.)-1071 22341 y(In)306
b(the)h(\002rst)f(section)h(belo)-28 b(w)308 b(we)f(will)f(brie\003y)h
(describe)h(the)f(morphology)i(and)f(syntax)-2646 23670
y(of)361 b(F)-17 b(aroese)362 b(in)f(general.)h(The)f(description)h(is)
e(based)i(on)f(\(Thr\341insson)g(et)g(al.)f(2012\).)i(W)-89
b(e)-2646 24998 y(will)402 b(then)h(mo)-17 b(v)g(e)404
b(on)f(to)g(describe)g(middle)g(constructions)h(in)e(particular)h(in)f
(the)h(second)-2646 26326 y(section.)308 b(After)d(this)h(we)h(will)f
(describe)i(the)f(design)g(of)f(the)h(le)-17 b(xicon)309
b(in)d(section)i(3)e(and)i(the)-2646 27655 y(parser)227
b(itself)e(in)h(section)i(4.)e(W)-89 b(e)227 b(will)f(\002nish)h(o)p
Fh(\013)g Fi(in)f(sections)h(5)g(and)g(6)g(by)g(testing)g(the)g(parser)
-61 b(.)-2646 30726 y(2.)775 b(F)-73 b Fc(ar)-35 b(oese)278
b Fi(M)p Fc(orphology)e(and)g Fi(S)p Fc(ynt)-82 b(ax)-2646
32553 y Fi(F)-17 b(aroese)356 b(is)d(deri)-28 b(v)-17
b(ed)356 b(from)d(the)i(Norse)e(language)k(of)d(the)g(primarily)g
(Norwe)-17 b(gian)356 b(settlers)-2646 33881 y(who)461
b(mo)-17 b(v)g(ed)463 b(to)d(the)h(islands)f(in)g(the)h(ninth)g
(century)-72 b(.)462 b(Due)f(to)f(a)h(lack)g(of)f(V)-66
b(iking)461 b(Age)-2646 35210 y(and)362 b(medie)-28 b(v)g(al)363
b(sources)d(little)g(is)f(kno)-28 b(wn)363 b(about)e(the)g(de)-28
b(v)-17 b(elopment)364 b(of)d(F)-17 b(aroese)362 b(into)e(the)-2646
36538 y(language)504 b(we)d(kno)-28 b(w)502 b(today)-72
b(.)503 b(Nothing)f(of)e(substance)i(w)-11 b(as)501 b(written)f(in)g(F)
-17 b(aroese)503 b(until)-2646 37866 y(the)384 b(1770s,)h(by)g(which)g
(time)e(most)h(the)g(features)g(of)f(the)h(modern)i(language)g(must)e
(ha)-22 b(v)-17 b(e)-2646 39195 y(de)-28 b(v)-17 b(eloped.)-2646
42142 y Fg(2.1.)776 b(Nominal)278 b(cate)-44 b(gories)-2646
43968 y Fi(Lik)-11 b(e)523 b(Icelandic,)i(F)-17 b(aroese)524
b(has)e(three)h(grammatical)h(genders;)g(masculine,)g(feminine,)-2646
45297 y(and)422 b(neuter)-61 b(.)423 b(F)-17 b(aroese)422
b(nouns)g(in\003ect)g(for)e(gender)-44 b(,)422 b(b)-22
b(ut)421 b(also)g(number)h(\(singular)p Fh(/)p Fi(plural\))-2646
46625 y(and)453 b(case)f(\(nominati)-28 b(v)-17 b(e)p
Fh(/)p Fi(accusati)-28 b(v)-17 b(e)p Fh(/)p Fi(dati)-28
b(v)-17 b(e)p Fh(/)p Fi(geniti)-28 b(v)-17 b(e\).)463
b(The)453 b(in\003ectional)g(endings)g(v)-28 b(ary)-2646
47953 y(according)280 b(to)d(gender)-61 b(.)278 b(De\002niteness)h(of)e
(nouns)h(is)e(indicated)j(by)f(a)f(su)p Fh(\016)p Fi(x)-17
b(ed)279 b(article.)-1071 49282 y(Just)418 b(lik)-11
b(e)420 b(nouns,)g(adjecti)-28 b(v)-17 b(es)421 b(also)e(in\003ect)i
(for)d(number)-44 b(,)421 b(case,)e(and)i(gender)-61
b(.)421 b(Addi-)-2646 50610 y(tionally)265 b(the)-17
b(y)266 b(also)e(in\003ect)h(for)f(de)-17 b(gree)266
b(\(positi)-28 b(v)-17 b(e)p Fh(/)p Fi(comparati)-28
b(v)-17 b(e)p Fh(/)p Fi(superlati)-28 b(v)-17 b(e\).)271
b(Adjecti)-28 b(v)-17 b(es)-2646 51939 y(typically)492
b(ha)-22 b(v)-17 b(e)493 b(tw)-11 b(o)491 b(forms)g(of)g(in\003ections)
h(-)e(strong)h(or)g(weak)i(-)d(depending)k(on)e(the)-2646
53267 y(de\002niteness)279 b(of)e(the)g(noun)i(phrase)f(the)-17
b(y)278 b(are)g(a)f(part)g(of.)-1071 54595 y(Finally)-72
b(,)552 b(articles,)e(pronouns,)j(the)e(cardinal)h(numbers)f(1)g(to)g
(3,)g(and)h(the)f(ordinal)-2646 55924 y(numbers,)278
b(in\003ect)g(for)f(number)-44 b(,)278 b(case,)f(and)h(gender)-61
b(.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 34132
-3091 a Fb(2)p 0 TeXcolorgray 189 -877 a Fi(F)-17 b(aroese)237
b(noun)g(phrases)f(sho)-28 b(w)236 b(e)-17 b(xtensi)-28
b(v)-17 b(e)238 b(agreement,)f(including)g(number)g(agreement)-1386
451 y(between)d(nouns)f(and)g(the)g(adjecti)-28 b(v)-17
b(es)234 b(that)e(modify)h(them.)f(This)g(holds)g(for)g(both)g(attrib)
-22 b(uti)-28 b(v)-17 b(e)-1386 1779 y(and)257 b(predicti)-28
b(v)-17 b(e)258 b(adjecti)-28 b(v)-17 b(es.)258 b(W)-89
b(e)256 b(illustrate)f(this)g(using)i(the)f(noun)h Fg(dr)-50
b(ongur)283 b Fi('bo)-11 b(y')256 b(with)g(the)-1386
3108 y(adjecti)-28 b(v)-17 b(e)280 b Fg(kl\363kur)303
b Fi(')-61 b(smart')276 b(\(Thr\341insson)i(et)f(al.)f(2012:)j(61\):)p
0 TeXcolorgray -279 5132 a(\(1\))p 0 TeXcolorgray 0 TeXcolorgray
1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(ein)4344 6460 y(a)6139 5132 y(kl\363kur)6139 6460
y(smart)9472 5132 y(drongur)9472 6460 y(bo)-11 b(y)-72
b(.)p Fc(sg)13420 5132 y Fi(kl\363kir)13420 6460 y(smart)16507
5132 y(drongir)16507 6460 y(bo)-11 b(y)-72 b(.)p Fc(pl)4153
8040 y Fi('a)277 b(smart)g(bo)-11 b(y')277 b(')-61 b(smart)277
b(bo)-11 b(ys')p 0 TeXcolorgray 2119 9632 a(\(b\))p 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(drongurin)4406
10960 y(bo)g(y-)p Fc(det)9214 9632 y Fi(er)9214 10960
y(is)10517 9632 y(kl\363kur)10517 10960 y(smart)13850
9632 y(dreingirnir)13850 10960 y(bo)g(y-)p Fc(det)p Fi(,)p
Fc(pl)19028 9632 y Fi(eru)19028 10960 y(is.)p Fc(pl)21391
9632 y Fi(kl\363kir)21391 10960 y(smart.)p Fc(pl)4153
12540 y Fi(')-20 b(the)278 b(bo)-11 b(y)278 b(is)e(smart')g(')-20
b(the)277 b(bo)-11 b(ys)278 b(are)f(smart')189 14564
y(The)217 b(gender)g(of)f(nouns)h(is)e(re\003ected)i(in)f(the)g(di)p
Fh(\013)p Fi(erent)h(forms)e(of)h(the)g(personal)h(pronouns)-1386
15893 y(used)262 b(to)g(refer)f(to)g(them)h(and)h(the)e(gender)i(of)f
(adjecti)-28 b(v)-17 b(es)263 b(and)g(articles)e(used)h(to)f(modify)h
(said)-1386 17221 y(nouns.)278 b(W)-89 b(e)278 b(illustrate)e(this)g
(with)h(the)h(follo)-28 b(wing)278 b(e)-17 b(xample:)p
0 TeXcolorgray -279 19245 a(\(2\))p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1107 w(Hetta)2119 20574 y(this)4959
19245 y(er)4959 20574 y(is)6262 19245 y(ein)6262 20574
y(a.)p Fc(m)8155 19245 y Fi(kl\363kur)8155 20574 y(smart.)p
Fc(m)12016 19245 y Fi(drongur)12016 20574 y(bo)-11 b(y)-72
b(.)p Fc(m)2119 21928 y Fi(Hann.)278 b(er)f(kl\363kur)2119
23256 y(he.)p Fc(m)g Fi(is)f(smart.)p Fc(m)p 0 TeXcolorgray
0 TeXcolorgray 2119 26706 a Fi(Hetta)2119 28035 y(this)4959
26706 y(er)4959 28035 y(is)6262 26706 y(ein)6262 28035
y(a.)p Fc(f)8058 26706 y Fi(kl\363k)8058 28035 y(smart.)p
Fc(f)11664 26706 y Fi(genta)11664 28035 y(girl.)p Fc(f)2119
30085 y Fi(Hon)i(er)f(kl\363k)2119 31413 y(she.)p Fc(f)g
Fi(is)f(smart.)p Fc(f)p 0 TeXcolorgray 0 TeXcolorgray
2119 34863 a Fi(Hetta)2119 36191 y(this)4959 34863 y(er)4959
36191 y(is)6262 34863 y(eitt)6262 36191 y(a.)p Fc(n)8120
34863 y Fi(kl\363kt)8120 36191 y(smart.)p Fc(n)11845
34863 y Fi(barn)11845 36191 y(child.)p Fc(n)2119 38241
y Fi(T)-89 b(a\360)278 b(er)f(kl\363kt)2119 39570 y(it.)p
Fc(n)e Fi(is)i(smart.)p Fc(n)189 42922 y Fi(Old)519 b(Norse)g(and)h
(older)f(F)-17 b(aroes)520 b(had)g(four)f(morphologically)j(distincti)
-28 b(v)-17 b(e)520 b(cases)f(-)-1386 44251 y(nominati)-28
b(v)-17 b(e,)231 b(accusati)-28 b(v)-17 b(e,)230 b(dati)-28
b(v)-17 b(e,)230 b(and)f(geniti)-28 b(v)-17 b(e)230 b(-)d(b)-22
b(ut)228 b(only)h(the)f(three)g(\002rst)f(are)h(producti)-28
b(v)-17 b(e)-1386 45579 y(in)330 b(modern)i(spok)-11
b(en)331 b(F)-17 b(aroese)332 b(\(modern)f Fg(written)f
Fi(F)-17 b(aroese)332 b(still)d(retains)h(the)g(geniti)-28
b(v)-17 b(e)332 b(to)e(a)-1386 46907 y(de)-17 b(gree\).)279
b(W)-89 b(e)277 b(illustrate)f(this)h(with)g(a)g(small)f(e)-17
b(xample:)p 0 TeXcolorgray -279 48932 a(\(3\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1107 w(Gentan)2119 50260
y(girl-)p Fc(det)p Fi(.)p Fc(nom)8009 48932 y Fi(sv)-28
b(a)-22 b(v)8009 50260 y(sleep.)p Fc(pst)2119 51840 y
Fi('The)277 b(girl)g(slept')p 0 TeXcolorgray 0 TeXcolorgray
2119 55290 a(Eg)2119 56618 y(I)3791 55290 y(s\341)3791
56618 y(see.)p Fc(pst)7284 55290 y Fi(gentuna)7284 56618
y(girl-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 32872
-3091 a Fb(3)p 0 TeXcolorgray 859 -877 a Fi('I)276 b(sa)-17
b(w)277 b(the)h(girl')p 0 TeXcolorgray 0 TeXcolorgray
859 2569 a(Hetta)859 3897 y(This)3699 2569 y(er)3699
3897 y(is)5002 2569 y(hundurin)5002 3897 y(dog-)p Fc(det)9442
2569 y Fi(hj\341)9442 3897 y(with)11853 2569 y(gentuni)11853
3897 y(girl-)p Fc(det)p Fi(.)p Fc(d)-35 b(a)-99 b(t)859
6169 y Fi('This)276 b(is)h(the)g(girl's)f(dog')-1071
8190 y(Despite)234 b(this)f(a)i(geniti)-28 b(v)-17 b(e)235
b(form)f(can)h(be)f(produced)j(for)c(nouns)i(and)g(personal)g
(pronouns,)-2646 9518 y(b)-22 b(ut)305 b(less)e(so)h(for)f(adjecti)-28
b(v)-17 b(es.)307 b(The)e(geniti)-28 b(v)-17 b(e)306
b(form)e(of)g(personal)h(pronouns)h(is)d(widely)i(used)-2646
10846 y(while)359 b(the)f(geniti)-28 b(v)-17 b(e)360
b(form)e(of)g(man)-17 b(y)359 b(nouns)h(is)d(found)i(in)f(\002x)-17
b(ed)360 b(e)-17 b(xpressions)359 b(and)g(as)f(the)-2646
12175 y(\002rst)400 b(part)i(of)e(certain)i(compounds,)i(b)-22
b(ut)401 b(it)f(is)g(uncertain)j(whether)f(speak)-11
b(ers)402 b(intuiti)-28 b(v)-17 b(ely)-2646 13503 y(interpret)277
b(these)h(forms)e(as)h(geniti)-28 b(v)-17 b(e)279 b(\(Thr\341insson)f
(et)f(al.)g(2012:)h(62\).)-1071 14832 y(Instead)216 b(of)g(geniti)-28
b(v)-17 b(e,)217 b(modern)h(spok)-11 b(en)217 b(F)-17
b(aroese)217 b(prefers)f(prepositional)g(constructions)-2646
16160 y(in)-44 b(v)-22 b(olving)279 b(a)e(dati)-28 b(v)-17
b(e)279 b(form)e(of)f(the)i(noun)g(as)f(illustrated)g(in)g(these)g(e)
-17 b(xamples:)p 0 TeXcolorgray -1539 18181 a(\(4\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1107 w(Her)859
19509 y(here)3207 18181 y(eru)3207 19509 y(is.)p Fc(pl)5570
18181 y Fi(h\372sini)5570 19509 y(house-)p Fc(det)p Fi(.)p
Fc(pl)11630 18181 y Fi(hj\341)11630 19509 y(with)14041
18181 y(einum)14041 19509 y(a.)p Fc(d)-35 b(a)-99 b(t)17251
18181 y Fi(r\355kum)17251 19509 y(rich.)p Fc(d)-35 b(a)-99
b(t)21106 18181 y Fi(manni)21106 19509 y(man.)p Fc(d)-35
b(a)-99 b(t)859 20862 y Fi('Here)277 b(is)f(a)h(rich)h(man's)f(house)p
Fh(/)p Fi(home')p 0 TeXcolorgray 0 TeXcolorgray 859 22980
a(K)-28 b(ettlingurin)859 24309 y(kitten-)p Fc(det)6686
22980 y Fi(hj\341)6686 24309 y(with)9097 22980 y(k)-11
b(ettuni)9097 24309 y(cat-)p Fc(det)p Fi(.)p Fc(d)-35
b(a)-99 b(t)14374 22980 y Fi(hj\341)14374 24309 y(with)16785
22980 y(m\346r)16785 24309 y(I.)p Fc(d)-35 b(a)-99 b(t)19288
22980 y Fi(er)19288 24309 y(is)20591 22980 y(v)-28 b(akur)20591
24309 y(beautiful)859 26355 y('My)277 b(cat's)g(kitten)g(is)f
(beautiful')-1071 28375 y(Abo)-17 b(v)g(e)270 b(we)d(sa)-17
b(w)268 b(e)-17 b(xamples)269 b(with)e(the)h(preposition)g
Fg(hj\341)f Fi('with',)f(b)-22 b(ut)268 b(F)-17 b(aroese)269
b(speak)-11 b(ers)-2646 29704 y(also)340 b(use)f(other)h(prepositions)g
(with)f(the)g(dati)-28 b(v)-17 b(e,)341 b(depending)i(on)d(the)f
(semantic)i(function.)-2646 31032 y(W)-89 b(e')-11 b(ll)277
b(look)h(at)f(some)g(e)-17 b(xamples)280 b(\(Thr\341insson)d(et)g(al.)g
(2012\):)p 0 TeXcolorgray -1539 33053 a(\(5\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 1107 w(taki\360)859 34381
y(roof-)p Fc(det)p Fi(.)p Fc(nom)p Fi(.)p Fc(n)7878 33053
y Fi(\341)7878 34381 y(on)9428 33053 y(h\372sinum)9428
34381 y(house-)p Fc(det)p Fi(.)p Fc(d)-35 b(a)-99 b(t)p
Fi(.)p Fc(n)16819 33053 y Fi(motorurin)16819 34381 y(motor)-22
b(-)p Fc(det)p Fi(.)p Fc(nom)p Fi(.)p Fc(m)24753 33053
y Fi(\355)24753 34381 y(in)26057 33053 y(bilinum)26057
34381 y(car)g(-)p Fc(det)p Fi(.)p Fc(d)-35 b(a)-99 b(t)p
Fi(.)p Fc(m)859 35960 y Fi(')-20 b(the)277 b(roof)g(of)g(the)g(house')h
(')-20 b(the)277 b(car's)g(engine')p 0 TeXcolorgray 0
TeXcolorgray 859 38078 a(abbi)859 39407 y(grandf)-11
b(ather)6393 38078 y(at)6393 39407 y(to)7697 38078 y(dreinginum)7697
39407 y(bo)g(y-)p Fc(det)p Fi(.)p Fc(m)p Fi(.)p Fc(d)-35
b(a)-99 b(t)14291 38078 y Fi(aldurin)14291 39407 y(age-)p
Fc(det)p Fi(on)19229 38078 y(\341)19229 39407 y(church-)p
Fc(det)p Fi(.)p Fc(d)-35 b(a)-99 b(t)26227 38078 y Fi(kirkjuni)859
41678 y(')-20 b(the)277 b(bo)-11 b(y's)277 b(grandf)-11
b(ather')279 b(')-20 b(the)277 b(age)h(of)f(the)g(church')p
0 TeXcolorgray 0 TeXcolorgray 859 43796 a(halin)859 45124
y(tail-)p Fc(det)p Fi(on)5675 43796 y(\341)5675 45124
y(co)-28 b(w-)p Fc(det)p Fi(.)p Fc(d)-35 b(a)-99 b(t)11478
43796 y Fi(k\372nni)11478 45124 y(tooth-)p Fc(det)p Fi(.)p
Fc(pl)17231 43796 y Fi(tenninar)17231 45124 y(in)21301
43796 y(\355)21301 45124 y(dog-)p Fc(det)p Fi(.)p Fc(d)-35
b(a)-99 b(t)26948 43796 y Fi(hundinum)859 47396 y(')-20
b(the)277 b(co)-28 b(w's)278 b(tail')e(')-20 b(the)277
b(dog's)g(teeth')p 0 TeXcolorgray 0 TeXcolorgray 859
49514 a(h\370)-17 b(vdi\360)859 50842 y(head-)p Fc(det)p
Fi(on)6351 49514 y(\341)6351 50842 y(I.)p Fc(d)-35 b(a)-99
b(t)8853 49514 y Fi(m\346r)8853 50842 y(e)-17 b(yes-)p
Fc(det)13099 49514 y Fi(e)g(yguni)13099 50842 y(in)16538
49514 y(\355)16538 50842 y(he.)p Fc(d)-35 b(a)-99 b(t)19717
49514 y Fi(honum)859 53114 y('my)277 b(head')h('his)e(e)-17
b(yes')-1071 55135 y(W)-44 b(ith)258 b(nouns)h(denoting)h(f)-11
b(amily)258 b(relationships)g(an)h(accusati)-28 b(v)-17
b(e)261 b(form)d(is)f(normally)i(used)-2646 56463 y(instead)278
b(of)f(geniti)-28 b(v)-17 b(e)279 b(or)e(a)g(prepositional)h(phrase)g
(as)f(illustrated)g(here:)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 34132
-3091 a Fb(4)p 0 TeXcolorgray 0 TeXcolorgray -279 -877
a Fi(\(6\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1107 w(p\341pi)2119 451 y(f)-11 b(ather)5132 -877 y(dreingin)5132
451 y(bo)g(y-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)10825 -877
y Fi(mamma)10825 451 y(mum)14834 -877 y(gentuna)14834
451 y(girl-)p Fc(det)p Fi(.)p Fc(a)g(cc)20416 -877 y
Fi(beiggi)20416 451 y(brother)24055 -877 y(J\363gv)-28
b(an)24055 451 y(J\363gv)g(an.)p Fc(a)-35 b(cc)2119 2029
y Fi(')-20 b(the)277 b(bo)-11 b(y's)277 b(f)-11 b(ather')277
b(')-20 b(the)277 b(girl's)f(mother')h('J\363gv)-28 b(an's)278
b(brother')189 4046 y(As)402 b(mentioned)i(abo)-17 b(v)g(e,)405
b(adjecti)-28 b(v)-17 b(es)404 b(can)g(be)e(grouped)j(into)d(tw)-11
b(o)402 b(cate)-17 b(gories:)404 b Fg(str)-50 b(ong)-1386
5374 y Fi(adjecti)-28 b(v)-17 b(es)400 b(and)f Fg(weak)419
b Fi(adjecti)-28 b(v)-17 b(es.)400 b(Which)f(cate)-17
b(gory)400 b(the)-17 b(y)400 b(belong)f(to)f(depends)i(on)f(the)-1386
6702 y(de\002niteness)362 b(of)e(the)g(noun)i(phrase)e(the)-17
b(y)362 b(form)d(a)h(part)g(of.)g(The)h(general)h(rule)e(is)f(that)h
(the)-1386 8031 y(adjecti)-28 b(v)-17 b(e)325 b(tak)-11
b(es)323 b(the)g(weak)h(form)e(if)g(the)h(noun)h(phrase)f(is)f
(de\002nite,)i(and)f(the)g(strong)g(form)-1386 9359 y(if)298
b(the)i(noun)g(phrase)g(is)e(inde\002nite.)j(W)-89 b(e)299
b(illustrate)f(this)h(with)g(tw)-11 b(o)299 b(e)-17 b(xamples)301
b(\(Thr\341insson)-1386 10687 y(et)277 b(al.)g(2012:)h(65\):)p
0 TeXcolorgray -279 12704 a(\(7\))p 0 TeXcolorgray 0
TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Hetta)4344 14032 y(this)7184 12704
y(er)7184 14032 y(is)8487 12704 y(ein)8487 14032 y(a)10283
12704 y(st\363rur)10283 14032 y(big.)p Fc(nom)p Fi(.)p
Fc(sg)p Fi(.)p Fc(m)16400 12704 y Fi(bilur)16400 14032
y(car)-61 b(.)p Fc(nom)p Fi(.)p Fc(sg)p Fi(.)p Fc(m)22393
12704 y Fi(og)22393 14032 y(and)24434 12704 y(ein)24434
14032 y(a)26229 12704 y(l\355til)26229 14032 y(small.)p
Fc(nom)p Fi(.)p Fc(sg)p Fi(.)p Fc(f)4153 15471 y Fi(b\363k.)4153
16799 y(book.)p Fc(nom)p Fi(.)p Fc(sg)p Fi(.)p Fc(f)4153
18378 y Fi('This)277 b(is)f(a)h(big)h(car)f(and)h(a)f(small)g(book')p
0 TeXcolorgray 2119 19968 a(\(b\))p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 996 w(Hetta)4406 21297 y(this)7246
19968 y(er)7246 21297 y(is)8549 19968 y(tann)8549 21297
y(the)10898 19968 y(st\363ri)10898 21297 y(big.)p Fc(nom)p
Fi(.)p Fc(sg)p Fi(.)p Fc(m)17015 19968 y Fi(bilurin)17015
21297 y(car)-22 b(-)p Fc(det)p Fi(.)p Fc(nom)p Fi(.)p
Fc(sg)p Fi(.)p Fc(m)24899 19968 y Fi(og)24899 21297 y(and)26940
19968 y(tann)26940 21297 y(the)4153 22736 y(l\355tla)4153
24064 y(small-)p Fc(det)p Fi(.)p Fc(nom)p Fi(.)p Fc(sg)p
Fi(.)p Fc(f)12852 22736 y Fi(b\363kin.)12852 24064 y(book)4153
25643 y('This)277 b(is)f(the)h(big)h(car)f(and)h(the)g(small)e(book')
189 27659 y(Finally)-72 b(,)244 b(most)f(adjecti)-28
b(v)-17 b(es)245 b(can)f(be)g(in\003ected)h(for)e(de)-17
b(gree)245 b(by)f(adding)h(the)e(su)p Fh(\016)p Fi(x)-17
b(es)245 b Fg(-\(a\)r)-1386 28987 y Fi(and)445 b Fg(-\(a\)st)462
b Fi(in)444 b(comparati)-28 b(v)-17 b(e)447 b(and)e(superlati)-28
b(v)-17 b(e,)445 b(respecti)-28 b(v)-17 b(ely)-72 b(.)447
b(Indeclinable)f(adjecti)-28 b(v)-17 b(es)-1386 30316
y(e)g(xpress)303 b(di)p Fh(\013)p Fi(erence)i(in)d(de)-17
b(gree)305 b(by)d(using)h(the)g(auxiliary)g(v)-17 b(erbs)303
b Fg(meiri)f Fi('more')g(\(compara-)-1386 31644 y(ti)-28
b(v)-17 b(e\))277 b(and)h Fg(mest)296 b Fi('most')275
b(\(superlati)-28 b(v)-17 b(e\).)278 b(W)-89 b(e')-11
b(ll)276 b(\002nish)h(by)g(sho)-28 b(wing)278 b(a)f(couple)h(of)e(e)-17
b(xamples)-1386 32972 y(of)277 b(this:)p 0 TeXcolorgray
-279 34988 a(\(8\))p 0 TeXcolorgray 0 TeXcolorgray 1107
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(gulur)4344 36317 y(yello)-28 b(w)7772 34988 y(gul-a-ri)7772
36317 y(yello)g(wer)12060 34988 y(gul-ast-ur)12060 36317
y(yello)g(west)p 0 TeXcolorgray 2119 38018 a(\(b\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(h\363skandi)4406
39346 y(appropriate)9890 38018 y(meiri)9890 39346 y(more)12669
38018 y(h\363skandi)12669 39346 y(appropriate)18153 38018
y(mest)18153 39346 y(most)20749 38018 y(h\363skandi)20749
39346 y(appropriate)-1386 42183 y Fg(2.2.)775 b(V)-123
b(erbal)278 b(cate)-44 b(gories)-1386 44009 y Fi(F)-17
b(aroese)301 b(v)-17 b(erbs)300 b(are)g(in\003ected)h(by)f(person,)g
(number)-44 b(,)300 b(and)h(tense,)e(with)g(the)h(tw)-11
b(o)299 b(follo)-28 b(wing)-1386 45338 y(characteristics)278
b(with)f(respec)h(to)f(person)g(in\003ection)i(\(Thr\341insson)f(et)f
(al.)g(2012:)h(67\):)p 0 TeXcolorgray -113 47328 a(1.)p
0 TeXcolorgray 554 w(F)-17 b(aroese)290 b(v)-17 b(erbs)290
b(do)f(not)g(sho)-28 b(w)289 b(an)-17 b(y)290 b(person)g(distinctions)e
(in)h(the)g(plural)g(and)g(re)-17 b(gular)1271 48656
y(\(weak\).)p 0 TeXcolorgray -113 49926 a(2.)p 0 TeXcolorgray
554 w(F)g(aroese)376 b(v)-17 b(erbs)376 b(do)f(not)g(sho)-28
b(w)376 b(an)-17 b(y)376 b(person)f(distinctions)g(neither)g(in)g(the)g
(singular)1271 51255 y(nor)277 b(in)g(the)h(past)f(tense.)189
53274 y(This)g(can)h(be)g(illustrated)e(with)h(the)h(follo)-28
b(wing)278 b(e)-17 b(xample:)p 0 TeXcolorgray -279 55290
a(\(9\))p 0 TeXcolorgray 0 TeXcolorgray 1107 w(\(a\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(e)g(g)4344
56618 y(I)5815 55290 y(kalli)5815 56618 y(call.1)p Fc(sg)p
Fi(.)p Fc(prs)11359 55290 y Fi(t\372)11359 56618 y(you)13462
55290 y(kallar)13462 56618 y(call.2)p Fc(sg)p Fi(.)p
Fc(prs)19005 55290 y Fi(hann)p Fh(/)p Fi(hon)p Fh(/)p
Fi(ta\360)19005 56618 y(he)p Fh(/)p Fi(she)p Fh(/)p Fi(it)25218
55290 y(kallar)25218 56618 y(call.3)p Fc(sg)p Fi(.)p
Fc(prs)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 32872
-3091 a Fb(5)p 0 TeXcolorgray 2894 -877 a Fi('I)276 b(call')g('you)i
(call')f('he)p Fh(/)p Fi(she)p Fh(/)p Fi(it)h(calls')p
0 TeXcolorgray 859 710 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(vit)3146 2038 y(we)4879 710 y(kalla)4879
2038 y(call.1)p Fc(pl)p Fi(.)p Fc(prs)10361 710 y Fi(tit)10361
2038 y(you.)p Fc(pl)13647 710 y Fi(kalla)13647 2038 y(call.2)p
Fc(pl)p Fi(.)p Fc(prs)19128 710 y Fi(teir)p Fh(/)p Fi(t\346r)p
Fh(/)p Fi(te)-17 b(y)19128 2038 y(the)g(y)-72 b(.)p Fc(m)p
Fh(/)10 b Fc(f)p Fh(/)g Fc(n)24402 710 y Fi(kalla)24402
2038 y(call.3)p Fc(pl)p Fi(.)p Fc(prs)2894 3613 y Fi('we)277
b(call')f('you)i(call')f(')-20 b(the)j(y)278 b(call')p
0 TeXcolorgray 859 5200 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(e)-17 b(g)3084 6528 y(I)4555 5200
y(kalla\360i)4555 6528 y(call.1)p Fc(sg)p Fi(.)p Fc(pst)10029
5200 y Fi(t\372)10029 6528 y(you)12132 5200 y(kalla\360i)12132
6528 y(call.2)p Fc(sg)p Fi(.)p Fc(pst)17606 5200 y Fi(hann)p
Fh(/)p Fi(hon)p Fh(/)p Fi(ta\360)17606 6528 y(he)p Fh(/)p
Fi(she)p Fh(/)p Fi(it)23818 5200 y(kalla\360i)23818 6528
y(call.3)p Fc(sg)p Fi(.)p Fc(pst)2894 8103 y Fi('I)276
b(called')h('you)h(called')g('he)p Fh(/)p Fi(she)p Fh(/)p
Fi(it)g(called')-1071 10098 y(F)-17 b(aroese)366 b(has)f(tw)-11
b(o)364 b(distinct)g(imperati)-28 b(v)-17 b(e)366 b(forms,)e(plural)g
(and)i(singular)-44 b(,)364 b(as)g(illustrated)-2646
11426 y(here:)p 0 TeXcolorgray -2092 13421 a(\(10\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1107 w(Ge)-28
b(v)p Fh(/)p Fi(ge)g(vi\360)859 14750 y(gi)g(v)-17 b(e.)p
Fc(sg)p Fh(/)10 b Fc(pl)5852 13421 y Fi(hesum)5852 14750
y(this)9186 13421 y(manninum)9186 14750 y(man-)p Fc(det)p
Fi(.3)p Fc(sgd)-35 b(a)-99 b(t)16598 13421 y Fi(g\346tur!)16598
14750 y(attention)859 16325 y('Gi)-28 b(v)-17 b(e)278
b(attention)g(to)f(this)f(man!')-1071 18319 y(The)496
b(singular)f Fg(g)-11 b(e)-17 b(v)496 b Fi(w)-11 b(ould)496
b(be)f(used)g(if)f(addressing)i(one)g(person,)f(and)h(the)f(plural)
-2646 19648 y Fg(g)-11 b(e)-17 b(vi\360)290 b Fi(if)d(more)h(than)h
(one)g(person)g(is)e(being)i(addressed.)h(There)f(w)-11
b(as)288 b(no)g(distincti)-28 b(v)-17 b(e)289 b(plural)-2646
20976 y(imperati)-28 b(v)-17 b(e)392 b(in)d(Old)h(Norse,)f(where)i(the)
f(2)p Fc(pl)g Fi(indicati)-28 b(v)-17 b(e)392 b(had)e(this)f(role,)h(b)
-22 b(ut)389 b(in)h(F)-17 b(aroese)-2646 22304 y(there)222
b(is)f(a)h(distinction)g(between)i(the)e(def)-11 b(ault)222
b(\002nite)g(forms)f(and)i(the)f(imperati)-28 b(v)-17
b(e)223 b(forms.)e(W)-89 b(e)-2646 23633 y(illustrate)264
b(this)g(belo)-28 b(w)-72 b(,)267 b(where)e(the)h(non-imperati)-28
b(v)-17 b(e)267 b(forms)e(are)g(referred)g(to)g(as)f
Fg(indicative)p Fi(,)-2646 24961 y(although)289 b(it)c(is)h(uncertain)i
(that)e(one)i(can)f(speak)h(of)e(indicati)-28 b(v)-17
b(e)288 b(in)f(F)-17 b(aroese,)287 b(because)i(there)-2646
26290 y(is)358 b(no)i(producti)-28 b(v)-17 b(e)361 b(contrasting)f
(subjuncti)-28 b(v)-17 b(e)361 b(in)e(F)-17 b(aroese)360
b(\(Thr\341insson)g(et)f(al.)f(2012:)i(67-)-2646 27618
y(68\):)p 0 TeXcolorgray -2092 29613 a(\(11\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(T\372)3084 30941 y(you.2)p Fc(sg)6984
29613 y Fi(fert)6984 30941 y(go.2)p Fc(sg)p Fi(.)p Fc(prs)p
Fi(.)p Fc(ind)13665 29613 y Fi(til)13665 30941 y(to)15031
29613 y(h\372s.)15031 30941 y(house)2894 32516 y('Y)-122
b(ou)277 b(go)h(home')p 0 TeXcolorgray 859 34103 a(\(b\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(F)-17
b(ar)3146 35431 y(go.2)p Fc(sg)p Fi(.)p Fc(imp)8174 34103
y Fi(til)8174 35431 y(to)9540 34103 y(h\372s!)9540 35431
y(house)2894 37006 y('Go)277 b(home!')p 0 TeXcolorgray
859 38593 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)-39 b(it)3084 39922 y(you.2)p Fc(pl)6923 38593
y Fi(f)-11 b(ara)6923 39922 y(go.2)p Fc(pl)p Fi(.)p Fc(prs)p
Fi(.)p Fc(ind)13543 38593 y Fi(til)13543 39922 y(to)14908
38593 y(h\372s.)14908 39922 y(house)2894 41496 y('Y)-122
b(ou)277 b(go)h(home')p 0 TeXcolorgray 859 43083 a(\(d\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(F)-17
b(ari\360)3146 44412 y(go.2)p Fc(pl)p Fi(.)p Fc(imp)8112
43083 y Fi(til)8112 44412 y(to)9478 43083 y(h\372s!)9478
44412 y(house)2894 45987 y('Go)277 b(home!')-1071 47982
y(W)-89 b(e)405 b(mentioned)i(abo)-17 b(v)g(e)407 b(that)e(the)f
(subjuncti)-28 b(v)-17 b(e)407 b(is)d(not)h(producti)-28
b(v)-17 b(e)407 b(in)d(F)-17 b(aroese)406 b(an)-17 b(y-)-2646
49310 y(more,)313 b(and)g(it)f(should)h(be)g(added)h(that)e(only)h(a)g
(fe)-28 b(w)312 b(relic)g(forms)g(e)-17 b(xist)312 b(in)g(main)h
(clauses)g(in)-2646 50638 y(relati)-28 b(v)-17 b(ely)307
b(\002x)-17 b(ed)307 b(e)-17 b(xpressions)306 b(and)g(in)f(religious)g
(language.)j(And)e(where)g(the)-17 b(y)306 b(e)-17 b(xist)305
b(the)-17 b(y)-2646 51967 y(almost)455 b(e)-17 b(xclusi)-28
b(v)-17 b(ely)458 b(e)-17 b(xpress)455 b Fg(optative)h(modality)p
Fi(,)g(as)f(illustrated)f(belo)-28 b(w)456 b(\(Thr\341insson)-2646
53295 y(et)277 b(al.)g(2012:)h(68\):)p 0 TeXcolorgray
-2092 55290 a(\(12\))p 0 TeXcolorgray 0 TeXcolorgray
1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Jesus)3084 56618 y(Jesus)5864 55290 y(fylgir)5864
56618 y(follo)-28 b(w)-72 b(.3)p Fc(sg)p Fi(.)p Fc(ind)12523
55290 y Fi(t\346r)12523 56618 y(you)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 34132
-3091 a Fb(6)p 0 TeXcolorgray 4153 -877 a Fi('Jesus)277
b(is)f(with)h(you')p 0 TeXcolorgray 2119 728 a(\(b\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(Jesus)4406
2056 y(Jesus)7185 728 y(fylgi)7185 2056 y(follo)-28 b(w)-72
b(.3)p Fc(sg)p Fi(.)p Fc(subj)14308 728 y Fi(t\346r)14308
2056 y(you)4153 3649 y('Jesus)277 b(be)g(with)g(you')p
0 TeXcolorgray 2119 5254 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Gud)4344 6583 y(God)6693 5254 y(signar)6693
6583 y(bless.3)p Fc(pl)p Fi(.)p Fc(ind)12714 5254 y Fi(F)-17
b(\370ro)-11 b(yar)12714 6583 y(F)-17 b(aroes)4153 8175
y('God)278 b(blesses)f(the)g(F)-17 b(aroes')p 0 TeXcolorgray
2119 9781 a(\(d\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Gud)4406 11109 y(God)6755 9781 y(signi)6755 11109
y(bless.3)p Fc(pl)p Fi(.)p Fc(subj)13238 9781 y Fi(F)g(\370ro)-11
b(yar)13238 11109 y(F)-17 b(aroes)4153 12702 y('God)278
b(bless)f(the)g(F)-17 b(aroes')189 14805 y(Examples)522
b(of)e(other)-44 b(,)520 b(relati)-28 b(v)-17 b(ely)521
b(\002x)-17 b(ed)522 b(optati)-28 b(v)-17 b(e)523 b(forms,)c(which)i
(aren')-20 b(t)520 b(religious)-1386 16133 y(e)-17 b(xpressions,)278
b(are:)p 0 TeXcolorgray -832 18237 a(\(13\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Hann)4344 19565 y(He)7184 18237
y(leingi)7184 19565 y(long)10149 18237 y(li)-28 b(vi!)10149
19565 y(li)g(v)-17 b(e.3)p Fc(sg)p Fi(.)p Fc(subj)4153
21158 y Fi('Long)279 b(li)-28 b(v)-17 b(e)277 b(he!')p
0 TeXcolorgray 2119 22763 a(\(b\))p 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 996 w(G\346vi)4406 24091
y(Gi)-28 b(v)-17 b(e.3)p Fc(sg)p Fi(.)p Fc(pst)p Fi(.)p
Fc(subj)12481 22763 y Fi(at)12481 24091 y(that)14584
22763 y(ta\360)14584 24091 y(it)16380 22763 y(skj\363tt)16380
24091 y(soon)19283 22763 y(v)-28 b(ar\360)19283 24091
y(become.)p Fc(sg)p Fi(.)p Fc(pst)26048 22763 y Fi(he)-17
b(ystfr\355!)26048 24091 y(autumn)279 b(break)4153 25684
y('I)d(wish)h(we)h(had)g(autumn)g(break)h(soon!')p 0
TeXcolorgray 2119 27289 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(He)-28 b(v\360i)4344 28618 y(Ha)-22
b(v)-17 b(e.3)p Fc(sg)p Fi(.)p Fc(pst)p Fi(.)p Fc(subj)12608
27289 y Fi(ta\360)12608 28618 y(it)14404 27289 y(n\372)14404
28618 y(no)-28 b(w)16725 27289 y(bara)16725 28618 y(just)19073
27289 y(gingist)19073 28618 y(go.)p Fc(sg)p Fi(.)p Fc(pst)23502
27289 y Fi(henni)23502 28618 y(her)26404 27289 y(v\346l.)26404
28618 y(well)4153 30211 y('I)276 b(wish)h(things)g(w)-11
b(ould)278 b(go)g(well)f(for)g(her')189 32314 y(Of)264
b(these)i(the)f(\002rst)f(one)i(uses)f(the)g(present)g(subjuncti)-28
b(v)-17 b(e)268 b(while)d(the)g(tw)-11 b(o)265 b(others)g(use)g(the)
-1386 33642 y(past)277 b(subjuncti)-28 b(v)-17 b(e)280
b(\(or)c(what)i(w)-11 b(as)277 b(the)g(past)g(subjuncti)-28
b(v)-17 b(e)280 b(in)d(older)h(F)-17 b(aroese\).)189
34971 y(T)-89 b(ypically)367 b(the)f(passi)-28 b(v)-17
b(e)367 b(is)d(formed)i(with)f(the)g(auxiliary)i(v)-17
b(erbs)366 b Fg(ver\360a)g Fi('be,)f(become')-1386 36299
y(and)331 b Fg(bl\355va)g Fi('be,)f(become'.)j(The)e(participle)g
(agree)g(in)f(case,)h(gender)-44 b(,)331 b(and)h(number)f(with)f(a)
-1386 37627 y(nominati)-28 b(v)-17 b(e)356 b(subject,)e(and)h(the)e
(agent)i(is)d(more)i(frequently)h(left)d(out)i(than)g(in)f(English.)h
(If)-1386 38956 y(the)334 b(agent)h(is)e(included,)j(it)d(is)f(with)i
(the)g(auxiliary)h Fg(av)f Fi('by',)g(which)g(tak)-11
b(es)335 b(a)e(dati)-28 b(v)-17 b(e)336 b(form.)-1386
40284 y(W)-89 b(e)278 b(illustrate)e(this)g(with)h(some)h(e)-17
b(xamples)279 b(\(Thr\341insson)e(et)g(al.)g(2012:)i(69\):)p
0 TeXcolorgray -832 42387 a(\(14\))p 0 TeXcolorgray 0
TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Hann)4344 43715 y(he.3)p Fc(sg)p
Fi(.)p Fc(nom)9686 42387 y Fi(k)-17 b(ysti)9686 43715
y(kiss.)p Fc(sg)p Fi(.)p Fc(pst)14730 42387 y Fi(hana)14730
43715 y(her)-61 b(.3)p Fc(sga)-35 b(cc)4153 45308 y Fi('He)277
b(kissed)h(her')p 0 TeXcolorgray 2119 46913 a(\(b\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(Hon)4406
48242 y(she.3)p Fc(sg)p Fi(.)p Fc(nom)10179 46913 y Fi(v)-28
b(ar\360)p Fh(/)p Fi(blei)g(v)10179 48242 y(be.)p Fc(sg)p
Fi(.)p Fc(pst)p Fi(.)p Fc(a)-49 b(ux)16426 46913 y Fi(k)-17
b(yst)16426 48242 y(kiss.)p Fc(nom)p Fi(.)p Fc(sg)p Fi(.)p
Fc(f)p Fi(.)p Fc(pst)p Fi(.)p Fc(ptcp)26376 46913 y Fi(\(a)-22
b(v)26376 48242 y(\(by)28294 46913 y(honum\))28294 48242
y(him.)p Fc(d)-35 b(a)-99 b(t)p Fi(\))4153 49835 y('She)278
b(w)-11 b(as)277 b(kissed)g(by)h(him')p 0 TeXcolorgray
-832 51606 a(\(15\))p 0 TeXcolorgray 0 TeXcolorgray 1107
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hon)4344 52934 y(she.3)p Fc(sgnom)9840 51606 y
Fi(k)-17 b(ysti)9840 52934 y(kiss.)p Fc(sg)p Fi(.)p Fc(pst)p
Fi(.)p Fc(ind)16514 51606 y Fi(teir)16514 52934 y(them.)p
Fc(a)-35 b(cc)p Fi(.)p Fc(pl)p Fi(.)p Fc(m)4153 54527
y Fi('She)278 b(kissed)f(them')p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 32872
-3091 a Fb(7)p 0 TeXcolorgray 0 TeXcolorgray 859 -877
a Fi(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)-77 b(eir)3146 451 y(the)-17 b(y)-72 b(.3)p Fc(pl)p
Fi(.)p Fc(nom)p Fi(.)p Fc(m)10157 -877 y Fi(v\363r\360u)p
Fh(/)p Fi(bli)-28 b(vu)10157 451 y(be.)p Fc(pl)p Fi(.)p
Fc(pst)p Fi(.)p Fc(a)-49 b(ux)16343 -877 y Fi(k)-17 b(ystir)16343
451 y(kiss.)p Fc(nom)p Fi(.)p Fc(pl)p Fi(.)p Fc(m)22706
-877 y Fi(\(a)-22 b(v)22706 451 y(\(by)24624 -877 y(henni\))24624
451 y(her)-61 b(.)p Fc(d)-35 b(a)-99 b(t)p Fi(\))2894
2030 y('The)-17 b(y)278 b(were)g(kissed)f(by)h(her')p
0 TeXcolorgray -2092 3787 a(\(16\))p 0 TeXcolorgray 0
TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(T)-77 b(eir)3084 5115 y(the)-17
b(y)5416 3787 y(smurdu)5416 5115 y(smear)9180 3787 y(hann)9180
5115 y(he.3)p Fc(sg)p Fi(.)p Fc(a)-35 b(cc)14213 3787
y Fi(a)-22 b(v)14213 5115 y(o)p Fh(\013)2894 6694 y Fi('The)-17
b(y)278 b(beat)g(him)f(up')p 0 TeXcolorgray 859 8285
a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hann)3146 9613 y(he.3)p Fc(sg)p Fi(.)p Fc(nom)8488
8285 y Fi(v)-28 b(ar\360)p Fh(/)p Fi(blei)g(v)8488 9613
y(be)13359 8285 y(a)-22 b(vsmurdur)13359 9613 y(o)p Fh(\013)p
Fi(smear)-61 b(.)p Fc(nom)p Fi(.)p Fc(sg)p Fi(.)p Fc(m)p
Fi(.)p Fc(pst)p Fi(.)p Fc(ptcp)2894 11192 y Fi('He)277
b(w)-11 b(as)277 b(beaten)i(up')-1071 13210 y(In)469
b(F)-17 b(aroese)470 b(it)e(is)f(frequently)j(possible)f(to)f(form)h
(so-called)g Fg(-st)20 b Fi(-forms,)466 b(or)j Fg(middle)-2646
14539 y Fi(forms,)k(by)i(adding)h(the)e(su)p Fh(\016)p
Fi(x)h Fg(-st)492 b Fi(to)474 b(v)-28 b(arious)475 b(in\003ectional)h
(forms)d(of)h(the)g(v)-17 b(erb)-44 b(.)476 b(The)-2646
15867 y(meaning)513 b(of)c(the)i(middle)g(forms)e(v)-28
b(aries)511 b(widely)g(in)f(F)-17 b(aroese,)512 b(b)-22
b(ut)510 b(the)h(usages)g(most)-2646 17195 y(frequently)272
b(mentioned)h(in)d(discussions)h(of)f(the)h(middle)h(forms)d(are)i
(re\003e)-17 b(xi)-28 b(v)-17 b(e,)273 b(reciprocal,)-2646
18524 y(or)282 b(passi)-28 b(v)-17 b(e.)282 b(Here)g(we)g(gi)-28
b(v)-17 b(e)283 b(some)f(e)-17 b(xamples,)283 b(b)-22
b(ut)282 b(we)f(will)g(discuss)g(the)h(middle)g(forms)f(in)-2646
19852 y(more)d(detail)f(in)g(the)h(ne)-17 b(xt)278 b(section:)p
0 TeXcolorgray -2092 21871 a(\(17\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Eg)3084 23199 y(I)4757 21871 y(settist)4757
23199 y(sit)7783 21871 y(ni\360ur)7783 23199 y(do)-28
b(wn)2894 24778 y('I)276 b(sat)g(do)-28 b(wn')278 b(\(re\003e)-17
b(xi)-28 b(v)-17 b(e)280 b(meaning\))p 0 TeXcolorgray
859 26369 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)-77 b(eir)3146 27697 y(the)-17 b(y)5478 26369
y(berjast)5478 27697 y(\002ght)8872 26369 y(alt\355\360)8872
27697 y(al)-11 b(w)g(ays)2894 29276 y('The)-17 b(y)278
b(al)-11 b(w)g(ays)278 b(\002ght')f(\(reciprocal)h(meaning\))p
0 TeXcolorgray 859 30867 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Oyggin)3084 32195 y(island-)p Fc(det)8023
30867 y Fi(kallast)8023 32195 y(call)11356 30867 y(N\363lso)-11
b(y)11356 32195 y(N\363lso)g(y)2894 33774 y('The)277
b(island)h(is)e(called)i(N\363lso)-11 b(y')277 b(\(passi)-28
b(v)-17 b(e)278 b(meaning\))-1071 35792 y(Perfect)370
b(tense)g(is)e(either)i(formed)f(with)g(the)h(auxiliary)g
Fg(hava)h Fi('ha)-22 b(v)-17 b(e')371 b(and)f(the)g(supine)-2646
37121 y(\()p Fc(sgn)291 b Fi(of)348 b Fc(pstptcp)p Fi(\))291
b(of)h(the)h(main)g(v)-17 b(erb,)294 b(or)e(it)g(is)g(formed)h(with)g
(the)g(auxiliary)g Fg(ver)-17 b(a)294 b Fi('be')e(and)-2646
38449 y(the)367 b(in\003ected)h(and)g(agreeing)g(past)e(participle.)i
Fg(Hava)f Fi(is)f(used)h(with)f(all)g(transiti)-28 b(v)-17
b(e)367 b(v)-17 b(erbs)-2646 39777 y(and)279 b(most)d(intransiti)-28
b(v)-17 b(e)278 b(v)-17 b(erbs)278 b(\(Thr\341insson)g(et)f(al.)f
(2012:)j(72\):)p 0 TeXcolorgray -2092 41796 a(\(18\))p
0 TeXcolorgray 0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Hon)3084 43124 y(she)5433
41796 y(he)-28 b(vur)5433 43124 y(ha)-22 b(v)-17 b(e.3)p
Fc(sg)p Fi(.)p Fc(pst)11360 41796 y Fi(lisi\360)11360
43124 y(read.)p Fc(sup)15430 41796 y Fi(b\363kina.)15430
43124 y(book-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)2894 44703
y Fi('She)277 b(has)h(read)f(the)h(book')p 0 TeXcolorgray
859 46294 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)-77 b(eir)3146 47622 y(the)-17 b(y)5478 46294
y(ha)-22 b(v)-28 b(a)5478 47622 y(ha)-22 b(v)-17 b(e.3)p
Fc(pl)p Fi(.)p Fc(pst)11343 46294 y Fi(so)g(vi\360)11343
47622 y(sleep.)p Fc(sup)15783 46294 y Fi(leingi.)15783
47622 y(long)2894 49201 y('The)g(y)278 b(ha)-22 b(v)-17
b(e)279 b(slept)e(for)f(long')p 0 TeXcolorgray 859 50792
a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hann)3084 52120 y(he)5924 50792 y(he)-28 b(vur)5924
52120 y(ha)-22 b(v)-17 b(e3)p Fc(sg)p Fi(.)p Fc(pst)11574
50792 y Fi(v)g(eri\360)11574 52120 y(be.)p Fc(sup)14785
50792 y Fi(r\355kur)-61 b(.)14785 52120 y(rich)2894 53699
y('He)277 b(has)g(been)i(rich')p 0 TeXcolorgray 859 55290
a(\(d\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hann)3146 56618 y(he.)p Fc(nom)p Fi(.)p Fc(sg)p
Fi(.)p Fc(m)8893 55290 y Fi(er)8893 56618 y(is)10196
55290 y(v)-22 b(or\360in)10196 56618 y(become.)p Fc(nom)p
Fi(.)p Fc(sg)p Fi(.)p Fc(m)18341 55290 y Fi(r\355kur)-61
b(.)18341 56618 y(rich)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 34132
-3091 a Fb(8)p 0 TeXcolorgray 4153 -877 a Fi('He)277
b(has)h(become)h(rich')189 941 y(P)-17 b(ast)378 b(perfect)h(is)e
(formed)h(with)g(past)g(tense)h(of)e(the)i(rele)-28 b(v)g(ant)379
b(auxiliary)g(\()p Fg(ver)-17 b(a)p Ff(/)p Fg(hava)p
Fi(as)-1386 2270 y(mentioned)298 b(abo)-17 b(v)g(e\),)297
b(and)f(the)f(perfect)h(passi)-28 b(v)-17 b(e)296 b(is)f(formed)g(with)
g(the)h(auxiliary)g Fg(ver)-17 b(a)296 b Fi('be',)-1386
3598 y(not)278 b Fg(hava)g Fi('ha)-22 b(v)-17 b(e'.)278
b(W)-89 b(e)278 b(illustrate)e(this)g(with)h(a)g(couple)i(of)e(e)-17
b(xamples:)p 0 TeXcolorgray -832 5416 a(\(19\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Hann)4344 6745 y(he)7184 5416 y(he)-28
b(v\360i)7184 6745 y(ha)-22 b(v)-17 b(e.)p Fc(pst)11314
5416 y Fi(v)g(eri\360)11314 6745 y(be.)p Fc(sup)14525
5416 y Fi(r\355kur)-61 b(.)14525 6745 y(rich.)p Fc(nom)p
Fi(.)p Fc(m)4153 8290 y Fi('He)277 b(had)i(been)f(rich')p
0 TeXcolorgray 2119 9848 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Hann)4406 11176 y(he)7246 9848 y(v)-28
b(ar)7246 11176 y(be.3)p Fc(sg)p Fi(.)p Fc(pst)12167
9848 y Fi(v)-22 b(or\360in)12167 11176 y(become.)p Fc(pst)p
Fi(.)p Fc(ptcp)19831 9848 y Fi(r\355kur)-61 b(.)19831
11176 y(rich.)p Fc(nom)p Fi(.)p Fc(m)4153 12722 y Fi('He)277
b(had)i(become)g(rich')p 0 TeXcolorgray -832 14445 a(\(20\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1107 w(Hann)2119
15774 y(he)4959 14445 y(er)p Fh(/)p Fi(*he)-28 b(vur)4959
15774 y(be.3)p Fc(sg)p Fi(.)p Fc(prs)p Fh(/)p Fi(*ha)-22
b(v)-17 b(e)12856 14445 y(ofta)12856 15774 y(often)15574
14445 y(v)-22 b(or\360in)p Fh(/)p Fi(bli)-28 b(vin)15574
15774 y(become.)p Fc(pst)p Fi(.)p Fc(ptcp)23238 14445
y Fi(a)-22 b(vsmurdur)-61 b(.)23238 15774 y(o)p Fh(\013)p
Fi(-smear)g(.)p Fc(nom)p Fi(.)p Fc(m)2119 17319 y Fi('He)277
b(has)g(often)h(been)g(beaten)h(up')189 19138 y(The)409
b(indicati)-28 b(v)-17 b(e-subjuncti)-28 b(v)-17 b(e)413
b(distinction)c(is)f(not)g(producti)-28 b(v)-17 b(e)412
b(in)c(F)-17 b(aroese)410 b(and)f(past)-1386 20466 y(subjuncti)-28
b(v)-17 b(e)394 b(forms)c(generally)j(do)e(not)h(e)-17
b(xist.)391 b(P)-17 b(ast)392 b(subjuncti)-28 b(v)-17
b(e)393 b(w)-11 b(as)391 b(commonly)j(used)-1386 21794
y(in)422 b(Old)g(Norse)g(\(and)h(still)d(is)h(in)h(Modern)h
(Icelandic\))h(to)e(indicate)h(a)f(counterf)-11 b(actual)425
b(or)-1386 23123 y(h)-6 b(ypthetical)277 b(situation.)e(The)h(re)-17
b(gular)276 b(past)e(tense)i(can)g(ha)-22 b(v)-17 b(e)276
b(this)e(function)i(is)e(F)-17 b(aroese,)276 b(b)-22
b(ut)-1386 24451 y(the)296 b(meaning)h(of)e(such)h(forms)e(are)h
(typically)h(ambiguous.)i(W)-89 b(e)295 b(illustrate)f(this)h(with)g(a)
g(fe)-28 b(w)-1386 25779 y(e)-17 b(xamples:)p 0 TeXcolorgray
-832 27598 a(\(21\))p 0 TeXcolorgray 0 TeXcolorgray 1107
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Eg)4344 28926 y(I)6016 27598 y(gj\370rdi)6016 28926
y(do.)p Fc(pst)9202 27598 y Fi(ta\360)9202 28926 y(it)10998
27598 y(fe)g(gin.)10998 28926 y(gladly)4153 30472 y('I)276
b(did)i(it)e(gladly)-72 b(.)-77 b(')277 b(or)g('I)f(w)-11
b(ould)278 b(gladly)g(do)g(it.)-77 b(')p 0 TeXcolorgray
2119 32029 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 996 w(Hann)4406 33358 y(he)7246 32029 y(he)-28
b(v\360i)7246 33358 y(ha)-22 b(v)-17 b(e.)p Fc(pst)11376
32029 y Fi(dripi\360)11376 33358 y(kill.)p Fc(pst)p Fi(.)p
Fc(ptcp)17075 32029 y Fi(hundin.)17075 33358 y(dog-)p
Fc(det)p Fi(.)p Fc(a)-35 b(cc)p Fi(.)p Fc(m)4153 34903
y Fi('He)277 b(had)i(killed)e(the)h(dog.)-77 b(')277
b(or)f('He)h(w)-11 b(ould)279 b(ha)-22 b(v)-17 b(e)278
b(killed)g(the)f(dog.)-77 b(')p 0 TeXcolorgray 2119 36461
a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hann)4344 37789 y(he)7184 36461 y(t\363k)7184 37789
y(tak)-11 b(e.)p Fc(pst)11096 36461 y Fi(b\363kina.)11096
37789 y(book-)p Fc(det)p Fi(.)p Fc(nom)p Fi(.)p Fc(f)4153
39335 y Fi('He)277 b(took)h(the)g(book.)-77 b(')277 b(or)g('He)g(w)-11
b(ould)278 b(gladly)g(tak)-11 b(e)278 b(the)g(book)g(if...)-77
b(')p 0 TeXcolorgray 2119 40892 a(\(d\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Eg)4406 42221 y(I)6078
40892 y(he)-28 b(v\360i)6078 42221 y(ha)-22 b(v)-17 b(e.)p
Fc(pst)10208 40892 y Fi(fe)g(gin)10208 42221 y(gladly)13419
40892 y(gj\370rt)13419 42221 y(do.)p Fc(pst)p Fi(.)p
Fc(ptcp)18748 40892 y Fi(ta\360,)18748 42221 y(it)20820
40892 y(um)20820 42221 y(if)22677 40892 y(e)g(g)22677
42221 y(I)24148 40892 y(fekk)24148 42221 y(get.)p Fc(pst)27580
40892 y Fi(peng)-6 b(ar)27580 42221 y(mone)-17 b(y)31029
40892 y(fyri)31029 42221 y(for)4153 43660 y(ta\360.)4153
44988 y(it)4153 46533 y('I)276 b(w)-11 b(ould)278 b(gladly)h(ha)-22
b(v)-17 b(e)279 b(done)f(it)e(if)g(I)h(w)-11 b(as)277
b(paid)h(for)e(it.)-77 b(')p 0 TeXcolorgray 2119 48091
a(\(e\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hann)4344 49419 y(he)7184 48091 y(drap)7184 49419
y(kill.)p Fc(pst)10740 48091 y Fi(hundin,)10740 49419
y(dog-)p Fc(det)14695 48091 y Fi(um)14695 49419 y(if)16552
48091 y(hann)16552 49419 y(he)19147 48091 y(fekk)19147
49419 y(get.)p Fc(pst)22579 48091 y Fi(hendur)22579 49419
y(hand.)p Fc(nom)p Fi(.)p Fc(pl)p Fi(.)28689 48091 y(\341)28689
49419 y(on)30239 48091 y(honum.)30239 49419 y(it)4153
50965 y('He)277 b(w)-11 b(ould)279 b(kill)d(the)h(dog)i(if)d(he)h(got)h
(his)e(hands)j(on)e(it.)-77 b(')p 0 TeXcolorgray 2119
52522 a(\(f\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
995 w(Hann)4221 53851 y(he)7061 52522 y(he)-28 b(v\360i)7061
53851 y(ha)-22 b(v)-17 b(e.)p Fc(pst)11191 52522 y Fi(tiki\360)11191
53851 y(tak)-11 b(e.)p Fc(pst)p Fi(.)p Fc(ptcp)17247
52522 y Fi(b\363kina)17247 53851 y(book-)p Fc(det)p Fi(.)p
Fc(nom)23813 52522 y Fi(fr\341)23813 53851 y(from)26408
52522 y(m\346r)-44 b(,)26408 53851 y(me)29051 52522 y(um)29051
53851 y(if)30909 52522 y(hann)30909 53851 y(he)4153 55290
y(he)-28 b(v\360i)4153 56618 y(ha)-22 b(v)-17 b(e.)p
Fc(pst)8283 55290 y Fi(s\346\360)8283 56618 y(see.)p
Fc(pst)p Fi(.)p Fc(ptcp)13919 55290 y Fi(me)g(g)13919
56618 y(me)16251 55290 y(lisi\360)16251 56618 y(read.)p
Fc(pst)p Fi(.)p Fc(ptcp)22378 55290 y Fi(\355)22378 56618
y(in)23682 55290 y(henni.)23682 56618 y(it)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 32872
-3091 a Fb(9)p 0 TeXcolorgray 2894 -877 a Fi('He)345
b(w)-11 b(ould)346 b(ha)-22 b(v)-17 b(e)347 b(tak)-11
b(en)346 b(the)g(book)g(from)f(me)h(if)e(he)h(had)i(seen)f(me)f
(reading)2894 451 y(it.)-77 b(')-1071 2383 y(The)407
b(def)-11 b(ault)407 b(w)-11 b(ord)407 b(order)f(in)g(F)-17
b(aroese)408 b(is)e(subject-v)-17 b(erb-object)409 b(\(SV)-44
b(O\))405 b(or)h(subject-)-2646 3712 y(auxiliary-main)428
b(v)-17 b(erb-object)429 b(\(SA)-149 b(V)-44 b(O\),)426
b(both)h(in)f(main)h(clauses)h(and)f(embedded)j(ones.)-2646
5040 y(W)-89 b(e)278 b(look)g(at)f(some)g(e)-17 b(xamples)280
b(\(Thr\341insson)d(et)g(al.)g(2012:)h(236\):)p 0 TeXcolorgray
-2092 6972 a(\(22\))p 0 TeXcolorgray 0 TeXcolorgray 1107
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(J\363gv)-28 b(an)3084 8300 y(J\363gv)g(an)6635
6972 y(las)6635 8300 y(read.)p Fc(pst)10619 6972 y Fi(b\363kina.)10619
8300 y(book-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)p Fi(.)p
Fc(sg)p Fi(.)p Fc(f)2894 9865 y Fi('J\363gv)-28 b(an)278
b(read)g(the)g(book.)-77 b(')p 0 TeXcolorgray 859 11441
a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(J\363gv)-28 b(an)3146 12770 y(J\363gv)g(an)6697
11441 y(he)g(vur)6697 12770 y(ha)-22 b(v)-17 b(e.)p Fc(pst)10827
11441 y Fi(lisi\360)10827 12770 y(read.)p Fc(pst)p Fi(.)p
Fc(ptcp)16954 11441 y Fi(b\363kina.)16954 12770 y(book-)p
Fc(det)p Fi(.)p Fc(a)-35 b(cc)p Fi(.)p Fc(sg)p Fi(.)p
Fc(f)2894 14334 y Fi('J\363gv)-28 b(an)278 b(has)g(read)f(the)h(book.)
-77 b(')p 0 TeXcolorgray 859 15911 a(\(c\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Eg)3084 17239 y(I)4757
15911 y(haldi,)4757 17239 y(think.)p Fc(prs)9181 15911
y Fi(at)9181 17239 y(that)11284 15911 y(J\363gv)-28 b(an)11284
17239 y(J\363gv)g(an)14835 15911 y(he)g(vur)14835 17239
y(ha)-22 b(v)-17 b(e.)p Fc(pst)18966 15911 y Fi(lisi\360)18966
17239 y(read.)p Fc(pst)p Fi(.)p Fc(ptcp)25093 15911 y
Fi(b\363kina.)25093 17239 y(book-)p Fc(det)2894 18804
y Fi('I)276 b(think)h(that)g(J\363gv)-28 b(an)279 b(has)f(read)g(the)f
(book.)-77 b(')-1071 20736 y(As)322 b(a)h(rule,)f(the)h(indirect)g
(object)h(precedes)g(the)f(direct)g(object)h(and)g(typically)f(appears)
-2646 22064 y(in)382 b(the)f(dati)-28 b(v)-17 b(e,)384
b(although)f(indirect)f(objects)g(in)f(the)h(accusati)-28
b(v)-17 b(e)385 b(form)c(also)g(appear)-61 b(.)384 b(Lets)-2646
23392 y(look)278 b(at)f(some)h(e)-17 b(xamples:)p 0 TeXcolorgray
-2092 25325 a(\(23\))p 0 TeXcolorgray 0 TeXcolorgray
1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)-50 b(uri\360)3084 26653 y(T)g(uri\360.)p Fc(nom)7994
25325 y Fi(g)-6 b(a)-22 b(v)7994 26653 y(gi)-28 b(v)-17
b(e.)p Fc(pst)11935 25325 y Fi(Hjalmari)11935 26653 y(Hjalmar)-61
b(.)p Fc(d)-35 b(a)-99 b(t)17636 25325 y Fi(n\363gv)-28
b(ar)17636 26653 y(man)-17 b(y)21125 25325 y(b\370kur)-61
b(.)21125 26653 y(book.)p Fc(nom)p Fi(.)p Fc(pl)2894
28217 y Fi('T)-50 b(uri\360)277 b(g)-6 b(a)-22 b(v)-17
b(e)279 b(Hjalmar)e(man)-17 b(y)279 b(books.)-77 b(')p
0 TeXcolorgray 859 29794 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Eg)3146 31122 y(I)4819 29794 y(spurdi,)4819
31122 y(ask)8305 29794 y(um)8305 31122 y(if)10163 29794
y(Zakaris)10163 31122 y(Zakaris.)p Fc(nom)15983 29794
y Fi(seldi)15983 31122 y(sell.)p Fc(pst)19600 29794 y
Fi(Ei)-28 b(vindi)19600 31122 y(Ei)g(vind.)p Fc(d)-35
b(a)-99 b(t)24659 29794 y Fi(tann)24659 31122 y(the)27008
29794 y(g)-6 b(amla)27008 31122 y(old)2894 32561 y(bilin.)2894
33890 y(car)-22 b(-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)2894
35454 y Fi('I)276 b(ask)-11 b(ed)278 b(if)e(Zakaris)h(sold)g(the)h(old)
f(car)h(to)f(Ei)-28 b(vind.)-77 b(')p 0 TeXcolorgray
859 37031 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hon)3084 38359 y(she)5433 37031 y(l\346rdi)5433
38359 y(teach.)p Fc(pst)9847 37031 y Fi(me)-17 b(g)9847
38359 y(me.)p Fc(a)-35 b(cc)p Fi(refrain-)p Fc(det)p
Fi(.)p Fc(a)g(cc)19943 37031 y Fi(ni\360urlagi\360.)2894
39923 y('She)277 b(taught)h(me)g(the)f(refrain.)-77 b(')-1071
41856 y(Should)486 b(we)e(mo)-17 b(v)g(e)486 b(an)f(object)g(or)e(a)i
(prepositional)g(phrase,)f(or)g(some)g(other)h(non-)-2646
43184 y(subject,)419 b(to)f(the)h(front)f(of)f(a)i(sentence,)h(as)e(is)
f(done)j(in)e(T)-89 b(opicalisation,)420 b(the)f(\002nite)f(v)-17
b(erb)-2646 44512 y(sho)-28 b(ws)286 b(up)g(in)f(second)i(place)f
(follo)-28 b(wed)287 b(by)e(the)h(subject,)f(i.e.)g(F)-17
b(aroese)287 b(is)d(a)h("v)-17 b(erb-second")-2646 45841
y(\(V2\))290 b(language)j(lik)-11 b(e)290 b(the)h(other)g(Germanic)g
(languages)i(e)-17 b(xcept)292 b(English.)f(W)-89 b(e)290
b(tak)-11 b(e)291 b(a)g(look)-2646 47169 y(at)277 b(some)h(e)-17
b(xamples)279 b(\(Thr\341insson)f(et)f(al.)f(2012:)j(238-239\):)p
0 TeXcolorgray -2092 49101 a(\(24\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w Fg(Hesa)e(b\363kina)3084 50429 y
Fi(this)f(book-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)11218
49101 y Fi(he)-28 b(vur)11218 50429 y(ha)-22 b(v)-17
b(e.)p Fc(pst)15348 49101 y Fi(J\363gv)-28 b(an)15348
50429 y(J\363gv)g(an.)p Fc(nom)20957 49101 y Fi(lisi\360.)20957
50429 y(read.)p Fc(pst)p Fi(.)p Fc(ptcp)2894 51994 y
Fi('This)276 b(book)j(has)e(J\363gv)-28 b(an)279 b(read.)-77
b(')p 0 TeXcolorgray 859 53570 a(\(b\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w Fg(T)-102 b(ann)279
b(gamla)f(bilin)3146 54899 y Fi(the)f(old)h(car-)p Fc(det)p
Fi(.)p Fc(a)-35 b(cc)11862 53570 y Fi(seldi)11862 54899
y(sell.3.)p Fc(sg)p Fi(.)p Fc(pst)17552 53570 y Fi(Zakaris)17552
54899 y(Zakaris.)p Fc(nom)23372 53570 y Fi(Ei)-28 b(vindi.)23372
54899 y(Ei)g(vind.)p Fc(d)-35 b(a)-99 b(t)p Fi(.)2894
56463 y('The)277 b(old)h(car)f(Zakaris)h(sold)f(to)g(Ei)-28
b(vind.)-77 b(')p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
33745 -3091 a Fb(10)p 0 TeXcolorgray 0 TeXcolorgray 2119
-877 a Fi(\(c\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w Fg(J\363annes)4344 451 y Fi(J\363annes.)p Fc(nom)10349
-877 y Fi(haldi)10349 451 y(think)13068 -877 y(e)-17
b(g)13068 451 y(I)14539 -877 y(eigur)14539 451 y(o)-28
b(wn.3)p Fc(sg)p Fi(.)p Fc(prs)20363 -877 y Fi(hesa)20363
451 y(this)22772 -877 y(b\363kina.)22772 451 y(book-)p
Fc(det)p Fi(.)p Fc(a)-35 b(cc)4153 2044 y Fi('J\363annes,)278
b(I)e(think,)i(o)-28 b(wns)278 b(this)e(book.)-77 b(')189
4147 y(As)422 b(is)f(typical)i(for)e(modern)j(Germanic)f(languages,)i
(adjecti)-28 b(v)-17 b(es)424 b(precede)g(the)f(noun)-1386
5476 y(the)-17 b(y)278 b(modify:)p 0 TeXcolorgray -832
7579 a(\(25\))p 0 TeXcolorgray 0 TeXcolorgray 1107 w(\(a\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(ein)4344
8907 y(a)6139 7579 y Fg(v\370kur)6139 8907 y Fi(beautiful.)p
Fc(nom)p Fi(.)p Fc(f)13279 7579 y Fi(genta,)13279 8907
y(girl.)p Fc(nom)p Fi(.)p Fc(f)p Fi(,)18298 7579 y(ein)18298
8907 y(a)20094 7579 y Fg(bl\341ur)20094 8907 y Fi(blue)p
Fc(nom)p Fi(.)p Fc(m)25182 7579 y Fi(bilur)25182 8907
y(car)-61 b(.)p Fc(nom)p Fi(.)p Fc(m)4153 10500 y Fi('a)277
b(beautiful)h(girl',)e('a)h(blue)h(car')p 0 TeXcolorgray
2119 12105 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 996 w(Hann)4406 13433 y(he)7246 12105 y(k)-11
b(om)7246 13433 y(come.)p Fc(pst)11723 12105 y Fi(s\372kklandi)11723
13433 y(ride.)p Fc(prs)p Fi(.)p Fc(ptcp)17736 12105 y
Fi(\341)17736 13433 y(on)19286 12105 y(einari)19286 13433
y(an)22249 12105 y Fg(gamlari)22249 13433 y Fi(old.)p
Fc(d)-35 b(a)-99 b(t)p Fi(.)p Fc(f)26502 12105 y Fi(s\372kklu.)26502
13433 y(bic)-17 b(ycle.)p Fc(d)-35 b(a)-99 b(t)p Fi(.)p
Fc(f)4153 15026 y Fi('He)277 b(came)i(riding)e(on)h(an)g(old)f(bic)-17
b(ycle.)-77 b(')189 17130 y(When)430 b(it)e(comes)h(to)g(adv)-17
b(erbs)430 b(we)f(can)h(broadly)g(distinguish)f(between)i(three)e
(basic)-1386 18458 y(adv)-17 b(erbial)279 b(positions)e
(\(Thr\341insson)h(et)f(al.)g(2012:)h(241\):)p 0 TeXcolorgray
-113 20506 a(1.)p 0 TeXcolorgray 554 w(the)f(medial)h(position,)f
(follo)-28 b(wing)278 b(the)g(\002nite)g(v)-17 b(erb)p
0 TeXcolorgray -113 21834 a(2.)p 0 TeXcolorgray 554 w(the)308
b(v)-17 b(erb)308 b(phrase)h(position,)e(follo)-28 b(wing)309
b(a)e(possible)h(object)h(and)f(other)g(elements)h(of)1271
23163 y(the)277 b(v)-17 b(erb)279 b(phrase)p 0 TeXcolorgray
-113 24491 a(3.)p 0 TeXcolorgray 554 w(the)420 b(modifying)h(position,)
f(when)h(the)f(adv)-17 b(erb)422 b(is)c(modifying)j(and)g(adjecti)-28
b(v)-17 b(e)422 b(and)1271 25819 y(other)277 b(adv)-17
b(erbs)189 27867 y(W)-89 b(e)278 b(illustrate)e(this)g(with)h(a)g(fe)
-28 b(w)278 b(e)-17 b(xamples:)p 0 TeXcolorgray -832
29970 a(\(26\))p 0 TeXcolorgray 0 TeXcolorgray 1107 w(\(a\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w(T)-77
b(e)-17 b(y)4344 31299 y(the)g(y)6676 29970 y(ha)-22
b(v)-28 b(a)6676 31299 y(ha)-22 b(v)-17 b(e)9170 29970
y Fg(ikki)p Ff(/)p Fg(ivale)-33 b(yst)p Ff(/)p Fg(j\372)p
Ff(/)p Fg(aldri)9170 31299 y Fi(not)p Fh(/)p Fi(undoubtedly)p
Fh(/)p Fi(actually)p Fh(/)p Fi(ne)-28 b(v)-17 b(er)-61
b(.)p Fc(ad)-35 b(v)25193 29970 y Fi(lisi\360)25193 31299
y(read)27543 29970 y(b\363kina.)27543 31299 y(book-)p
Fc(det)p Fi(.)p Fc(a)g(cc)4153 32892 y Fi('The)-17 b(y)279
b(ha)-22 b(v)-17 b(e)279 b(not)p Fh(/)p Fi(undoubtedly)p
Fh(/)p Fi(actually)p Fh(/)p Fi(ne)-28 b(v)-17 b(er)286
b(read)277 b(the)h(book.)-77 b(')p 0 TeXcolorgray 2119
34497 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)g(e)-17 b(y)4406 35825 y(the)g(y)6738 34497 y(ha)-22
b(v)-28 b(a)6738 35825 y(ha)-22 b(v)-17 b(e)9232 34497
y(lisi\360)9232 35825 y(read)11582 34497 y(b\363kina)11582
35825 y(book-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)17840 34497
y Fg(t\341)p Ff(/)p Fg(har)p Ff(/)p Fg(v\346l)279 b(o)-11
b(g)277 b(vir\360iliga)p Fi(.)17840 35825 y(then)p Fh(/)p
Fi(there)p Fh(/)p Fi(well)i(and)f(thoroughly.)p Fc(ad)-35
b(v)4153 37418 y Fi('The)-17 b(y)279 b(ha)-22 b(v)-17
b(e)279 b(read)f(the)f(book)i(then)p Fh(/)p Fi(there)p
Fh(/)p Fi(well)g(and)f(thoroughly)-72 b(.)-77 b(')p 0
TeXcolorgray 2119 39023 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(T)g(e)-17 b(y)4344 40351 y(the)g(y)6676
39023 y(ha)-22 b(v)-28 b(a)6676 40351 y(ha)-22 b(v)-17
b(e)9170 39023 y(lisi\360)9170 40351 y(read)11520 39023
y(hesa)11520 40351 y(this)13930 39023 y(\363gvulig)-6
b(a)13930 40351 y(e)-17 b(xtremely)-72 b(.)p Fc(ad)-35
b(v)20577 39023 y Fi(longu)20577 40351 y(long)23542 39023
y(b\363kina)23542 40351 y(book-)p Fc(det)p Fi(.)p Fc(a)g(cc)29799
39023 y Fi(sera)29799 40351 y(v)-17 b(ery)-72 b(.)p Fc(ad)-35
b(v)4153 41790 y Fi(v\346l.)4153 43119 y(well)4153 44712
y('The)-17 b(y)279 b(ha)-22 b(v)-17 b(e)279 b(read)f(this)e(e)-17
b(xtremely)279 b(long)f(book)g(v)-17 b(ery)279 b(well.)-77
b(')189 46815 y(Let')-61 b(s)382 b(end)i(by)f(looking)h(at)f(the)g
(case)g(of)g(subject,)g(object,)g(and)h(indirect)f(object.)h(The)-1386
48143 y(re)-17 b(gular)261 b Fg(subject)280 b Fi(case)260
b(in)g(F)-17 b(aroese)261 b(is)d Fg(nominative)p Fi(,)k(as)d(we)h
(already)h(ha)-22 b(v)-17 b(e)261 b(seen)g(in)e(pre)-28
b(vious)-1386 49472 y(e)-17 b(xamples:)p 0 TeXcolorgray
-832 51575 a(\(27\))p 0 TeXcolorgray 0 TeXcolorgray 1107
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w Fg(Hann)4344 52903 y Fi(he.)p Fc(nom)p Fi(.)p Fc(sg)9133
51575 y Fi(skri)-28 b(v)g(ar)-61 b(.)9133 52903 y(write.3)p
Fc(sg)4153 54496 y Fi('He)277 b(writes.)-77 b(')p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
32485 -3091 a Fb(11)p 0 TeXcolorgray 0 TeXcolorgray 859
-877 a Fi(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w Fg(Hon)3146 451 y Fi(she.)p Fc(nom)p Fi(.)p Fc(sg)8365
-877 y Fi(arbei\360ir)-61 b(.)8365 451 y(w)-11 b(ork.3)p
Fc(sg)2894 2015 y Fi('She)277 b(w)-11 b(orks.)-77 b(')p
0 TeXcolorgray 859 3592 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w Fg(B\370rnini)3084 4920 y Fi(child-)p
Fc(det)p Fi(.)p Fc(nom)p Fi(.)p Fc(pl)q Fi(play)-72 b(.3)p
Fc(pl)14403 3592 y Fi(sp\346la.)2894 6484 y('The)277
b(children)h(play')p 0 TeXcolorgray 859 8060 a(\(d\))p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 996 w Fg(V)-82
b(it)3146 9389 y Fi(we.)p Fc(nom)p Fi(.)p Fc(pl)8120
8060 y Fi(settu)8120 9389 y(put)10653 8060 y(ni\360ur)10653
9389 y(do)-28 b(wn)13528 8060 y(epli)13528 9389 y(potato.)p
Fc(pl)17921 8060 y Fi(\355)276 b(gj\341r.)17921 9389
y(yesterday)2894 10953 y('W)-89 b(e)277 b(planted)h(potatoes)h
(yesterday)-72 b(.)-77 b(')-1071 12883 y(Before)584 b(we)g(continue,)h
(it)d(should)i(be)g(mentioned)i(that)d(some)h(v)-17 b(erbs)584
b(tak)-11 b(e)584 b(non-)-2646 14212 y(nominati)-28 b(v)-17
b(e)280 b(subjects)d(in)g(modern)i(F)-17 b(aroese,)278
b(b)-22 b(ut)278 b(we)f(w)-11 b(on')-20 b(t)277 b(look)h(further)f
(into)g(that)h(here.)-1071 15540 y(Looking)237 b(at)e
Fg(dir)-41 b(ect)235 b(object)256 b Fi(case)236 b(we)f(can)h(say)f
(that)g(the)g Fg(accusative)i Fi(is)d(the)i(def)-11 b(ault)235
b(case,)-2646 16868 y(as)277 b(we)h(ha)-22 b(v)-17 b(e)279
b(already)f(seen)g(in)f(pre)-28 b(vious)278 b(e)-17 b(xamples:)p
0 TeXcolorgray -2092 18799 a(\(28\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Hon)3084 20127 y(she)5433 18799
y(k)-11 b(e)-17 b(ypti)5433 20127 y(b)-22 b(uy)-72 b(.)p
Fc(pst)9078 18799 y Fi(b\363kina.)9078 20127 y(book-)p
Fc(det)p Fi(.)p Fc(a)-35 b(cc)2894 21691 y Fi('She)277
b(bought)i(the)f(book.)-77 b(')p 0 TeXcolorgray 859 23268
a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Hann)3146 24596 y(he)5986 23268 y(seldi)5986 24596
y(sell.)p Fc(pst)9603 23268 y Fi(telduna.)9603 24596
y(computer)-22 b(-)p Fc(det)p Fi(.)p Fc(a)-35 b(cc)2894
26160 y Fi('He)277 b(sold)g(the)g(computer)-61 b(.)-77
b(')-1071 28091 y(It)334 b(should)i(be)f(mentioned,)i(ho)-28
b(we)g(v)-17 b(er)-44 b(,)337 b(that)e(a)g(number)h(of)f(v)-17
b(erbs)335 b(tak)-11 b(e)336 b(a)e(direct)h(object)-2646
29419 y(in)308 b(dati)-28 b(v)-17 b(e)310 b(case,)e(which)i(we)e(also)g
(touched)i(upon)g(earlier)-44 b(,)307 b(b)-22 b(ut)308
b(we)h(will)e(restrict)f(ourselv)-17 b(es)-2646 30747
y(here)253 b(to)e(saying)i(that)f(among)i(the)e(v)-17
b(erbs)252 b(that)g(tak)-11 b(e)253 b(a)f(direct)g(object)g(in)g(the)g
(dati)-28 b(v)-17 b(e)254 b(are)e(v)-17 b(erbs)-2646
32076 y(of)261 b(helping,)i(ordering,)f(praising,)f(thanking,)i
(welcoming,)g(etc.,)e(leading)i(one)g(to)e(associate)-2646
33404 y(the)400 b(dati)-28 b(v)-17 b(e)402 b(objects)f(with)e(thematic)
i(roles)e(such)i(as)e(recipients)i(and)g(e)-17 b(xperiencers.)403
b(The)-2646 34733 y(semantic)247 b(v)-17 b(erb)247 b(classes)e(and)i
(thematic)g(roles)e(we)h(ha)-22 b(v)-17 b(e)248 b(mentioned)g(are)e
(roughly)h(the)f(same)-2646 36061 y(as)284 b(the)g(ones)g(taking)h(a)f
(dati)-28 b(v)-17 b(e)285 b(object)g(in)e(Icelandic,)i(although)h(dati)
-28 b(v)-17 b(e)285 b(objects)g(are)f(getting)-2646 37389
y(more)309 b(rare)g(in)f(modern)i(F)-17 b(aroese)311
b(while)e(still)d(being)k(pre)-28 b(v)g(alent)311 b(in)e(Icelandic)h
(\(Thr\341insson)-2646 38718 y(et)277 b(al.)g(2012:)h(257-258\).)-1071
40046 y(At)312 b(last)f(we)i(ha)-22 b(v)-17 b(e)314 b(the)f
Fg(indir)-41 b(ect)312 b(object)p Fi(,)h(which)h(tak)-11
b(es)312 b(the)h Fg(dative)g Fi(as)f(its)f(def)-11 b(ault)313
b(case,)-2646 41374 y(as)280 b(we)g(ha)-22 b(v)-17 b(e)282
b(seen)e(in)g(pre)-28 b(vious)281 b(e)-17 b(xamples.)282
b(Among)f(the)f(v)-17 b(erbs)281 b(taking)g(an)f(indirect)g(object)
-2646 42703 y(are)e(v)-17 b(erbs)277 b(meaning)j(')-61
b(sell',)275 b(')-11 b(lend',)277 b('gi)-28 b(v)-17 b(e',)277
b(')-61 b(send',)277 b(etc.)h(Let')-61 b(s)276 b(look)i(at)f(three)h(e)
-17 b(xamples:)p 0 TeXcolorgray -2092 44633 a(\(29\))p
0 TeXcolorgray 0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Hann)3084 45962 y(he)5924
44633 y(be)g(y\360)5924 45962 y(o)p Fh(\013)p Fi(er)-61
b(.)p Fc(pst)10020 44633 y Fi(henni)10020 45962 y(she.)p
Fc(d)-35 b(a)-99 b(t)13630 44633 y Fi(starv)-72 b(.)13630
45962 y(job)-44 b(.)p Fc(a)-35 b(cc)2894 47526 y Fi('He)277
b(o)p Fh(\013)p Fi(ered)h(her)f(a)h(job)-44 b(.)-77 b(')p
0 TeXcolorgray 859 49102 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(T)g(e)-17 b(y)3146 50430 y(the)g(y)5478
49102 y(\002ngu)5478 50430 y(get.)p Fc(pst)8910 49102
y Fi(s\346r)8910 50430 y(themselv)g(es.)p Fc(d)-35 b(a)-99
b(t)15947 49102 y Fi(bil.)15947 50430 y(car)-61 b(.)p
Fc(a)-35 b(cc)2894 51994 y Fi('The)-17 b(y)278 b(got)g(themselv)-17
b(es)278 b(a)f(car)-61 b(.)-77 b(')p 0 TeXcolorgray 859
53571 a(\(c\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Fyrige)-28 b(v)3084 54899 y(for)-20 b(gi)-28 b(v)-17
b(e.)p Fc(imp)8341 53571 y Fi(honum)8341 54899 y(him.)p
Fc(d)-35 b(a)-99 b(t)12198 53571 y Fi(syndir)12198 54899
y(sin.)p Fc(pl)p Fi(.)p Fc(a)-35 b(cc)16862 53571 y Fi(hansara.)16862
54899 y(he.)p Fc(gen)2894 56463 y Fi('F)-17 b(or)d(gi)-28
b(v)-17 b(e)279 b(him)e(his)g(sins.)-77 b(')p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
33745 -3091 a Fb(12)p 0 TeXcolorgray 189 -877 a Fi(W)-89
b(e)244 b(notice)h(from)e(the)h(e)-17 b(xamples)246 b(that)e(these)g(v)
-17 b(erbs,)244 b Fg(bj\363\360a)i Fi('o)p Fh(\013)p
Fi(er',)d Fg(f\341a)h Fi('get',)f Fg(fyrig)-11 b(e)-17
b(va)-1386 451 y Fi('for)d(gi)-28 b(v)-17 b(e',)276 b(are)f(e)-17
b(xamples)278 b(of)d(v)-17 b(erbs)276 b(that)f(tak)-11
b(e)277 b(tw)-11 b(o)275 b(objects,)h(one)g(dati)-28
b(v)-17 b(e)277 b(\(indirect\))e(object)-1386 1779 y(and)339
b(one)g(accusati)-28 b(v)-17 b(e)341 b(\(direct\))c(object.)i(W)-89
b(e)339 b(call)f(these)g(v)-17 b(erbs)339 b Fg(ditr)-17
b(ansitive)p Fi(.)338 b(This)g(dati)-28 b(v)-17 b(e\226)-1386
3108 y(accusati)-28 b(v)-17 b(e)352 b(pattern)e(is)e(also)h(the)g(most)
g(common)i(case)f(marking)g(pattern)g(of)f(ditransiti)-28
b(v)-17 b(e)-1386 4436 y(v)g(erbs)381 b(in)e(Icelandic,)j(b)-22
b(ut)380 b(there)g(we)g(also)g(ha)-22 b(v)-17 b(e)382
b(man)-17 b(y)382 b(other)e(patterns,)g(such)g(as)g(dati)-28
b(v)-17 b(e\226)-1386 5764 y(dati)-28 b(v)-17 b(e,)454
b(dati)-28 b(v)-17 b(e\226geniti)-28 b(v)-17 b(e,)457
b(accusati)-28 b(v)-17 b(e\226dati)-28 b(v)-17 b(e,)457
b(accusati)-28 b(v)-17 b(e\226geniti)-28 b(v)-17 b(e,)458
b(and)453 b(accusati)-28 b(v)-17 b(e\226)-1386 7093 y(accusati)-28
b(v)-17 b(e,)306 b(most)c(of)h(which)h(are)f(not)g(found)h(in)e(F)-17
b(aroese)305 b(\(Thr\341insson)e(et)g(al.)f(2012:)j(262-)-1386
8421 y(263\).)-1386 11493 y(3.)775 b(M)p Fc(iddle)277
b Fi(C)p Fc(onstr)-35 b(uctions)277 b(in)g Fi(F)-73 b
Fc(ar)-35 b(oese)-1386 13319 y Fi(Abo)-17 b(v)g(e)253
b(we)e(brie\003y)g(touched)h(on)f(middle)g(forms)e(in)i(F)-17
b(aroese,)251 b(b)-22 b(ut)251 b(since)f(the)-17 b(y)252
b(are)e(the)h(main)-1386 14648 y(subject)278 b(of)f(this)f(paper)i(we)g
(need)h(to)d(look)i(deeper)h(into)e(them.)189 15976 y(W)-89
b(e)506 b(mentioned)j(that)c(the)i(middle)f(constructions)h(are)f
(formed)h(by)f(adding)i Fg(-st)524 b Fi(to)-1386 17305
y(v)-28 b(arious)295 b(in\003ectional)i(forms)c(of)i(the)f(v)-17
b(erb,)296 b(b)-22 b(ut)294 b(let')-61 b(s)294 b(no)-28
b(w)295 b(look)g(further)g(at)f(the)h(origin)f(and)-1386
18633 y(semantics)278 b(of)f(the)g(middle)h(constructions.)189
19961 y(The)271 b(origin)f(of)g(the)g Fg(-st)289 b Fi(su)p
Fh(\016)p Fi(x)271 b(is)e(considered)j(to)e(be)g(the)h(re\003e)-17
b(xi)-28 b(v)-17 b(e)273 b(pronoun)f Fg(sik)288 b Fi(in)270
b(Old)-1386 21290 y(Norse,)251 b(which)h(corresponds)h(to)e(the)h
(re\003e)-17 b(xi)-28 b(v)-17 b(e)254 b Fg(se)-44 b(g)251
b Fi(in)g(modern)i(F)-17 b(aroese.)252 b(Thus)g(Old)f(Norse)-1386
22618 y Fg(setja)301 b(sik)320 b Fi(became)303 b Fg(setjast)320
b Fi(')-61 b(sit)300 b(do)-28 b(wn',)302 b(possibly)g(via)g(the)f
(intermediate)i(form)e Fg(setjask)p Fi(.)g(In)-1386 23946
y(modern)353 b(F)-17 b(aroese)353 b(this)e(e)-28 b(v)-22
b(olv)-17 b(ed)354 b(to)e Fg(setast)371 b Fi(\(the)351
b(Old)h(Norse)f(v)-17 b(erb)353 b Fg(setja)e Fi(became)j
Fg(seta)d Fi(in)-1386 25275 y(modern)279 b(F)-17 b(aroese\))278
b(\(Thr\341insson)g(et)f(al.)f(2012:)j(277\).)189 26603
y(As)233 b(we)h(mentioned)i(in)e(the)g(pre)-28 b(vious)235
b(section,)g(the)f(middle)g(forms)f(in)h(v)-28 b(arious)235
b(can)f(ha)-22 b(v)-17 b(e)-1386 27931 y(a)387 b(wide)g(v)-28
b(ariety)387 b(of)f(meanings,)i(i.e.)f(the)g(semantics)g(v)-28
b(aries)387 b(according)h(to)f(what)g(v)-17 b(erb)387
b(is)-1386 29260 y(used.)217 b(W)-89 b(e)216 b(no)-28
b(w)217 b(mention)g(the)f(v)-28 b(arious)217 b(semantic)f(meanings)i
(with)d(accompan)-17 b(ying)221 b(glossed)-1386 30588
y(e)-17 b(xamples)247 b(\(we)d(add)i Ff(+)p Fg(st)264
b Fi(to)244 b(the)h(gloss)f(to)h(indicate)h(an)f Fg(-st)20
b Fi(-form\))242 b(\(Thr\341insson)j(et)g(al.)f(2012:)-1386
31916 y(277-278\).)-1386 34864 y Fg(Re\003e)-22 b(xive)280
b(meaning)p 0 TeXcolorgray -832 36690 a Fi(\(30\))p 0
TeXcolorgray 0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Eg)4344 38019 y(I)6016
36690 y(settist)6016 38019 y(sit)p Fh(+)p Fi(st.)p Fc(pst)10584
36690 y Fi(ni\360ur)-61 b(.)10584 38019 y(do)-28 b(wn)4153
39611 y('I)276 b(sat)h(do)-28 b(wn.)-77 b(')p 0 TeXcolorgray
2119 42545 a(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 996 w(T)g(e)-17 b(y)4406 43873 y(The)g(y)7107
42545 y(v)-28 b(andust)7107 43873 y(get-used)p Fh(+)p
Fi(st.)p Fc(pst)14378 42545 y Fi(skj\363tt)14378 43873
y(soon)17282 42545 y(vi\360)17282 43873 y(with)19693
42545 y(hitan.)19693 43873 y(heat-)p Fc(def)4153 45466
y Fi('The)-17 b(y)279 b(soon)f(got)f(used)h(to)f(the)g(heat.)-77
b(')-1386 48413 y Fg(Recipr)-50 b(ocal)279 b(meaning)p
0 TeXcolorgray -832 50240 a Fi(\(31\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(Ma\360urin)4344 51568 y(Man-)p Fc(def)8618
50240 y Fi(og)8618 51568 y(and)10659 50240 y(k)-11 b(onan)10659
51568 y(w)g(oman-)p Fc(def)16152 50240 y Fi(heilsa\360ust.)16152
51568 y(greet)p Fh(+)p Fi(st.)p Fc(pst)4153 53161 y Fi('The)278
b(man)g(and)g(the)g(w)-11 b(oman)278 b(greeted)h(each)f(other)-61
b(.)-77 b(')p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
32485 -3091 a Fb(13)p 0 TeXcolorgray 0 TeXcolorgray 859
-877 a Fi(\(b\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(T)-77 b(e)-17 b(y)3146 451 y(The)g(y)5847 -877
y(b\355tast)5847 451 y(bit)p Fh(+)p Fi(st.)p Fc(prs)10607
-877 y Fi(og)10607 451 y(and)12648 -877 y(kl\363rast.)12648
451 y(scratch)p Fh(+)p Fi(st.)p Fc(prs)2894 2044 y Fi('The)g(y)278
b(bite)f(and)h(scratch)g(each)h(other)-61 b(.)-77 b(')276
b(\(i.e.)g('The)-17 b(y)279 b(\002ght.)-77 b('\))-2646
4991 y Fg(Modal)278 b(meaning)p 0 TeXcolorgray -2092
6818 a Fi(\(32\))p 0 TeXcolorgray 0 TeXcolorgray 1107
w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
996 w(Ikki)3084 8146 y(not)5310 6818 y(slepst)5310 8146
y(get)p Fh(+)p Fi(st.)p Fc(prs)10254 6818 y Fi(uppaftur)10254
8146 y(upp)g(ag)-6 b(ain)15026 6818 y(uttan)15026 8146
y(without)18851 6818 y(hj\341lp.)18851 8146 y(help)2894
9739 y('One)277 b(cannot)i(get)e(back)i(up)f(without)f(help.)-77
b(')p 0 TeXcolorgray 859 12672 a(\(b\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Ikki)3146 14001 y(not)5372
12672 y(k)-11 b(emst)5372 14001 y(get)p Fh(+)p Fi(st.)p
Fc(prs)10316 12672 y Fi(uttanum,)10316 14001 y(around)14664
12672 y(at)14664 14001 y(that)16767 12672 y(m\341li\360)16767
14001 y(language-)p Fc(def)23008 12672 y Fi(he)-28 b(vur)23008
14001 y(ha)-22 b(v)-17 b(e.)p Fc(prs)27208 12672 y Fi(t\375dning.)27208
14001 y(importance)2894 15594 y('One)277 b(cannot)i(get)e(around)i(the)
f(f)-11 b(act)277 b(that)g(language)j(is)c(important.)-77
b(')-2646 19869 y Fg(Middle)278 b(\(or)f(passive\))g(meaning)p
0 TeXcolorgray -2092 21696 a Fi(\(33\))p 0 TeXcolorgray
0 TeXcolorgray 1107 w(\(a\))p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 996 w(\315b\372\360)3084 23024 y(apartment)7953
21696 y(ynskist)7953 23024 y(wish)p Fh(+)p Fi(st.)p Fc(prs)13635
21696 y Fi(til)13635 23024 y(to)15001 21696 y(leigu.)15001
23024 y(rent)2894 24617 y('Apartment)g(for)g(rent)g(is)f(sought.)-77
b(')p 0 TeXcolorgray 859 27551 a(\(b\))p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 996 w(Hon)3146 28879 y(she)5495
27551 y(ho)-11 b(yrdist)5495 28879 y(hear)p Fh(+)p Fi(st.)p
Fc(pst)10921 27551 y Fi(syngja)10921 28879 y(sing)14254
27551 y(lang)-6 b(a)14254 28879 y(long)17089 27551 y(lei\360.)17089
28879 y(w)-11 b(ay)2894 30472 y('She)277 b(w)-11 b(as)277
b(heard)i(singing)e(from)g(a)g(distance.)-77 b(')-2646
33544 y(4.)775 b(I)p Fc(mplement)-82 b(a)-99 b(tion)278
b(of)f(the)g Fi(L)p Fc(exicon)-2646 35370 y Fi(5.)775
b(I)p Fc(mplement)-82 b(a)-99 b(tion)278 b(of)f(the)g
Fi(P)-91 b Fc(arser)-2646 37197 y Fi(6.)775 b(A)p Fc(n)-30
b(al)-90 b(ysis)276 b(of)i Fi(T)p Fc(est)f Fi(D)-40 b
Fc(a)-99 b(t)-82 b(a)-2646 39023 y Fi(7.)775 b(T)p Fc(esting)277
b(of)h(the)f Fi(P)-91 b Fc(arser)12527 40517 y Fk(REFERENCES)p
0 TeXcolorgray 0 TeXcolorgray -2646 42012 a(Thr\341insson,)257
b(H\366skuldur)-35 b(,)255 b(Hjalmar)i(P)-98 b(.)256
b(Petersen,)h(J\363gv)-22 b(an)255 b(\355)h(Lon)f(Jacobsen)h(&)g
(Zakaris)g(Sv)-22 b(abo)256 b(Hansen.)g(2012.)-1760 43008
y Fl(F)-66 b(ar)-40 b(oese)313 b(\226)e(an)h(o)-9 b(vervie)c(w)312
b(and)g(r)-33 b(efer)g(ence)314 b(gr)-13 b(ammar)p Fk(.)609
b(F)-13 b(aroe)312 b(Uni)-22 b(v)-13 b(ersity)313 b(Press)g(and)f
(Linguistic)h(Institute,)-1760 44004 y(Uni)-22 b(v)-13
b(ersity)222 b(of)f(Iceland)g(2nd)g(edn.)p 0 TeXcolorgray
0 TeXcolorgray -2646 46550 a Fa(A)-20 b(uthor')-40 b(s)249
b(addr)-37 b(ess:)497 b(Institute)249 b(of)g(T)-92 b(ec)-15
b(hnolo)-10 b(gy)251 b(Blanc)-15 b(har)-37 b(dstown,)249
b(Blanc)-15 b(har)-37 b(dstown)249 b(Road)4923 47657
y(North,)f(Dublin)i(15,)f(Ir)-37 b(eland)4923 48764 y
(B00108126@student.itb)d(.ie)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
